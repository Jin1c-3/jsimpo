"use strict";const bundleWalk=require("npm-bundled");const BundleWalker=bundleWalk.BundleWalker;const BundleWalkerSync=bundleWalk.BundleWalkerSync;const ignoreWalk=require("ignore-walk");const IgnoreWalker=ignoreWalk.Walker;const IgnoreWalkerSync=ignoreWalk.WalkerSync;const rootBuiltinRules=Symbol("root-builtin-rules");const packageNecessaryRules=Symbol("package-necessary-rules");const path=require("path");const normalizePackageBin=require("npm-normalize-package-bin");const packageMustHaveFileNames="readme|copying|license|licence";const packageMustHaves=`@(${packageMustHaveFileNames}){,.*[^~$]}`;const packageMustHavesRE=new RegExp(`^(${packageMustHaveFileNames})(\\..*[^~$])?$`,"i");const fs=require("fs");const glob=require("glob");const defaultRules=[".npmignore",".gitignore","**/.git","**/.svn","**/.hg","**/CVS","**/.git/**","**/.svn/**","**/.hg/**","**/CVS/**","/.lock-wscript","/.wafpickle-*","/build/config.gypi","npm-debug.log","**/.npmrc",".*.swp",".DS_Store","**/.DS_Store/**","._*","**/._*/**","*.orig","/package-lock.json","/yarn.lock","/archived-packages/**"];const nameIsBadForWindows=e=>/\*/.test(e);const npmWalker=s=>class e extends s{constructor(e){e=e||{};e.ignoreFiles=[rootBuiltinRules,"package.json",".npmignore",".gitignore",packageNecessaryRules];e.includeEmpty=false;e.path=e.path||process.cwd();const s=/^(?:\/node_modules\/(?:@[^/]+\/[^/]+|[^/]+)\/)*\/node_modules(?:\/@[^/]+)?$/;const a=e.parent?e.parent.root:e.path;const n=e.path.replace(/\\/g,"/").substr(a.length);e.follow=s.test(n);super(e);if(!this.parent){this.bundled=e.bundled||[];this.bundledScopes=Array.from(new Set(this.bundled.filter(e=>/^@/.test(e)).map(e=>e.split("/")[0])));const t=defaultRules.join("\n")+"\n";this.packageJsonCache=e.packageJsonCache||new Map;super.onReadIgnoreFile(rootBuiltinRules,t,e=>e)}else{this.bundled=[];this.bundledScopes=[];this.packageJsonCache=this.parent.packageJsonCache}}onReaddir(e){if(!this.parent){e=e.filter(e=>e!==".git"&&!(e==="node_modules"&&this.bundled.length===0))}if(this.parent||!e.includes("package.json"))return super.onReaddir(e);const s=path.resolve(this.path,"package.json");if(this.packageJsonCache.has(s)){const a=this.packageJsonCache.get(s);if(!a||typeof a!=="object")return this.readPackageJson(e);return this.getPackageFiles(e,JSON.stringify(a))}this.readPackageJson(e)}onReadPackageJson(e,s,a){if(s)this.emit("error",s);else this.getPackageFiles(e,a)}mustHaveFilesFromPackage(e){const s=[];if(e.browser)s.push("/"+e.browser);if(e.main)s.push("/"+e.main);if(e.bin){for(const a in e.bin)s.push("/"+e.bin[a])}s.push("/package.json","/npm-shrinkwrap.json","!/package-lock.json",packageMustHaves);return s}getPackageFiles(s,o){try{o=normalizePackageBin(JSON.parse(o.toString()))}catch(e){return super.onReaddir(s)}const e=path.resolve(this.path,"package.json");this.packageJsonCache.set(e,o);if(!Array.isArray(o.files))return super.onReaddir(s);o.files.push(...this.mustHaveFilesFromPackage(o));if((o.bundleDependencies||o.bundledDependencies)&&s.includes("node_modules"))o.files.push("node_modules");const a=Array.from(new Set(o.files)).reduce((e,s)=>{const a=s.match(/^!+/);if(a)s=s.substr(a[0].length);s=s.replace(/^\/+/,"");const n=a&&a[0].length%2===1;e.push({pattern:s,negate:n});return e},[]);let r=a.length;const l=new Set;const c=new Set;const i=[];const p=(e,s,a,n,t)=>{if(a)return this.emit("error",a);i[t]={negate:s,fileList:n};if(--r===0)u(i)};const u=e=>{for(const{negate:n,fileList:t}of e){if(n){t.forEach(e=>{e=e.replace(/\/+$/,"");l.delete(e);c.add(e)})}else{t.forEach(e=>{e=e.replace(/\/+$/,"");l.add(e);c.delete(e)})}}const s=Array.from(l);o.files=s.concat(Array.from(c).map(e=>"!"+e));const a=Array.from(new Set(s.map(e=>e.replace(/^\/+/,""))));super.onReaddir(a)};a.forEach(({pattern:a,negate:n},t)=>this.globFiles(a,(e,s)=>p(a,n,e,s,t)))}filterEntry(e,s){const a=this.path.substr(this.root.length+1);const n=/^node_modules\/(@[^/]+\/?[^/]+|[^/]+)(\/.*)?$/;const t=!this.parent;const o=t&&n.test(e)?e.replace(n,"$1"):null;const r=t&&e==="node_modules";const l=t&&e==="package.json";return/^node_modules($|\/)/i.test(a)?this.parent.filterEntry(this.basename+"/"+e,s):o?this.bundled.indexOf(o)!==-1||this.bundledScopes.indexOf(o)!==-1:r?!!this.bundled.length:l?true:packageMustHavesRE.test(e)?true:t&&(e==="npm-shrinkwrap.json"||e==="package.json")?true:t&&e==="package-lock.json"?false:super.filterEntry(e,s)}filterEntries(){if(this.ignoreRules[".npmignore"])this.ignoreRules[".gitignore"]=null;this.filterEntries=super.filterEntries;super.filterEntries()}addIgnoreFile(e,s){const a=path.resolve(this.path,e);if(e==="package.json"&&this.parent)s();else if(this.packageJsonCache.has(a))this.onPackageJson(a,this.packageJsonCache.get(a),s);else super.addIgnoreFile(e,s)}onPackageJson(e,s,a){this.packageJsonCache.set(e,s);if(Array.isArray(s.files)){super.onReadIgnoreFile("package.json",s.files.map(e=>"!"+e).join("\n")+"\n",a)}else{const n=this.mustHaveFilesFromPackage(s).map(e=>`!${e}`);const t=n.join("\n")+"\n";super.onReadIgnoreFile(packageNecessaryRules,t,a)}}stat(e,s,a,n){if(nameIsBadForWindows(e))n();else super.stat(e,s,a,n)}onstat(e,s,a,n,t){if(e.isSymbolicLink())t();else super.onstat(e,s,a,n,t)}onReadIgnoreFile(e,s,a){if(e==="package.json"){try{const n=path.resolve(this.path,e);this.onPackageJson(n,JSON.parse(s),a)}catch(e){a()}}else super.onReadIgnoreFile(e,s,a)}sort(e,s){return sort(e,s)}};class Walker extends npmWalker(IgnoreWalker){globFiles(e,s){glob(e,{dot:true,cwd:this.path,nocase:true},s)}readPackageJson(a){fs.readFile(this.path+"/package.json",(e,s)=>this.onReadPackageJson(a,e,s))}walker(e,s){new Walker(this.walkerOpt(e)).on("done",s).start()}}class WalkerSync extends npmWalker(IgnoreWalkerSync){globFiles(e,s){s(null,glob.sync(e,{dot:true,cwd:this.path,nocase:true}))}readPackageJson(s){const e=this.path+"/package.json";try{this.onReadPackageJson(s,null,fs.readFileSync(e))}catch(e){this.onReadPackageJson(s,e)}}walker(e,s){new WalkerSync(this.walkerOpt(e)).start();s()}}const walk=(t,s)=>{t=t||{};const e=new Promise((s,a)=>{const n=new BundleWalker(t);n.on("done",e=>{t.bundled=e;t.packageJsonCache=n.packageJsonCache;new Walker(t).on("done",s).on("error",a).start()});n.start()});return s?e.then(e=>s(null,e),s):e};const walkSync=e=>{e=e||{};const s=new BundleWalkerSync(e).start();e.bundled=s.result;e.packageJsonCache=s.packageJsonCache;const a=new WalkerSync(e);a.start();return a.result};const sort=(e,s)=>{const a=path.extname(e).toLowerCase();const n=path.extname(s).toLowerCase();const t=path.basename(e).toLowerCase();const o=path.basename(s).toLowerCase();return a.localeCompare(n,"en")||t.localeCompare(o,"en")||e.localeCompare(s,"en")};module.exports=walk;walk.sync=walkSync;walk.Walker=Walker;walk.WalkerSync=WalkerSync;