function getCompletedCertCount(n){return["isApisMicroservicesCert","is2018DataVisCert","isFrontEndLibsCert","isQaCertV7","isInfosecCertV7","isJsAlgoDataStructCert","isRespWebDesignCert","isSciCompPyCertV7","isDataAnalysisPyCertV7","isMachineLearningPyCertV7"].reduce((e,t)=>n[t]?e+1:e,0)}function getLegacyCertCount(n){return["isFrontEndCert","isBackEndCert","isDataVisCert","isInfosecQaCert"].reduce((e,t)=>n[t]?e+1:e,0)}export default function populateUser(e,l){return new Promise((i,s)=>{let o={...l};e.collection("user").aggregate([{$match:{_id:l.id}},{$project:{points:{$size:"$progressTimestamps"}}}]).get(function(e,[{points:t=1}={}]){if(e){return s(e)}l.points=t;let n=0;let r=0;if("completedChallenges"in l){n=l.completedChallenges.length;l.completedChallenges.forEach(e=>{if("challengeType"in e&&(e.challengeType===3||e.challengeType===4)){r++}})}o.completedChallengeCount=n;o.completedProjectCount=r;o.completedCertCount=getCompletedCertCount(l);o.completedLegacyCertCount=getLegacyCertCount(l);o.completedChallenges=[];return i(o)})})}