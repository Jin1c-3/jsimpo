import{Promise}from"meteor/promise";import{Migrations}from"../../../app/migrations";import{Sessions}from"../../../app/models/server/raw";import{getMostImportantRole}from"../../../app/statistics/server/lib/getMostImportantRole";async function migrateSessions(){const e=Sessions.col.aggregate([{$match:{$or:[{mostImportantRole:{$exists:0}},{mostImportantRole:null}]}},{$group:{_id:"$userId"}},{$lookup:{from:"users",localField:"_id",foreignField:"_id",as:"user"}},{$unwind:"$user"},{$project:{"user.roles":1}},{$match:{"user.roles.0":{$exists:1}}}]);let o=[];for await(const s of e){o.push({updateMany:{filter:{userId:s._id},update:{$set:{mostImportantRole:getMostImportantRole(s.user.roles)}}}});if(o.length===100){await Sessions.col.bulkWrite(o,{ordered:false});o=[]}}if(o.length){await Sessions.col.bulkWrite(o,{ordered:false})}}Migrations.add({version:211,up(){Promise.await(migrateSessions())}});