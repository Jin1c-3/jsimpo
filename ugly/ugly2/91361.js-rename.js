const visit=require(`unist-util-visit`);const{interopDefault}=require(`./interop-default`);const withPathPrefix=(e,t)=>(t+e).replace(/\/\//,`/`);module.exports=async function e({gatsbyRemarkPlugins:t,mdxNode:n,getNode:o,getNodesByType:u,reporter:s,cache:a,pathPrefix:l,...f}){let r=undefined;if(l){r=()=>async function e(t){visit(t,[`link`,`definition`],e=>{if(e.url&&e.url.startsWith(`/`)&&!e.url.startsWith(`//`)){e.url=withPathPrefix(e.url,l)}});return t}}const i=t.filter(e=>typeof interopDefault(require(e.resolve))===`function`);if(!i.length){return r?[r]:[]}const c=i.map(r=>{const i=interopDefault(require(r.resolve));const e=()=>async function e(t){await i({markdownAST:t,markdownNode:n,getNode:o,getNodesByType:u,get files(){return u(`File`)},pathPrefix:l,reporter:s,cache:a,...f},r.options||{});return t};return[e,{}]});if(r){return[r,...c]}else{return[...c]}};