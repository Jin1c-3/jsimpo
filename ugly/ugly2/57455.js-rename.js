[{input:"z=b&a=b&z=a&a=a",output:[["a","b"],["a","a"],["z","b"],["z","a"]]},{input:"�=x&￼&�=a",output:[["￼",""],["�","x"],["�","a"]]},{input:"ﬃ&🌈",output:[["🌈",""],["ﬃ",""]]},{input:"é&e�&é",output:[["é",""],["e�",""],["é",""]]},{input:"z=z&a=a&z=y&a=b&z=x&a=c&z=w&a=d&z=v&a=e&z=u&a=f&z=t&a=g",output:[["a","a"],["a","b"],["a","c"],["a","d"],["a","e"],["a","f"],["a","g"],["z","z"],["z","y"],["z","x"],["z","w"],["z","v"],["z","u"],["z","t"]]},{input:"bbb&bb&aaa&aa=x&aa=y",output:[["aa","x"],["aa","y"],["aaa",""],["bb",""],["bbb",""]]},{input:"z=z&=f&=t&=x",output:[["","f"],["","t"],["","x"],["z","z"]]},{input:"a🌈&a💩",output:[["a🌈",""],["a💩",""]]}].forEach(u=>{test(()=>{let t=new URLSearchParams(u.input),e=0;t.sort();for(let a of t){assert_array_equals(a,u.output[e]);e++}},"Parse and sort: "+u.input);test(()=>{let a=new URL("?"+u.input,"https://example/");a.searchParams.sort();let t=new URLSearchParams(a.search),e=0;for(let a of t){assert_array_equals(a,u.output[e]);e++}},"URL parse and sort: "+u.input)});test(function(){const a=new URL("http://example.com/?");a.searchParams.sort();assert_equals(a.href,"http://example.com/");assert_equals(a.search,"")},"Sorting non-existent params removes ? from URL");