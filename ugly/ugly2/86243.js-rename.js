var ArrayUtils=require("../../utils/array");var BlendModes=require("../../renderer/BlendModes");var Class=require("../../utils/Class");var Components=require("../components");var Events=require("../events");var GameObject=require("../GameObject");var Rectangle=require("../../geom/rectangle/Rectangle");var Render=require("./ContainerRender");var Union=require("../../geom/rectangle/Union");var Vector2=require("../../math/Vector2");var Container=new Class({Extends:GameObject,Mixins:[Components.AlphaSingle,Components.BlendMode,Components.ComputedSize,Components.Depth,Components.Mask,Components.Pipeline,Components.Transform,Components.Visible,Render],initialize:function t(i,e,r,n){GameObject.call(this,i,"Container");this.list=[];this.exclusive=true;this.maxSize=-1;this.position=0;this.localTransform=new Components.TransformMatrix;this.tempTransformMatrix=new Components.TransformMatrix;this._sortKey="";this._sysEvents=i.sys.events;this.scrollFactorX=1;this.scrollFactorY=1;this.initPipeline();this.setPosition(e,r);this.clearAlpha();this.setBlendMode(BlendModes.SKIP_CHECK);if(n){this.add(n)}},originX:{get:function(){return.5}},originY:{get:function(){return.5}},displayOriginX:{get:function(){return this.width*.5}},displayOriginY:{get:function(){return this.height*.5}},setExclusive:function(t){if(t===undefined){t=true}this.exclusive=t;return this},getBounds:function(t){if(t===undefined){t=new Rectangle}t.setTo(this.x,this.y,0,0);if(this.parentContainer){var i=this.parentContainer.getBoundsTransformMatrix();var e=i.transformPoint(this.x,this.y);t.setTo(e.x,e.y,0,0)}if(this.list.length>0){var r=this.list;var n=new Rectangle;var s=false;t.setEmpty();for(var o=0;o<r.length;o++){var l=r[o];if(l.getBounds){l.getBounds(n);if(!s){t.setTo(n.x,n.y,n.width,n.height);s=true}else{Union(n,t,t)}}}}return t},addHandler:function(t){t.once(Events.DESTROY,this.remove,this);if(this.exclusive){if(t.parentContainer){t.parentContainer.remove(t)}t.removeFromDisplayList();t.parentContainer=this}},removeHandler:function(t){t.off(Events.DESTROY,this.remove);if(this.exclusive){t.parentContainer=null;t.addToDisplayList()}},pointToContainer:function(t,i){if(i===undefined){i=new Vector2}if(this.parentContainer){this.parentContainer.pointToContainer(t,i)}else{i=new Vector2(t.x,t.y)}var e=this.tempTransformMatrix;e.applyITRS(this.x,this.y,this.rotation,this.scaleX,this.scaleY);e.invert();e.transformPoint(t.x,t.y,i);return i},getBoundsTransformMatrix:function(){return this.getWorldTransformMatrix(this.tempTransformMatrix,this.localTransform)},add:function(t){ArrayUtils.Add(this.list,t,this.maxSize,this.addHandler,this);return this},addAt:function(t,i){ArrayUtils.AddAt(this.list,t,i,this.maxSize,this.addHandler,this);return this},getAt:function(t){return this.list[t]},getIndex:function(t){return this.list.indexOf(t)},sort:function(e,t){if(!e){return this}if(t===undefined){t=function(t,i){return t[e]-i[e]}}ArrayUtils.StableSort(this.list,t);return this},getByName:function(t){return ArrayUtils.GetFirst(this.list,"name",t)},getRandom:function(t,i){return ArrayUtils.GetRandom(this.list,t,i)},getFirst:function(t,i,e,r){return ArrayUtils.GetFirst(this.list,t,i,e,r)},getAll:function(t,i,e,r){return ArrayUtils.GetAll(this.list,t,i,e,r)},count:function(t,i,e,r){return ArrayUtils.CountAllMatching(this.list,t,i,e,r)},swap:function(t,i){ArrayUtils.Swap(this.list,t,i);return this},moveTo:function(t,i){ArrayUtils.MoveTo(this.list,t,i);return this},moveAbove:function(t,i){ArrayUtils.MoveAbove(this.list,t,i);return this},moveBelow:function(t,i){ArrayUtils.MoveBelow(this.list,t,i);return this},remove:function(t,i){var e=ArrayUtils.Remove(this.list,t,this.removeHandler,this);if(i&&e){if(!Array.isArray(e)){e=[e]}for(var r=0;r<e.length;r++){e[r].destroy()}}return this},removeAt:function(t,i){var e=ArrayUtils.RemoveAt(this.list,t,this.removeHandler,this);if(i&&e){e.destroy()}return this},removeBetween:function(t,i,e){var r=ArrayUtils.RemoveBetween(this.list,t,i,this.removeHandler,this);if(e){for(var n=0;n<r.length;n++){r[n].destroy()}}return this},removeAll:function(t){var i=ArrayUtils.RemoveBetween(this.list,0,this.list.length,this.removeHandler,this);if(t){for(var e=0;e<i.length;e++){i[e].destroy()}}return this},bringToTop:function(t){ArrayUtils.BringToTop(this.list,t);return this},sendToBack:function(t){ArrayUtils.SendToBack(this.list,t);return this},moveUp:function(t){ArrayUtils.MoveUp(this.list,t);return this},moveDown:function(t){ArrayUtils.MoveDown(this.list,t);return this},reverse:function(){this.list.reverse();return this},shuffle:function(){ArrayUtils.Shuffle(this.list);return this},replace:function(t,i,e){var r=ArrayUtils.Replace(this.list,t,i);if(r){this.addHandler(i);this.removeHandler(t);if(e){t.destroy()}}return this},exists:function(t){return this.list.indexOf(t)>-1},setAll:function(t,i,e,r){ArrayUtils.SetAll(this.list,t,i,e,r);return this},each:function(t,i){var e=[null];var r;var n=this.list.slice();var s=n.length;for(r=2;r<arguments.length;r++){e.push(arguments[r])}for(r=0;r<s;r++){e[0]=n[r];t.apply(i,e)}return this},iterate:function(t,i){var e=[null];var r;for(r=2;r<arguments.length;r++){e.push(arguments[r])}for(r=0;r<this.list.length;r++){e[0]=this.list[r];t.apply(i,e)}return this},setScrollFactor:function(t,i,e){if(i===undefined){i=t}if(e===undefined){e=false}this.scrollFactorX=t;this.scrollFactorY=i;if(e){ArrayUtils.SetAll(this.list,"scrollFactorX",t);ArrayUtils.SetAll(this.list,"scrollFactorY",i)}return this},length:{get:function(){return this.list.length}},first:{get:function(){this.position=0;if(this.list.length>0){return this.list[0]}else{return null}}},last:{get:function(){if(this.list.length>0){this.position=this.list.length-1;return this.list[this.position]}else{return null}}},next:{get:function(){if(this.position<this.list.length){this.position++;return this.list[this.position]}else{return null}}},previous:{get:function(){if(this.position>0){this.position--;return this.list[this.position]}else{return null}}},preDestroy:function(){this.removeAll(!!this.exclusive);this.localTransform.destroy();this.tempTransformMatrix.destroy();this.list=[]}});module.exports=Container;