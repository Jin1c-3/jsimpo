"use strict";var path=require("path");var convert=require("convert-source-map");var memoize=require("lodash.memoize");var createGenerator=require("inline-source-map");var pathIsAbsolute=require("./lib/path-is-absolute");var mappingsFromMap=require("./lib/mappings-from-map");var protocolRx=/^[a-z]+:\/\//;var rebaseRelativePath=memoize(function(e,r,t){if(!t){return t}var n=r?path.join(r,t):t;n=n.replace(/\\/g,"/");e=e.replace(/\\/g,"/");if(e===n||pathIsAbsolute(n)||protocolRx.test(n)){return n}return path.join(path.dirname(e),n).replace(/\\/g,"/")},function(e,r,t){return e+"::"+r+"::"+t});function resolveMap(e){var r=convert.fromSource(e);return r?r.toObject():null}function hasInlinedSource(e){return e.sourcesContent&&!!e.sourcesContent[0]}function Combiner(e,r){this.generator=createGenerator({file:e||"generated.js",sourceRoot:r})}Combiner.prototype._addGeneratedMap=function(e,r,t){this.generator.addGeneratedMappings(e,r,t);this.generator.addSourceContent(e,r);return this};Combiner.prototype._addExistingMap=function(r,e,t,n){var o=mappingsFromMap(t);for(var a=0,i=t.sources.length;a<i;a++){if(!t.sourcesContent)continue;this.generator.addSourceContent(rebaseRelativePath(r,t.sourceRoot,t.sources[a]),t.sourcesContent[a])}o.forEach(function(e){this.generator.addMappings(rebaseRelativePath(r,null,e.source),[e],n)},this);return this};Combiner.prototype.addFile=function(e,r){r=r||{};if(!r.hasOwnProperty("line"))r.line=0;if(!r.hasOwnProperty("column"))r.column=0;var t=resolveMap(e.source);return t&&hasInlinedSource(t)?this._addExistingMap(e.sourceFile,e.source,t,r):this._addGeneratedMap(e.sourceFile,e.source,r)};Combiner.prototype.base64=function(){return this.generator.base64Encode()};Combiner.prototype.comment=function(){return this.generator.inlineMappingUrl()};exports.create=function(e,r){return new Combiner(e,r)};exports.removeComments=function(e){if(!e.replace)return e;return e.replace(convert.commentRegex,"").replace(convert.mapFileCommentRegex,"")};