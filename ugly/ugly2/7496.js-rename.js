import PROMPT_ANSWER from"@/graphql/prompt/promptAnswer.gql";export default function({field:a,query:l,variables:s=null,updateQuery:u=null,update:n=null}){return{computed:{configurationValid(){return this.visiblePrompts.filter(e=>e.error||e.value===null||JSON.parse(e.value)==="").length===0},hasPromptsChanged(){return!!this.visiblePrompts.find(e=>e.valueChanged)},visiblePrompts(){if(!this[a]){return[]}return this[a].prompts.filter(e=>e.visible)}},watch:{hasPromptsChanged:{handler(e){this.$emit("has-changes",e)},immediate:true}},methods:{async answerPrompt({prompt:e,value:t}){await this.$apollo.mutate({mutation:PROMPT_ANSWER,variables:{input:{id:e.id,value:JSON.stringify(t)}},update:(e,{data:{promptAnswer:t}})=>{if(n){n.call(this,e,t);return}let r=s||this.$apollo.queries[a].options.variables||undefined;if(typeof r==="function"){r=r.call(this)}const i=e.readQuery({query:l,variables:r});if(u){u.call(this,i,t)}else{i[a].prompts=t}e.writeQuery({query:l,variables:r,data:i})}})}}}}