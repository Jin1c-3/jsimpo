"use strict";loadSubScript("chrome://juggler/content/content/Runtime.js");loadSubScript("chrome://juggler/content/SimpleChannel.js");const channel=new SimpleChannel("worker::worker");const eventListener=e=>channel._onMessage(JSON.parse(e.data));this.addEventListener("message",eventListener);channel.setTransport({sendMessage:e=>postMessage(JSON.stringify(e)),dispose:()=>this.removeEventListener("message",eventListener)});const runtime=new Runtime(true);(()=>{const t=new Debugger(global);if(t.findScripts({global:global}).length){runtime.createExecutionContext(null,global,{})}else{t.onNewScript=function(e){t.onNewScript=undefined;t.removeAllDebuggees();runtime.createExecutionContext(null,global,{})}}})();class RuntimeAgent{constructor(e,t){this._runtime=e;this._browserRuntime=t.connect("runtime");for(const n of this._runtime.executionContexts())this._onExecutionContextCreated(n);this._eventListeners=[this._runtime.events.onConsoleMessage(e=>this._browserRuntime.emit("runtimeConsole",e)),this._runtime.events.onExecutionContextCreated(this._onExecutionContextCreated.bind(this)),this._runtime.events.onExecutionContextDestroyed(this._onExecutionContextDestroyed.bind(this)),t.register("runtime",{evaluate:this._runtime.evaluate.bind(this._runtime),callFunction:this._runtime.callFunction.bind(this._runtime),getObjectProperties:this._runtime.getObjectProperties.bind(this._runtime),disposeObject:this._runtime.disposeObject.bind(this._runtime)})]}_onExecutionContextCreated(e){this._browserRuntime.emit("runtimeExecutionContextCreated",{executionContextId:e.id(),auxData:e.auxData()})}_onExecutionContextDestroyed(e){this._browserRuntime.emit("runtimeExecutionContextDestroyed",{executionContextId:e.id()})}dispose(){for(const e of this._eventListeners)e();this._eventListeners=[]}}new RuntimeAgent(runtime,channel);