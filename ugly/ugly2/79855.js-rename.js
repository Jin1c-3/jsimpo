const path=require("path");const hash=require("hash-sum");const qs=require("querystring");const plugin=require("./plugin");const selectBlock=require("./select");const loaderUtils=require("loader-utils");const{attrsToQuery}=require("./codegen/utils");const{parse}=require("@vue/component-compiler-utils");const genStylesCode=require("./codegen/styleInjection");const{genHotReloadCode}=require("./codegen/hotReload");const genCustomBlocksCode=require("./codegen/customBlocks");const componentNormalizerPath=require.resolve("./runtime/componentNormalizer");const{NS}=require("./plugin");let errorEmitted=false;let modules;function loadTemplateCompiler(t){try{return require("vue-template-compiler")}catch(e){if(/version mismatch/.test(e.toString())){t.emitError(e)}else{t.emitError(new Error(`[vue-loader] vue-template-compiler must be installed as a peer dependency, `+`or a compatible compiler implementation must be passed via options.`))}}}module.exports=function(e){const t=this;if(!errorEmitted&&!t["thread-loader"]&&!t[NS]){t.emitError(new Error(`vue-loader was used without the corresponding plugin. `+`Make sure to include VueLoaderPlugin in your webpack config.`));errorEmitted=true}const o=e=>loaderUtils.stringifyRequest(t,e);const{target:r,request:s,minimize:n,sourceMap:i,rootContext:c,resourcePath:l,resourceQuery:p}=t;const a=p.slice(1);const m=`&${a}`;const u=qs.parse(a);const d=loaderUtils.getOptions(t)||{};const f=r==="node";const g=!!d.shadowMode;const h=d.productionMode||n||process.env.NODE_ENV==="production";const y=path.basename(l);const $=c||process.cwd();const v=path.dirname(path.relative($,l));const q=parse({source:e,compiler:d.compiler||loadTemplateCompiler(t),filename:y,sourceRoot:v,needMap:i,isAppService:d.isAppService,isAppView:d.isAppView,isAppNVue:d.isAppNVue});if(d.isH5TreeShaking){const _=/^win/.test(process.platform);const B=e=>_?e.replace(/\\/g,"/"):e;if(!d.compilerOptions){d.compilerOptions={}}d.compilerOptions.autoComponentResourcePath=B(l);if(!modules&&d.compilerOptions&&d.compilerOptions.modules){modules=d.compilerOptions.modules}const P=B(require("@dcloudio/uni-h5/path").src);if(B(this.resourcePath).indexOf(P)===0){q.styles.length=0;d.compilerOptions&&delete d.compilerOptions.modules}else if(d.compilerOptions){d.compilerOptions.modules=modules}}if(u.type){return selectBlock(q,t,u,!!d.appendExtension)}const N=path.relative(process.env.UNI_INPUT_DIR||$,l).replace(/^(\.\.[\/\\])+/,"");const O=N.replace(/\\/g,"/")+p;const S=hash(h?O+"\n"+e:O);const j=q.styles.some(e=>e.scoped);const R=q.template&&q.template.attrs.functional;const C=!f&&!h&&(q.script||q.template)&&d.hotReload!==false;let k;let w=`var render, staticRenderFns, recyclableRender, components`;let A;if(q.template){k=d.isAppNVue&&!!(q.template.attrs&&q.template.attrs.recyclable);const T=q.template.src||l;const z=`&id=${S}`;const M=j?`&scoped=true`:``;const Q=attrsToQuery(q.template.attrs);const U=`?vue&type=template${z}${M}${Q}${m}`;const s=A=o(T+U);w=`import { render, staticRenderFns, recyclableRender, components } from ${s}`}let E=`var script = {}`;if(q.script){const T=q.script.src||l;const Q=attrsToQuery(q.script.attrs,"js");const U=`?vue&type=script${Q}${m}`;const s=o(T+U);E=`import script from ${s}\n`+`export * from ${s}`}let V=`var renderjs`;if((d.isAppView||d.isH5)&&q.renderjs){const T=q.renderjs.src||l;const Q=attrsToQuery(q.renderjs.attrs,"js");const U=`?vue&type=renderjs${Q}${m}`;const s=o(T+U);V=`import renderjs from ${s}\n`+`renderjs.__module = '${q.renderjs.attrs.module}'\n`+`export * from ${s}`}let b=``;if(!d.isAppService&&q.styles.length){b=genStylesCode(t,q.styles,S,l,o,C,f||g)}let x=`
${w}
${V}
${E}
${b}

/* normalize component */
import normalizer from ${o(`!${componentNormalizerPath}`)}
var component = normalizer(
  script,
  render,
  staticRenderFns,
  ${R?`true`:`false`},
  ${d.isAppNVue?`null`:/injectStyles/.test(b)?`injectStyles`:`null`},
  ${j?JSON.stringify(S):`null`},
  ${f?JSON.stringify(hash(s)):`null`},
  ${g?`true`:`false`},
  components,
  renderjs
)
  `.trim()+`\n`;if(q.customBlocks&&q.customBlocks.length){x+=genCustomBlocksCode(q.customBlocks,l,p,o)}if(C){x+=`\n`+genHotReloadCode(S,R,A)}if(d.isAppNVue&&/injectStyles/.test(b)){x+=`\ninjectStyles.call(component)`}if(!h){x+=`\ncomponent.options.__file = ${JSON.stringify(N.replace(/\\/g,"/"))}`}else if(d.exposeFilename){x+=`\ncomponent.options.__file = ${JSON.stringify(y)}`}if(k){x+=`\nrecyclableRender && (component.options["@render"] = recyclableRender)`}x+=`\nexport default component.exports`;return x};module.exports.VueLoaderPlugin=plugin;