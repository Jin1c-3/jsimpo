"use strict";const{isBlockComment}=require("./utils.js");const ignoredProperties=new Set(["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","loc","flags","errors","tokens"]);const removeTemplateElementsValue=e=>{for(const t of e.quasis){delete t.value}};function clean(e,t,a){if(e.type==="Program"){delete t.sourceType}if(e.type==="BigIntLiteral"||e.type==="BigIntLiteralTypeAnnotation"){if(t.value){t.value=t.value.toLowerCase()}}if(e.type==="BigIntLiteral"||e.type==="Literal"){if(t.bigint){t.bigint=t.bigint.toLowerCase()}}if(e.type==="DecimalLiteral"){t.value=Number(t.value)}if(e.type==="Literal"&&t.decimal){t.decimal=Number(t.decimal)}if(e.type==="EmptyStatement"){return null}if(e.type==="JSXText"){return null}if(e.type==="JSXExpressionContainer"&&(e.expression.type==="Literal"||e.expression.type==="StringLiteral")&&e.expression.value===" "){return null}if((e.type==="Property"||e.type==="ObjectProperty"||e.type==="MethodDefinition"||e.type==="ClassProperty"||e.type==="ClassMethod"||e.type==="PropertyDefinition"||e.type==="TSDeclareMethod"||e.type==="TSPropertySignature"||e.type==="ObjectTypeProperty")&&typeof e.key==="object"&&e.key&&(e.key.type==="Literal"||e.key.type==="NumericLiteral"||e.key.type==="StringLiteral"||e.key.type==="Identifier")){delete t.key}if(e.type==="JSXElement"&&e.openingElement.name.name==="style"&&e.openingElement.attributes.some(e=>e.name.name==="jsx")){for(const{type:r,expression:n}of t.children){if(r==="JSXExpressionContainer"&&n.type==="TemplateLiteral"){removeTemplateElementsValue(n)}}}if(e.type==="JSXAttribute"&&e.name.name==="css"&&e.value.type==="JSXExpressionContainer"&&e.value.expression.type==="TemplateLiteral"){removeTemplateElementsValue(t.value.expression)}if(e.type==="JSXAttribute"&&e.value&&e.value.type==="Literal"&&/["']|&quot;|&apos;/.test(e.value.value)){t.value.value=t.value.value.replace(/["']|&quot;|&apos;/g,'"')}const n=e.expression||e.callee;if(e.type==="Decorator"&&n.type==="CallExpression"&&n.callee.name==="Component"&&n.arguments.length===1){const i=e.expression.arguments[0].properties;for(const[l,s]of t.expression.arguments[0].properties.entries()){switch(i[l].key.name){case"styles":if(s.value.type==="ArrayExpression"){removeTemplateElementsValue(s.value.elements[0])}break;case"template":if(s.value.type==="TemplateLiteral"){removeTemplateElementsValue(s.value)}break}}}if(e.type==="TaggedTemplateExpression"&&(e.tag.type==="MemberExpression"||e.tag.type==="Identifier"&&(e.tag.name==="gql"||e.tag.name==="graphql"||e.tag.name==="css"||e.tag.name==="md"||e.tag.name==="markdown"||e.tag.name==="html")||e.tag.type==="CallExpression")){removeTemplateElementsValue(t.quasi)}if(e.type==="TemplateLiteral"){const p=e.leadingComments&&e.leadingComments.some(t=>isBlockComment(t)&&["GraphQL","HTML"].some(e=>t.value===` ${e} `));if(p||a.type==="CallExpression"&&a.callee.name==="graphql"||!e.leadingComments){removeTemplateElementsValue(t)}}if(e.type==="InterpreterDirective"){t.value=t.value.trimEnd()}if((e.type==="TSIntersectionType"||e.type==="TSUnionType")&&e.types.length===1){return t.types[0]}}clean.ignoredProperties=ignoredProperties;module.exports=clean;