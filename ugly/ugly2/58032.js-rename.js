"use strict";const{Array,ArrayIsArray,ArrayPrototypeForEach,Error,MathFloor,MathMin,MathTrunc,NumberIsNaN,NumberMAX_SAFE_INTEGER,NumberMIN_SAFE_INTEGER,ObjectCreate,ObjectDefineProperties,ObjectDefineProperty,ObjectSetPrototypeOf,StringPrototypeCharCodeAt,StringPrototypeReplace,StringPrototypeSlice,StringPrototypeToLowerCase,StringPrototypeTrim,SymbolSpecies,SymbolToPrimitive,TypedArrayPrototypeGetByteLength,TypedArrayPrototypeFill,TypedArrayPrototypeSet,Uint8Array,Uint8ArrayPrototype}=primordials;const{byteLengthUtf8,compare:_compare,compareOffset,createFromString,fill:bindingFill,indexOfBuffer,indexOfNumber,indexOfString,swap16:_swap16,swap32:_swap32,swap64:_swap64,kMaxLength,kStringMaxLength}=internalBinding("buffer");const{getOwnNonIndexProperties,propertyFilter:{ALL_PROPERTIES,ONLY_ENUMERABLE}}=internalBinding("util");const{customInspectSymbol,isInsideNodeModules,lazyDOMException,normalizeEncoding,kIsEncodingSymbol}=require("internal/util");const{isAnyArrayBuffer,isArrayBufferView,isUint8Array}=require("internal/util/types");const{inspect:utilInspect}=require("internal/util/inspect");const{encodings}=internalBinding("string_decoder");const{codes:{ERR_BUFFER_OUT_OF_BOUNDS,ERR_INVALID_ARG_TYPE,ERR_INVALID_ARG_VALUE,ERR_INVALID_BUFFER_SIZE,ERR_OUT_OF_RANGE,ERR_UNKNOWN_ENCODING},hideStackFrames}=require("internal/errors");const{validateArray,validateBuffer,validateNumber,validateInteger,validateString}=require("internal/validators");const validateOffset=(e,t,n=0,r=kMaxLength)=>validateInteger(e,t,n,r);const{FastBuffer,markAsUntransferable,addBufferPrototypeMethods,createUnsafeBuffer}=require("internal/buffer");const{Blob,resolveObjectURL}=require("internal/blob");FastBuffer.prototype.constructor=Buffer;Buffer.prototype=FastBuffer.prototype;addBufferPrototypeMethods(Buffer.prototype);const constants=ObjectDefineProperties({},{MAX_LENGTH:{value:kMaxLength,writable:false,enumerable:true},MAX_STRING_LENGTH:{value:kStringMaxLength,writable:false,enumerable:true}});Buffer.poolSize=8*1024;let poolSize,poolOffset,allocPool;const encodingsMap=ObjectCreate(null);for(let e=0;e<encodings.length;++e)encodingsMap[encodings[e]]=e;function createPool(){poolSize=Buffer.poolSize;allocPool=createUnsafeBuffer(poolSize).buffer;markAsUntransferable(allocPool);poolOffset=0}createPool();function alignPool(){if(poolOffset&7){poolOffset|=7;poolOffset++}}let bufferWarningAlreadyEmitted=false;let nodeModulesCheckCounter=0;const bufferWarning="Buffer() is deprecated due to security and usability "+"issues. Please use the Buffer.alloc(), "+"Buffer.allocUnsafe(), or Buffer.from() methods instead.";function showFlaggedDeprecation(){if(bufferWarningAlreadyEmitted||++nodeModulesCheckCounter>1e4||!require("internal/options").getOptionValue("--pending-deprecation")&&isInsideNodeModules()){return}process.emitWarning(bufferWarning,"DeprecationWarning","DEP0005");bufferWarningAlreadyEmitted=true}function toInteger(e,t){e=+e;if(!NumberIsNaN(e)&&e>=NumberMIN_SAFE_INTEGER&&e<=NumberMAX_SAFE_INTEGER){return e%1===0?e:MathFloor(e)}return t}function _copy(e,t,n,r,i){if(!isUint8Array(e))throw new ERR_INVALID_ARG_TYPE("source",["Buffer","Uint8Array"],e);if(!isUint8Array(t))throw new ERR_INVALID_ARG_TYPE("target",["Buffer","Uint8Array"],t);if(n===undefined){n=0}else{n=toInteger(n,0);if(n<0)throw new ERR_OUT_OF_RANGE("targetStart",">= 0",n)}if(r===undefined){r=0}else{r=toInteger(r,0);if(r<0)throw new ERR_OUT_OF_RANGE("sourceStart",">= 0",r)}if(i===undefined){i=e.length}else{i=toInteger(i,0);if(i<0)throw new ERR_OUT_OF_RANGE("sourceEnd",">= 0",i)}if(n>=t.length||r>=i)return 0;if(r>e.length){throw new ERR_OUT_OF_RANGE("sourceStart",`<= ${e.length}`,r)}return _copyActual(e,t,n,r,i)}function _copyActual(e,t,n,r,i){if(i-r>t.length-n)i=r+t.length-n;let f=i-r;const o=e.length-r;if(f>o)f=o;if(r!==0||i<e.length)e=new Uint8Array(e.buffer,e.byteOffset+r,f);TypedArrayPrototypeSet(t,e,n);return f}function Buffer(e,t,n){showFlaggedDeprecation();if(typeof e==="number"){if(typeof t==="string"){throw new ERR_INVALID_ARG_TYPE("string","string",e)}return Buffer.alloc(e)}return Buffer.from(e,t,n)}ObjectDefineProperty(Buffer,SymbolSpecies,{enumerable:false,configurable:true,get(){return FastBuffer}});Buffer.from=function e(t,n,r){if(typeof t==="string")return fromString(t,n);if(typeof t==="object"&&t!==null){if(isAnyArrayBuffer(t))return fromArrayBuffer(t,n,r);const i=t.valueOf&&t.valueOf();if(i!=null&&i!==t&&(typeof i==="string"||typeof i==="object")){return e(i,n,r)}const f=fromObject(t);if(f)return f;if(typeof t[SymbolToPrimitive]==="function"){const o=t[SymbolToPrimitive]("string");if(typeof o==="string"){return fromString(o,n)}}}throw new ERR_INVALID_ARG_TYPE("first argument",["string","Buffer","ArrayBuffer","Array","Array-like Object"],t)};const of=(...t)=>{const n=createUnsafeBuffer(t.length);for(let e=0;e<t.length;e++)n[e]=t[e];return n};Buffer.of=of;ObjectSetPrototypeOf(Buffer,Uint8Array);const assertSize=hideStackFrames(e=>{validateNumber(e,"size");if(!(e>=0&&e<=kMaxLength)){throw new ERR_INVALID_ARG_VALUE.RangeError("size",e)}});Buffer.alloc=function e(t,n,r){assertSize(t);if(n!==undefined&&n!==0&&t>0){const i=createUnsafeBuffer(t);return _fill(i,n,0,i.length,r)}return new FastBuffer(t)};Buffer.allocUnsafe=function e(t){assertSize(t);return allocate(t)};Buffer.allocUnsafeSlow=function e(t){assertSize(t);return createUnsafeBuffer(t)};function SlowBuffer(e){assertSize(e);return createUnsafeBuffer(e)}ObjectSetPrototypeOf(SlowBuffer.prototype,Uint8ArrayPrototype);ObjectSetPrototypeOf(SlowBuffer,Uint8Array);function allocate(e){if(e<=0){return new FastBuffer}if(e<Buffer.poolSize>>>1){if(e>poolSize-poolOffset)createPool();const t=new FastBuffer(allocPool,poolOffset,e);poolOffset+=e;alignPool();return t}return createUnsafeBuffer(e)}function fromStringFast(e,t){const n=t.byteLength(e);if(n>=Buffer.poolSize>>>1)return createFromString(e,t.encodingVal);if(n>poolSize-poolOffset)createPool();let r=new FastBuffer(allocPool,poolOffset,n);const i=t.write(r,e,0,n);if(i!==n){r=new FastBuffer(allocPool,poolOffset,i)}poolOffset+=i;alignPool();return r}function fromString(e,t){let n;if(typeof t!=="string"||t.length===0){if(e.length===0)return new FastBuffer;n=encodingOps.utf8;t=undefined}else{n=getEncodingOps(t);if(n===undefined)throw new ERR_UNKNOWN_ENCODING(t);if(e.length===0)return new FastBuffer}return fromStringFast(e,n)}function fromArrayBuffer(e,t,n){if(t===undefined){t=0}else{t=+t;if(NumberIsNaN(t))t=0}const r=e.byteLength-t;if(r<0)throw new ERR_BUFFER_OUT_OF_BOUNDS("offset");if(n===undefined){n=r}else{n=+n;if(n>0){if(n>r)throw new ERR_BUFFER_OUT_OF_BOUNDS("length")}else{n=0}}return new FastBuffer(e,t,n)}function fromArrayLike(e){if(e.length<=0)return new FastBuffer;if(e.length<Buffer.poolSize>>>1){if(e.length>poolSize-poolOffset)createPool();const t=new FastBuffer(allocPool,poolOffset,e.length);TypedArrayPrototypeSet(t,e,0);poolOffset+=e.length;alignPool();return t}return new FastBuffer(e)}function fromObject(e){if(e.length!==undefined||isAnyArrayBuffer(e.buffer)){if(typeof e.length!=="number"){return new FastBuffer}return fromArrayLike(e)}if(e.type==="Buffer"&&ArrayIsArray(e.data)){return fromArrayLike(e.data)}}Buffer.isBuffer=function e(t){return t instanceof Buffer};Buffer.compare=function e(t,n){if(!isUint8Array(t)){throw new ERR_INVALID_ARG_TYPE("buf1",["Buffer","Uint8Array"],t)}if(!isUint8Array(n)){throw new ERR_INVALID_ARG_TYPE("buf2",["Buffer","Uint8Array"],n)}if(t===n){return 0}return _compare(t,n)};Buffer.isEncoding=function e(t){return typeof t==="string"&&t.length!==0&&normalizeEncoding(t)!==undefined};Buffer[kIsEncodingSymbol]=Buffer.isEncoding;Buffer.concat=function e(t,n){validateArray(t,"list");if(t.length===0)return new FastBuffer;if(n===undefined){n=0;for(let e=0;e<t.length;e++){if(t[e].length){n+=t[e].length}}}else{validateOffset(n,"length")}const r=Buffer.allocUnsafe(n);let i=0;for(let e=0;e<t.length;e++){const f=t[e];if(!isUint8Array(f)){throw new ERR_INVALID_ARG_TYPE(`list[${e}]`,["Buffer","Uint8Array"],t[e])}i+=_copyActual(f,r,i,0,f.length)}if(i<n){TypedArrayPrototypeFill(r,0,i,n)}return r};function base64ByteLength(e,t){if(StringPrototypeCharCodeAt(e,t-1)===61)t--;if(t>1&&StringPrototypeCharCodeAt(e,t-1)===61)t--;return t*3>>>2}const encodingOps={utf8:{encoding:"utf8",encodingVal:encodingsMap.utf8,byteLength:byteLengthUtf8,write:(e,t,n,r)=>e.utf8Write(t,n,r),slice:(e,t,n)=>e.utf8Slice(t,n),indexOf:(e,t,n,r)=>indexOfString(e,t,n,encodingsMap.utf8,r)},ucs2:{encoding:"ucs2",encodingVal:encodingsMap.utf16le,byteLength:e=>e.length*2,write:(e,t,n,r)=>e.ucs2Write(t,n,r),slice:(e,t,n)=>e.ucs2Slice(t,n),indexOf:(e,t,n,r)=>indexOfString(e,t,n,encodingsMap.utf16le,r)},utf16le:{encoding:"utf16le",encodingVal:encodingsMap.utf16le,byteLength:e=>e.length*2,write:(e,t,n,r)=>e.ucs2Write(t,n,r),slice:(e,t,n)=>e.ucs2Slice(t,n),indexOf:(e,t,n,r)=>indexOfString(e,t,n,encodingsMap.utf16le,r)},latin1:{encoding:"latin1",encodingVal:encodingsMap.latin1,byteLength:e=>e.length,write:(e,t,n,r)=>e.latin1Write(t,n,r),slice:(e,t,n)=>e.latin1Slice(t,n),indexOf:(e,t,n,r)=>indexOfString(e,t,n,encodingsMap.latin1,r)},ascii:{encoding:"ascii",encodingVal:encodingsMap.ascii,byteLength:e=>e.length,write:(e,t,n,r)=>e.asciiWrite(t,n,r),slice:(e,t,n)=>e.asciiSlice(t,n),indexOf:(e,t,n,r)=>indexOfBuffer(e,fromStringFast(t,encodingOps.ascii),n,encodingsMap.ascii,r)},base64:{encoding:"base64",encodingVal:encodingsMap.base64,byteLength:e=>base64ByteLength(e,e.length),write:(e,t,n,r)=>e.base64Write(t,n,r),slice:(e,t,n)=>e.base64Slice(t,n),indexOf:(e,t,n,r)=>indexOfBuffer(e,fromStringFast(t,encodingOps.base64),n,encodingsMap.base64,r)},base64url:{encoding:"base64url",encodingVal:encodingsMap.base64url,byteLength:e=>base64ByteLength(e,e.length),write:(e,t,n,r)=>e.base64urlWrite(t,n,r),slice:(e,t,n)=>e.base64urlSlice(t,n),indexOf:(e,t,n,r)=>indexOfBuffer(e,fromStringFast(t,encodingOps.base64url),n,encodingsMap.base64url,r)},hex:{encoding:"hex",encodingVal:encodingsMap.hex,byteLength:e=>e.length>>>1,write:(e,t,n,r)=>e.hexWrite(t,n,r),slice:(e,t,n)=>e.hexSlice(t,n),indexOf:(e,t,n,r)=>indexOfBuffer(e,fromStringFast(t,encodingOps.hex),n,encodingsMap.hex,r)}};function getEncodingOps(e){e+="";switch(e.length){case 4:if(e==="utf8")return encodingOps.utf8;if(e==="ucs2")return encodingOps.ucs2;e=StringPrototypeToLowerCase(e);if(e==="utf8")return encodingOps.utf8;if(e==="ucs2")return encodingOps.ucs2;break;case 5:if(e==="utf-8")return encodingOps.utf8;if(e==="ascii")return encodingOps.ascii;if(e==="ucs-2")return encodingOps.ucs2;e=StringPrototypeToLowerCase(e);if(e==="utf-8")return encodingOps.utf8;if(e==="ascii")return encodingOps.ascii;if(e==="ucs-2")return encodingOps.ucs2;break;case 7:if(e==="utf16le"||StringPrototypeToLowerCase(e)==="utf16le")return encodingOps.utf16le;break;case 8:if(e==="utf-16le"||StringPrototypeToLowerCase(e)==="utf-16le")return encodingOps.utf16le;break;case 6:if(e==="latin1"||e==="binary")return encodingOps.latin1;if(e==="base64")return encodingOps.base64;e=StringPrototypeToLowerCase(e);if(e==="latin1"||e==="binary")return encodingOps.latin1;if(e==="base64")return encodingOps.base64;break;case 3:if(e==="hex"||StringPrototypeToLowerCase(e)==="hex")return encodingOps.hex;break;case 9:if(e==="base64url"||StringPrototypeToLowerCase(e)==="base64url")return encodingOps.base64url;break}}function byteLength(e,t){if(typeof e!=="string"){if(isArrayBufferView(e)||isAnyArrayBuffer(e)){return e.byteLength}throw new ERR_INVALID_ARG_TYPE("string",["string","Buffer","ArrayBuffer"],e)}const n=e.length;const r=arguments.length>2&&arguments[2]===true;if(!r&&n===0)return 0;if(!t)return r?-1:byteLengthUtf8(e);const i=getEncodingOps(t);if(i===undefined)return r?-1:byteLengthUtf8(e);return i.byteLength(e)}Buffer.byteLength=byteLength;ObjectDefineProperty(Buffer.prototype,"parent",{enumerable:true,get(){if(!(this instanceof Buffer))return undefined;return this.buffer}});ObjectDefineProperty(Buffer.prototype,"offset",{enumerable:true,get(){if(!(this instanceof Buffer))return undefined;return this.byteOffset}});Buffer.prototype.copy=function e(t,n,r,i){return _copy(this,t,n,r,i)};Buffer.prototype.toString=function e(t,n,r){if(arguments.length===0){return this.utf8Slice(0,this.length)}const i=this.length;if(n<=0)n=0;else if(n>=i)return"";else n|=0;if(r===undefined||r>i)r=i;else r|=0;if(r<=n)return"";if(t===undefined)return this.utf8Slice(n,r);const f=getEncodingOps(t);if(f===undefined)throw new ERR_UNKNOWN_ENCODING(t);return f.slice(this,n,r)};Buffer.prototype.equals=function e(t){if(!isUint8Array(t)){throw new ERR_INVALID_ARG_TYPE("otherBuffer",["Buffer","Uint8Array"],t)}if(this===t)return true;if(this.byteLength!==t.byteLength)return false;return this.byteLength===0||_compare(this,t)===0};let INSPECT_MAX_BYTES=50;Buffer.prototype[customInspectSymbol]=function e(t,n){const r=INSPECT_MAX_BYTES;const i=MathMin(r,this.length);const f=this.length-r;let o=StringPrototypeTrim(StringPrototypeReplace(this.hexSlice(0,i),/(.{2})/g,"$1 "));if(f>0)o+=` ... ${f} more byte${f>1?"s":""}`;if(n){let t=false;const s=n.showHidden?ALL_PROPERTIES:ONLY_ENUMERABLE;const u=ObjectCreate(null);ArrayPrototypeForEach(getOwnNonIndexProperties(this,s),e=>{t=true;u[e]=this[e]});if(t){if(this.length!==0)o+=", ";o+=StringPrototypeSlice(utilInspect(u,{...n,breakLength:Infinity,compact:true}),27,-2)}}return`<${this.constructor.name} ${o}>`};Buffer.prototype.inspect=Buffer.prototype[customInspectSymbol];Buffer.prototype.compare=function e(t,n,r,i,f){if(!isUint8Array(t)){throw new ERR_INVALID_ARG_TYPE("target",["Buffer","Uint8Array"],t)}if(arguments.length===1)return _compare(this,t);if(n===undefined)n=0;else validateOffset(n,"targetStart");if(r===undefined)r=t.length;else validateOffset(r,"targetEnd",0,t.length);if(i===undefined)i=0;else validateOffset(i,"sourceStart");if(f===undefined)f=this.length;else validateOffset(f,"sourceEnd",0,this.length);if(i>=f)return n>=r?0:-1;if(n>=r)return 1;return compareOffset(this,t,n,i,r,f)};function bidirectionalIndexOf(e,t,n,r,i){validateBuffer(e);if(typeof n==="string"){r=n;n=undefined}else if(n>2147483647){n=2147483647}else if(n<-2147483648){n=-2147483648}n=+n;if(NumberIsNaN(n)){n=i?0:e.length||e.byteLength}i=!!i;if(typeof t==="number")return indexOfNumber(e,t>>>0,n,i);let f;if(r===undefined)f=encodingOps.utf8;else f=getEncodingOps(r);if(typeof t==="string"){if(f===undefined)throw new ERR_UNKNOWN_ENCODING(r);return f.indexOf(e,t,n,i)}if(isUint8Array(t)){const o=f===undefined?encodingsMap.utf8:f.encodingVal;return indexOfBuffer(e,t,n,o,i)}throw new ERR_INVALID_ARG_TYPE("value",["number","string","Buffer","Uint8Array"],t)}Buffer.prototype.indexOf=function e(t,n,r){return bidirectionalIndexOf(this,t,n,r,true)};Buffer.prototype.lastIndexOf=function e(t,n,r){return bidirectionalIndexOf(this,t,n,r,false)};Buffer.prototype.includes=function e(t,n,r){return this.indexOf(t,n,r)!==-1};Buffer.prototype.fill=function e(t,n,r,i){return _fill(this,t,n,r,i)};function _fill(e,t,n,r,i){if(typeof t==="string"){if(n===undefined||typeof n==="string"){i=n;n=0;r=e.length}else if(typeof r==="string"){i=r;r=e.length}const f=normalizeEncoding(i);if(f===undefined){validateString(i,"encoding");throw new ERR_UNKNOWN_ENCODING(i)}if(t.length===0){t=0}else if(t.length===1){if(f==="utf8"){const o=StringPrototypeCharCodeAt(t,0);if(o<128){t=o}}else if(f==="latin1"){t=StringPrototypeCharCodeAt(t,0)}}}else{i=undefined}if(n===undefined){n=0;r=e.length}else{validateOffset(n,"offset");if(r===undefined){r=e.length}else{validateOffset(r,"end",0,e.length)}if(n>=r)return e}if(typeof t==="number"){const s=TypedArrayPrototypeGetByteLength(e);const u=r-n;if(n>r||u+n>s)throw new ERR_BUFFER_OUT_OF_BOUNDS;TypedArrayPrototypeFill(e,t,n,r)}else{const a=bindingFill(e,t,n,r,i);if(a<0){if(a===-1)throw new ERR_INVALID_ARG_VALUE("value",t);throw new ERR_BUFFER_OUT_OF_BOUNDS}}return e}Buffer.prototype.write=function e(t,n,r,i){if(n===undefined){return this.utf8Write(t,0,this.length)}if(r===undefined&&typeof n==="string"){i=n;r=this.length;n=0}else{validateOffset(n,"offset",0,this.length);const o=this.length-n;if(r===undefined){r=o}else if(typeof r==="string"){i=r;r=o}else{validateOffset(r,"length",0,this.length);if(r>o)r=o}}if(!i)return this.utf8Write(t,n,r);const f=getEncodingOps(i);if(f===undefined)throw new ERR_UNKNOWN_ENCODING(i);return f.write(this,t,n,r)};Buffer.prototype.toJSON=function e(){if(this.length>0){const t=new Array(this.length);for(let e=0;e<this.length;++e)t[e]=this[e];return{type:"Buffer",data:t}}return{type:"Buffer",data:[]}};function adjustOffset(e,t){e=MathTrunc(e);if(e===0){return 0}if(e<0){e+=t;return e>0?e:0}if(e<t){return e}return NumberIsNaN(e)?0:t}Buffer.prototype.slice=function e(t,n){const r=this.length;t=adjustOffset(t,r);n=n!==undefined?adjustOffset(n,r):r;const i=n>t?n-t:0;return new FastBuffer(this.buffer,this.byteOffset+t,i)};function swap(e,t,n){const r=e[t];e[t]=e[n];e[n]=r}Buffer.prototype.swap16=function e(){const t=this.length;if(t%2!==0)throw new ERR_INVALID_BUFFER_SIZE("16-bits");if(t<128){for(let e=0;e<t;e+=2)swap(this,e,e+1);return this}return _swap16(this)};Buffer.prototype.swap32=function e(){const t=this.length;if(t%4!==0)throw new ERR_INVALID_BUFFER_SIZE("32-bits");if(t<192){for(let e=0;e<t;e+=4){swap(this,e,e+3);swap(this,e+1,e+2)}return this}return _swap32(this)};Buffer.prototype.swap64=function e(){const t=this.length;if(t%8!==0)throw new ERR_INVALID_BUFFER_SIZE("64-bits");if(t<192){for(let e=0;e<t;e+=8){swap(this,e,e+7);swap(this,e+1,e+6);swap(this,e+2,e+5);swap(this,e+3,e+4)}return this}return _swap64(this)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;let transcode;if(internalBinding("config").hasIntl){const{icuErrName,transcode:_transcode}=internalBinding("icu");transcode=function e(t,n,r){if(!isUint8Array(t)){throw new ERR_INVALID_ARG_TYPE("source",["Buffer","Uint8Array"],t)}if(t.length===0)return Buffer.alloc(0);n=normalizeEncoding(n)||n;r=normalizeEncoding(r)||r;const i=_transcode(t,n,r);if(typeof i!=="number")return i;const f=icuErrName(i);const o=new Error(`Unable to transcode Buffer [${f}]`);o.code=f;o.errno=i;throw o}}function btoa(t){t=`${t}`;for(let e=0;e<t.length;e++){if(t[e].charCodeAt(0)>255)throw lazyDOMException("Invalid character","InvalidCharacterError")}const e=Buffer.from(t,"latin1");return e.toString("base64")}const kBase64Digits="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function atob(t){t=`${t}`;for(let e=0;e<t.length;e++){if(!kBase64Digits.includes(t[e]))throw lazyDOMException("Invalid character","InvalidCharacterError")}return Buffer.from(t,"base64").toString("latin1")}module.exports={Blob:Blob,resolveObjectURL:resolveObjectURL,Buffer:Buffer,SlowBuffer:SlowBuffer,transcode:transcode,kMaxLength:kMaxLength,kStringMaxLength:kStringMaxLength,btoa:btoa,atob:atob};ObjectDefineProperties(module.exports,{constants:{configurable:false,enumerable:true,value:constants},INSPECT_MAX_BYTES:{configurable:true,enumerable:true,get(){return INSPECT_MAX_BYTES},set(e){INSPECT_MAX_BYTES=e}}});