"use strict";function compareLocations(e,r){return e.line-r.line||e.column-r.column}function applyDirectives(r){const e=[];let s=0;let l=null;const i=new Map;const t=new Set;const n=new Set;for(const o of r.problems){while(s<r.directives.length&&compareLocations(r.directives[s],o)<=0){const d=r.directives[s++];switch(d.type){case"disable":if(d.ruleId===null){l=d;i.clear();t.clear()}else if(l){t.delete(d.ruleId);i.set(d.ruleId,d)}else{i.set(d.ruleId,d)}break;case"enable":if(d.ruleId===null){l=null;i.clear()}else if(l){t.add(d.ruleId);i.delete(d.ruleId)}else{i.delete(d.ruleId)}break}}if(i.has(o.ruleId)){n.add(i.get(o.ruleId))}else if(l&&!t.has(o.ruleId)){n.add(l)}else{e.push(o)}}const c=r.directives.filter(e=>e.type==="disable"&&!n.has(e)).map(e=>({ruleId:null,message:e.ruleId?`Unused eslint-disable directive (no problems were reported from '${e.ruleId}').`:"Unused eslint-disable directive (no problems were reported).",line:e.unprocessedDirective.line,column:e.unprocessedDirective.column,severity:r.reportUnusedDisableDirectives==="warn"?1:2,nodeType:null}));return{problems:e,unusedDisableDirectives:c}}module.exports=({directives:e,problems:r,reportUnusedDisableDirectives:s="off"})=>{const l=e.filter(e=>e.type==="disable"||e.type==="enable").map(e=>Object.assign({},e,{unprocessedDirective:e})).sort(compareLocations);function i(e,r){const s=e.map(r);const l=[].concat(...s);return l}const t=i(e,e=>{switch(e.type){case"disable":case"enable":return[];case"disable-line":return[{type:"disable",line:e.line,column:1,ruleId:e.ruleId,unprocessedDirective:e},{type:"enable",line:e.line+1,column:0,ruleId:e.ruleId,unprocessedDirective:e}];case"disable-next-line":return[{type:"disable",line:e.line+1,column:1,ruleId:e.ruleId,unprocessedDirective:e},{type:"enable",line:e.line+2,column:0,ruleId:e.ruleId,unprocessedDirective:e}];default:throw new TypeError(`Unrecognized directive type '${e.type}'`)}}).sort(compareLocations);const n=applyDirectives({problems:r,directives:l,reportUnusedDisableDirectives:s});const c=applyDirectives({problems:n.problems,directives:t,reportUnusedDisableDirectives:s});return s!=="off"?c.problems.concat(n.unusedDisableDirectives).concat(c.unusedDisableDirectives).sort(compareLocations):c.problems};