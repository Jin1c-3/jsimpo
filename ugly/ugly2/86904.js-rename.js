var ALIGN_CONST=require("../../display/align/const");var Axes=require("./lib/geometry/Axes");var Bodies=require("./lib/factory/Bodies");var Body=require("./lib/body/Body");var BodyBounds=require("./BodyBounds");var Bounds=require("./lib/geometry/Bounds");var Class=require("../../utils/Class");var Composite=require("./lib/body/Composite");var Composites=require("./lib/factory/Composites");var Constraint=require("./lib/constraint/Constraint");var Detector=require("./lib/collision/Detector");var DistanceBetween=require("../../math/distance/DistanceBetween");var Factory=require("./Factory");var GetFastValue=require("../../utils/object/GetFastValue");var GetValue=require("../../utils/object/GetValue");var Grid=require("./lib/collision/Grid");var MatterAttractors=require("./lib/plugins/MatterAttractors");var MatterCollisionEvents=require("./lib/plugins/MatterCollisionEvents");var MatterLib=require("./lib/core/Matter");var MatterWrap=require("./lib/plugins/MatterWrap");var Merge=require("../../utils/object/Merge");var Pair=require("./lib/collision/Pair");var Pairs=require("./lib/collision/Pairs");var Plugin=require("./lib/core/Plugin");var PluginCache=require("../../plugins/PluginCache");var Query=require("./lib/collision/Query");var Resolver=require("./lib/collision/Resolver");var SAT=require("./lib/collision/SAT");var SceneEvents=require("../../scene/events");var Svg=require("./lib/geometry/Svg");var Vector=require("./lib/geometry/Vector");var Vertices=require("./lib/geometry/Vertices");var World=require("./World");var MatterPhysics=new Class({initialize:function t(e){this.scene=e;this.systems=e.sys;this.config=this.getConfig();this.world;this.add;this.bodyBounds;this.body=Body;this.composite=Composite;this.detector=Detector;this.grid=Grid;this.pair=Pair;this.pairs=Pairs;this.query=Query;this.resolver=Resolver;this.sat=SAT;this.constraint=Constraint;this.bodies=Bodies;this.composites=Composites;this.axes=Axes;this.bounds=Bounds;this.svg=Svg;this.vector=Vector;this.vertices=Vertices;this.verts=Vertices;this._tempVec2=Vector.create();if(GetValue(this.config,"plugins.collisionevents",true)){this.enableCollisionEventsPlugin()}if(GetValue(this.config,"plugins.attractors",false)){this.enableAttractorPlugin()}if(GetValue(this.config,"plugins.wrap",false)){this.enableWrapPlugin()}Resolver._restingThresh=GetValue(this.config,"restingThresh",4);Resolver._restingThreshTangent=GetValue(this.config,"restingThreshTangent",6);Resolver._positionDampen=GetValue(this.config,"positionDampen",.9);Resolver._positionWarming=GetValue(this.config,"positionWarming",.8);Resolver._frictionNormalMultiplier=GetValue(this.config,"frictionNormalMultiplier",5);e.sys.events.once(SceneEvents.BOOT,this.boot,this);e.sys.events.on(SceneEvents.START,this.start,this)},boot:function(){this.world=new World(this.scene,this.config);this.add=new Factory(this.world);this.bodyBounds=new BodyBounds;this.systems.events.once(SceneEvents.DESTROY,this.destroy,this)},start:function(){if(!this.world){this.world=new World(this.scene,this.config);this.add=new Factory(this.world)}var t=this.systems.events;t.on(SceneEvents.UPDATE,this.world.update,this.world);t.on(SceneEvents.POST_UPDATE,this.world.postUpdate,this.world);t.once(SceneEvents.SHUTDOWN,this.shutdown,this)},getConfig:function(){var t=this.systems.game.config.physics;var e=this.systems.settings.physics;var i=Merge(GetFastValue(e,"matter",{}),GetFastValue(t,"matter",{}));return i},enableAttractorPlugin:function(){Plugin.register(MatterAttractors);Plugin.use(MatterLib,MatterAttractors);return this},enableWrapPlugin:function(){Plugin.register(MatterWrap);Plugin.use(MatterLib,MatterWrap);return this},enableCollisionEventsPlugin:function(){Plugin.register(MatterCollisionEvents);Plugin.use(MatterLib,MatterCollisionEvents);return this},pause:function(){return this.world.pause()},resume:function(){return this.world.resume()},set60Hz:function(){this.world.getDelta=this.world.update60Hz;this.world.autoUpdate=true;return this},set30Hz:function(){this.world.getDelta=this.world.update30Hz;this.world.autoUpdate=true;return this},step:function(t,e){this.world.step(t,e)},containsPoint:function(t,e,i){t=this.getMatterBodies(t);var r=Vector.create(e,i);var s=Query.point(t,r);return s.length>0?true:false},intersectPoint:function(t,e,i){i=this.getMatterBodies(i);var r=Vector.create(t,e);var s=[];var o=Query.point(i,r);o.forEach(function(t){if(s.indexOf(t)===-1){s.push(t)}});return s},intersectRect:function(t,e,i,r,s,o){if(s===undefined){s=false}o=this.getMatterBodies(o);var n={min:{x:t,y:e},max:{x:t+i,y:e+r}};var a=[];var l=Query.region(o,n,s);l.forEach(function(t){if(a.indexOf(t)===-1){a.push(t)}});return a},intersectRay:function(t,e,i,r,s,o){if(s===undefined){s=1}o=this.getMatterBodies(o);var n=[];var a=Query.ray(o,Vector.create(t,e),Vector.create(i,r),s);for(var l=0;l<a.length;l++){n.push(a[l].body)}return n},intersectBody:function(t,e){e=this.getMatterBodies(e);var i=[];var r=Query.collides(t,e);for(var s=0;s<r.length;s++){var o=r[s];if(o.bodyA===t){i.push(o.bodyB)}else{i.push(o.bodyA)}}return i},overlap:function(t,e,i,r,s){if(i===undefined){i=null}if(r===undefined){r=null}if(s===undefined){s=i}if(!Array.isArray(t)){t=[t]}t=this.getMatterBodies(t);e=this.getMatterBodies(e);var o=false;for(var n=0;n<t.length;n++){var a=t[n];var l=Query.collides(a,e);for(var u=0;u<l.length;u++){var c=l[u];var h=c.bodyA.id===a.id?c.bodyB:c.bodyA;if(!r||r.call(s,a,h,c)){o=true;if(i){i.call(s,a,h,c)}else if(!r){return true}}}}return o},setCollisionCategory:function(t,e){t=this.getMatterBodies(t);t.forEach(function(t){t.collisionFilter.category=e});return this},setCollisionGroup:function(t,e){t=this.getMatterBodies(t);t.forEach(function(t){t.collisionFilter.group=e});return this},setCollidesWith:function(t,e){t=this.getMatterBodies(t);var i=0;if(!Array.isArray(e)){i=e}else{for(var r=0;r<e.length;r++){i|=e[r]}}t.forEach(function(t){t.collisionFilter.mask=i});return this},getMatterBodies:function(t){if(!t){return this.world.getAllBodies()}if(!Array.isArray(t)){t=[t]}var e=[];for(var i=0;i<t.length;i++){var r=t[i].hasOwnProperty("body")?t[i].body:t[i];e.push(r)}return e},setVelocity:function(t,e,i){t=this.getMatterBodies(t);var r=this._tempVec2;r.x=e;r.y=i;t.forEach(function(t){Body.setVelocity(t,r)});return this},setVelocityX:function(t,e){t=this.getMatterBodies(t);var i=this._tempVec2;i.x=e;t.forEach(function(t){i.y=t.velocity.y;Body.setVelocity(t,i)});return this},setVelocityY:function(t,e){t=this.getMatterBodies(t);var i=this._tempVec2;i.y=e;t.forEach(function(t){i.x=t.velocity.x;Body.setVelocity(t,i)});return this},setAngularVelocity:function(t,e){t=this.getMatterBodies(t);t.forEach(function(t){Body.setAngularVelocity(t,e)});return this},applyForce:function(t,e){t=this.getMatterBodies(t);var i=this._tempVec2;t.forEach(function(t){i.x=t.position.x;i.y=t.position.y;Body.applyForce(t,i,e)});return this},applyForceFromPosition:function(t,e,i,r){t=this.getMatterBodies(t);var s=this._tempVec2;t.forEach(function(t){if(r===undefined){r=t.angle}s.x=i*Math.cos(r);s.y=i*Math.sin(r);Body.applyForce(t,e,s)});return this},applyForceFromAngle:function(t,e,i){t=this.getMatterBodies(t);var r=this._tempVec2;t.forEach(function(t){if(i===undefined){i=t.angle}r.x=e*Math.cos(i);r.y=e*Math.sin(i);Body.applyForce(t,{x:t.position.x,y:t.position.y},r)});return this},getConstraintLength:function(t){var e=t.pointA.x;var i=t.pointA.y;var r=t.pointB.x;var s=t.pointB.y;if(t.bodyA){e+=t.bodyA.position.x;i+=t.bodyA.position.y}if(t.bodyB){r+=t.bodyB.position.x;s+=t.bodyB.position.y}return DistanceBetween(e,i,r,s)},alignBody:function(t,e,i,r){t=t.hasOwnProperty("body")?t.body:t;var s;switch(r){case ALIGN_CONST.TOP_LEFT:case ALIGN_CONST.LEFT_TOP:s=this.bodyBounds.getTopLeft(t,e,i);break;case ALIGN_CONST.TOP_CENTER:s=this.bodyBounds.getTopCenter(t,e,i);break;case ALIGN_CONST.TOP_RIGHT:case ALIGN_CONST.RIGHT_TOP:s=this.bodyBounds.getTopRight(t,e,i);break;case ALIGN_CONST.LEFT_CENTER:s=this.bodyBounds.getLeftCenter(t,e,i);break;case ALIGN_CONST.CENTER:s=this.bodyBounds.getCenter(t,e,i);break;case ALIGN_CONST.RIGHT_CENTER:s=this.bodyBounds.getRightCenter(t,e,i);break;case ALIGN_CONST.LEFT_BOTTOM:case ALIGN_CONST.BOTTOM_LEFT:s=this.bodyBounds.getBottomLeft(t,e,i);break;case ALIGN_CONST.BOTTOM_CENTER:s=this.bodyBounds.getBottomCenter(t,e,i);break;case ALIGN_CONST.BOTTOM_RIGHT:case ALIGN_CONST.RIGHT_BOTTOM:s=this.bodyBounds.getBottomRight(t,e,i);break}if(s){Body.setPosition(t,s)}return this},shutdown:function(){var t=this.systems.events;if(this.world){t.off(SceneEvents.UPDATE,this.world.update,this.world);t.off(SceneEvents.POST_UPDATE,this.world.postUpdate,this.world)}t.off(SceneEvents.SHUTDOWN,this.shutdown,this);if(this.add){this.add.destroy()}if(this.world){this.world.destroy()}this.add=null;this.world=null},destroy:function(){this.shutdown();this.scene.sys.events.off(SceneEvents.START,this.start,this);this.scene=null;this.systems=null}});PluginCache.register("MatterPhysics",MatterPhysics,"matterPhysics");module.exports=MatterPhysics;