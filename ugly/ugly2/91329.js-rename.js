export default function findDependencyMatch(o,c){if(!c.dependsOn){return[]}else{return c.dependsOn.map(n=>{const{resourceName:e,...r}=n;const s=Object.keys(r);const i=o.find(r=>{if(e!==r.resourceName){return false}if(!s.every(e=>Object.keys(r.resourceDefinitions).indexOf(e)>=0)){return false}if(!s.every(e=>r.resourceDefinitions[e]===n[e])){return false}return r});if(i){return i}else{const{mdxType:t,...f}=c.resourceDefinitions;return{error:`A resource (${c.resourceName}: ${JSON.stringify(f)}) is missing its dependency on ${JSON.stringify(c.dependsOn[0])}`}}})}}