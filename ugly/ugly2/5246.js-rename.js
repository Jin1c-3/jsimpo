var parser=require("../");var test=require("tap").test;var path=require("path");var files={foo:path.join(__dirname,"/files/foo.js"),bar:path.join(__dirname,"/files/bar.js")};var sources={foo:"notreal foo",bar:"notreal bar"};var cache={};cache[files.foo]={source:sources.foo,deps:{"./bar":files.bar}};cache[files.bar]={source:sources.bar,deps:{}};test("cache preserves expose and entry",function(e){e.plan(1);var r=parser({cache:cache});r.write({id:files.bar,expose:"bar2",entry:false});r.end({id:"foo",file:files.foo,entry:true,expose:"foo2"});var o=[];r.on("data",function(e){o.push(e)});r.on("end",function(){e.same(o.sort(cmp),[{id:"foo",expose:"foo2",entry:true,file:files.foo,source:sources.foo,deps:{"./bar":files.bar}},{id:files.bar,expose:"bar2",file:files.bar,source:sources.bar,deps:{}}].sort(cmp))})});function cmp(e,r){return e.id<r.id?-1:1}