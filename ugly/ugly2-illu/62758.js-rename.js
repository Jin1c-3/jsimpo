function t(s, u) {
  assertTrue(s.test(u));
}function f(s, u) {
  assertFalse(s.test(u));
}assertTrue(/\p{ASCII}+/u.test("abc123"));assertFalse(/\p{ASCII}+/u.test("\u24D0\u24D1\u24D2\u2460\u2461\u2462"));assertFalse(/\p{ASCII}+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32\u2460\u2461\u2462"));assertFalse(/\P{ASCII}+/u.test("abcd123"));assertTrue(/\P{ASCII}+/u.test("\u24D0\u24D1\u24D2\u2460\u2461\u2462"));assertTrue(/\P{ASCII}+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32\u2460\u2461\u2462"));assertFalse(/[^\p{ASCII}]+/u.test("abc123"));assertFalse(/[\p{ASCII}]+/u.test("\u24D0\u24D1\u24D2\u2460\u2461\u2462"));assertFalse(/[\p{ASCII}]+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32\u2460\u2461\u2462"));assertTrue(/[^\P{ASCII}]+/u.test("abcd123"));assertTrue(/[\P{ASCII}]+/u.test("\u24D0\u24D1\u24D2\u2460\u2461\u2462"));assertFalse(/[^\P{ASCII}]+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32\u2460\u2461\u2462"));assertTrue(/\p{Any}+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32\u2460\u2461\u2462"));assertEquals(["\uD800"], /\p{Any}/u.exec("\uD800\uD801"));assertEquals(["\uDC00"], /\p{Any}/u.exec("\uDC00\uDC01"));assertEquals(["\uD800\uDC01"], /\p{Any}/u.exec("\uD800\uDC01"));assertEquals(["\uDC01"], /\p{Any}/u.exec("\uDC01"));assertFalse(/\P{Any}+/u.test("123"));assertFalse(/[\P{Any}]+/u.test("123"));assertTrue(/[\P{Any}\d]+/u.test("123"));assertTrue(/[^\P{Any}]+/u.test("123"));assertTrue(/\p{Assigned}+/u.test("123"));assertTrue(/\p{Assigned}+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32"));assertFalse(/\p{Assigned}+/u.test("\uFDD0"));assertFalse(/\p{Assigned}+/u.test("\uDBBF\uDFFF"));assertFalse(/\P{Assigned}+/u.test("123"));assertFalse(/\P{Assigned}+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32"));assertTrue(/\P{Assigned}+/u.test("\uFDD0"));assertTrue(/\P{Assigned}+/u.test("\uDBBF\uDFFF"));assertFalse(/\P{Assigned}/u.test(""));assertTrue(/[^\P{Assigned}]+/u.test("123"));assertFalse(/[\P{Assigned}]+/u.test("\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32"));assertFalse(/[^\P{Assigned}]+/u.test("\uFDD0"));assertTrue(/[\P{Assigned}]+/u.test("\uDBBF\uDFFF"));assertFalse(/[\P{Assigned}]/u.test(""));assertFalse(/[^\u1234\p{ASCII}]+/u.test("\u1234"));assertTrue(/[x\P{ASCII}]+/u.test("x"));assertTrue(/[\u1234\p{ASCII}]+/u.test("\u1234"));assertThrows("/\\p{Other_Alphabetic}/u");assertThrows("/\\P{OAlpha}/u");assertThrows("/\\p{Other_Default_Ignorable_Code_Point}/u");assertThrows("/\\P{ODI}/u");assertThrows("/\\p{Other_Grapheme_Extend}/u");assertThrows("/\\P{OGr_Ext}/u");assertThrows("/\\p{Other_ID_Continue}/u");assertThrows("/\\P{OIDC}/u");assertThrows("/\\p{Other_ID_Start}/u");assertThrows("/\\P{OIDS}/u");assertThrows("/\\p{Other_Lowercase}/u");assertThrows("/\\P{OLower}/u");assertThrows("/\\p{Other_Math}/u");assertThrows("/\\P{OMath}/u");assertThrows("/\\p{Other_Uppercase}/u");assertThrows("/\\P{OUpper}/u");
