"use strict";describe("Injector",()=>{const i=["<!DOCTYPE html>",'<html lang="en">','<head id="head"><title>Test</title>',"</head>",'<body id="body">',"<div></div>","<p></p>","</body>","</html>"].join("");const h=require("../../../lib/extend/injector");it("register() - entry is required",()=>{const e=new h;try{e.register()}catch(e){e.should.be.instanceOf(TypeError).property("message","entry is required")}});it("register() - string",()=>{const e=new h;const t='<link rel="stylesheet" href="DPlayer.min.css" />';e.register("head_begin",t);e.register("head_end",t,"home");e.get("head_begin").should.contains(t);e.get("head_begin","default").should.contains(t);e.get("head_end","home").should.contains(t)});it("register() - function",()=>{const e=new h;const t=()=>'<link rel="stylesheet" href="DPlayer.min.css" />';e.register("head_begin",t);e.get("head_begin").should.contains(t())});it("register() - fallback when entry not exists",()=>{const e=new h;const t='<link rel="stylesheet" href="DPlayer.min.css" />';e.register("foo",t);e.get("head_end").should.contains(t)});it("list()",()=>{const e=new h;e.register("body_begin",'<script src="DPlayer.min.js"><\/script>');e.list().body_begin.default.should.be.instanceOf(Set);[...e.list().body_begin.default].should.not.be.empty});it("get()",()=>{const e=new h;const t='<script src="jquery.min.js"><\/script>';e.register("body_begin",t);e.register("body_end",t,"home");e.get("body_begin").should.be.instanceOf(Array);e.get("body_begin").should.contains(t);e.get("body_end","home").should.be.instanceOf(Array);e.get("body_end","home").should.contains(t);e.get("head_end").should.be.instanceOf(Array);e.get("head_end").should.eql([])});it("getText()",()=>{const e=new h;const t='<script src="jquery.min.js"><\/script>';e.register("head_end",t);e.register("body_end",t,"home");e.getText("body_end","home").should.eql(t);e.getText("body_end").should.eql("")});it("getSize()",()=>{const e=new h;const t='<script src="jquery.min.js"><\/script>';e.register("head_end",t);e.register("body_end",t);e.register("body_end",t,"home");e.getSize("head_begin").should.eql(0);e.getSize("head_end").should.eql(1);e.getSize("body_end").should.eql(2)});it("exec() - default",()=>{const e=new h;const t=e.exec(i);t.should.contain('<head id="head"><title>Test</title></head>');t.should.contain('<body id="body"><div></div><p></p></body>')});it("exec() - default",()=>{const e=new h;const t=e.exec(i);t.should.contain('<head id="head"><title>Test</title></head>');t.should.contain('<body id="body"><div></div><p></p></body>')});it("exec() - insert code",()=>{const e=new h;e.register("head_begin","\x3c!-- Powered by Hexo --\x3e");e.register("head_end",'<link href="prism.css" rel="stylesheet">');e.register("head_end",'<link href="prism-linenumber.css" rel="stylesheet">');e.register("body_begin","<script>window.Prism = window.Prism || {}; window.Prism.manual = true;<\/script>");e.register("body_end",'<script src="prism.js"><\/script>');const t=e.exec(i);t.should.contain('<head id="head">\x3c!-- hexo injector head_begin start --\x3e\x3c!-- Powered by Hexo --\x3e\x3c!-- hexo injector head_begin end --\x3e');t.should.contain('\x3c!-- hexo injector head_end start --\x3e<link href="prism.css" rel="stylesheet"><link href="prism-linenumber.css" rel="stylesheet">\x3c!-- hexo injector head_end end --\x3e</head>');t.should.contain('<body id="body">\x3c!-- hexo injector body_begin start --\x3e<script>window.Prism = window.Prism || {}; window.Prism.manual = true;<\/script>\x3c!-- hexo injector body_begin end --\x3e');t.should.contain('\x3c!-- hexo injector body_end start --\x3e<script src="prism.js"><\/script>\x3c!-- hexo injector body_end end --\x3e</body>')});it("exec() - no duplicate insert",()=>{const e=["<!DOCTYPE html>",'<html lang="en">','<head id="head">\x3c!-- hexo injector head_begin start --\x3e\x3c!-- hexo injector head_begin end --\x3e',"<title>Test</title>",'\x3c!-- hexo injector head_end start --\x3e<link href="prism.css" rel="stylesheet"></head>','<body id="body">\x3c!-- hexo injector body_begin start --\x3e\x3c!-- hexo injector body_begin end --\x3e',"<div></div>","<p></p>",'\x3c!-- hexo injector body_end start --\x3e<script src="prism.js"><\/script>\x3c!-- hexo injector body_end end --\x3e</body>',"</html>"].join("");const t=new h;t.register("head_begin","\x3c!-- Powered by Hexo --\x3e");t.register("head_end",'<link href="prism.css" rel="stylesheet">');t.register("head_end",'<link href="prism-linenumber.css" rel="stylesheet">');t.register("body_begin","<script>window.Prism = window.Prism || {}; window.Prism.manual = true;<\/script>");t.register("body_end",'<script src="prism.js"><\/script>');const i=t.exec(e);i.should.contain('<head id="head">\x3c!-- hexo injector head_begin start --\x3e\x3c!-- hexo injector head_begin end --\x3e');i.should.contain('\x3c!-- hexo injector head_end start --\x3e<link href="prism.css" rel="stylesheet"></head>');i.should.contain('<body id="body">\x3c!-- hexo injector body_begin start --\x3e\x3c!-- hexo injector body_begin end --\x3e');i.should.contain('\x3c!-- hexo injector body_end start --\x3e<script src="prism.js"><\/script>\x3c!-- hexo injector body_end end --\x3e</body>')});it("exec() - multi-line head & body",()=>{const e=["<!DOCTYPE html>",'<html lang="en">','<head id="head"><title>Test</title>',"</head>",'<body id="body">',"<div></div>","<p></p>","</body>","</html>"].join("\n");const t=new h;t.register("head_begin","\x3c!-- Powered by Hexo --\x3e");t.register("head_end",'<link href="prism.css" rel="stylesheet">');t.register("head_end",'<link href="prism-linenumber.css" rel="stylesheet">');t.register("body_begin","<script>window.Prism = window.Prism || {}; window.Prism.manual = true;<\/script>");t.register("body_end",'<script src="prism.js"><\/script>');const i=t.exec(e);i.should.contain('<head id="head">\x3c!-- hexo injector head_begin start --\x3e\x3c!-- Powered by Hexo --\x3e\x3c!-- hexo injector head_begin end --\x3e');i.should.contain('\x3c!-- hexo injector head_end start --\x3e<link href="prism.css" rel="stylesheet"><link href="prism-linenumber.css" rel="stylesheet">\x3c!-- hexo injector head_end end --\x3e</head>');i.should.contain('<body id="body">\x3c!-- hexo injector body_begin start --\x3e<script>window.Prism = window.Prism || {}; window.Prism.manual = true;<\/script>\x3c!-- hexo injector body_begin end --\x3e');i.should.contain('\x3c!-- hexo injector body_end start --\x3e<script src="prism.js"><\/script>\x3c!-- hexo injector body_end end --\x3e</body>')});it("exec() - inject on specific page",()=>{const e=["<!DOCTYPE html>",'<html lang="en">','<head id="head"><title>Test</title>',"</head>",'<body id="body">',"<div></div>","<p></p>","</body>","</html>"].join("\n");const t=new h;t.register("head_begin","\x3c!-- head_begin_default --\x3e");t.register("head_begin","\x3c!-- head_begin_home --\x3e","home");t.register("head_begin","\x3c!-- head_begin_post --\x3e","post");t.register("head_begin","\x3c!-- head_begin_page --\x3e","page");t.register("head_begin","\x3c!-- head_begin_archive --\x3e","archive");t.register("head_begin","\x3c!-- head_begin_category --\x3e","category");t.register("head_begin","\x3c!-- head_begin_tag --\x3e","tag");const i=t.exec(e,{page:{}});const n=t.exec(e,{page:{__index:true}});const d=t.exec(e,{page:{__post:true}});const s=t.exec(e,{page:{__page:true}});const o=t.exec(e,{page:{archive:true}});const r=t.exec(e,{page:{category:true}});const c=t.exec(e,{page:{tag:true}});i.should.not.contain("\x3c!-- head_begin_home --\x3e");n.should.contain("\x3c!-- head_begin_home --\x3e\x3c!-- head_begin_default --\x3e");i.should.not.contain("\x3c!-- head_begin_post --\x3e");d.should.contain("\x3c!-- head_begin_post --\x3e\x3c!-- head_begin_default --\x3e");i.should.not.contain("\x3c!-- head_begin_page --\x3e");s.should.contain("\x3c!-- head_begin_page --\x3e\x3c!-- head_begin_default --\x3e");i.should.not.contain("\x3c!-- head_begin_archive --\x3e");o.should.contain("\x3c!-- head_begin_archive --\x3e\x3c!-- head_begin_default --\x3e");i.should.not.contain("\x3c!-- head_begin_category --\x3e");r.should.contain("\x3c!-- head_begin_category --\x3e\x3c!-- head_begin_default --\x3e");i.should.not.contain("\x3c!-- head_begin_tag --\x3e");c.should.contain("\x3c!-- head_begin_tag --\x3e\x3c!-- head_begin_default --\x3e")})});