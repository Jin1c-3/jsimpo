const fs=require("fs");const path=require("path");const color=require("ansicolors");const{promisify}=require("util");const glob=promisify(require("glob"));const readFile=promisify(fs.readFile);const BaseCommand=require("./base-command.js");class HelpSearch extends BaseCommand{static get description(){return"Search npm help documentation"}static get name(){return"help-search"}static get usage(){return["<text>"]}static get params(){return["long"]}exec(t,e){this.helpSearch(t).then(()=>e()).catch(e)}async helpSearch(t){if(!t.length)return this.npm.output(this.usage);const e=path.resolve(__dirname,"..","docs/content");const n=await glob(`${e}/*/*.md`);const s=await this.readFiles(n);const o=await this.searchFiles(t,s,n);const i=this.formatResults(t,o);if(!i.trim())this.npm.output(`No matches in help for: ${t.join(" ")}\n`);else this.npm.output(i)}async readFiles(t){const e={};await Promise.all(t.map(async t=>{e[t]=(await readFile(t,"utf8")).replace(/^---\n(.*\n)*?---\n/,"").trim()}));return e}async searchFiles(n,t,e){const s=[];for(const[o,i]of Object.entries(t)){const r=i.toLowerCase();if(!n.some(t=>r.includes(t.toLowerCase())))continue;const l=i.split(/\n+/);for(let e=0;e<l.length;e++){const u=l[e];const p=l[e+1];let t=false;if(p){t=n.some(t=>p.toLowerCase().includes(t.toLowerCase()));if(t){e+=2;continue}}t=n.some(t=>u.toLowerCase().includes(t.toLowerCase()));if(t){e++;continue}l[e]=null}const c=l.reduce((t,e)=>{if(!(e===null&&t[t.length-1]===null))t.push(e);return t},[]);if(c[c.length-1]===null)c.pop();if(c[0]===null)c.shift();const a={};let t=0;for(const u of c){for(const f of n){const m=(u||"").toLowerCase().split(f.toLowerCase()).length-1;if(m>0){a[f]=(a[f]||0)+m;t+=m}}}const h="npm help "+path.basename(o,".md").replace(/^npm-/,"");s.push({file:o,cmd:h,lines:c,found:Object.keys(a),hits:a,totalHits:t})}return s.sort((t,e)=>t.found.length>e.found.length?-1:t.found.length<e.found.length?1:t.totalHits>e.totalHits?-1:t.totalHits<e.totalHits?1:t.lines.length>e.lines.length?-1:t.lines.length<e.lines.length?1:0).slice(0,10)}formatResults(a,t){const n=Math.min(process.stdout.columns||Infinity,80)+1;const e=t.map(e=>{const c=[e.cmd];const t=Object.keys(e.hits).map(t=>`${t}:${e.hits[t]}`).sort((t,e)=>t>e?1:-1).join(" ");c.push(" ".repeat(Math.max(1,n-c.join(" ").length-t.length-1)));c.push(t);if(!this.npm.config.get("long"))return c.join("");c.unshift("\n\n");c.push("\n");c.push("-".repeat(n-1)+"\n");e.lines.forEach((e,t)=>{if(e===null||t>3)return;if(!this.npm.color){c.push(e+"\n");return}const n=[];for(const s of a){const o=e.toLowerCase().split(s.toLowerCase());let t=0;for(const i of o){n.push(e.substr(t,i.length));const r=e.substr(t+i.length,s.length);const l=color.bgBlack(color.red(r));n.push(l);t+=i.length+s.length}}c.push(n.join("")+"\n")});return c.join("")}).join("\n");const s=t.length&&!this.npm.config.get("long")?"Top hits for "+a.map(JSON.stringify).join(" ")+"\n"+"—".repeat(n-1)+"\n"+e+"\n"+"—".repeat(n-1)+"\n"+"(run with -l or --long to see more context)":e;return s.trim()}}module.exports=HelpSearch;