function assertSize(e,t){if(t instanceof Map||t instanceof Set){assertEquals(e,t.size)}}function TestValidSetCalls(e){assertDoesNotThrow(function(){e.add(new Object)});assertDoesNotThrow(function(){e.has(new Object)});assertDoesNotThrow(function(){e.delete(new Object)})}TestValidSetCalls(new Set);TestValidSetCalls(new WeakSet);function TestValidMapCalls(e){assertDoesNotThrow(function(){e.get(new Object)});assertDoesNotThrow(function(){e.set(new Object)});assertDoesNotThrow(function(){e.has(new Object)});assertDoesNotThrow(function(){e.delete(new Object)});assertDoesNotThrow(function(){e.get(undefined)});assertDoesNotThrow(function(){e.get(null)});assertDoesNotThrow(function(){e.get(0)});assertDoesNotThrow(function(){e.get("a-key")});assertDoesNotThrow(function(){e.get(Symbol())});assertDoesNotThrow(function(){e.has(undefined)});assertDoesNotThrow(function(){e.has(null)});assertDoesNotThrow(function(){e.has(0)});assertDoesNotThrow(function(){e.has("a-key")});assertDoesNotThrow(function(){e.has(Symbol())});assertDoesNotThrow(function(){e.delete(undefined)});assertDoesNotThrow(function(){e.delete(null)});assertDoesNotThrow(function(){e.delete(0)});assertDoesNotThrow(function(){e.delete("a-key")});assertDoesNotThrow(function(){e.delete(Symbol())})}TestValidMapCalls(new Map);TestValidMapCalls(new WeakMap);function TestInvalidCalls(e){assertThrows(function(){e.set(undefined,0)},TypeError);assertThrows(function(){e.set(null,0)},TypeError);assertThrows(function(){e.set(0,0)},TypeError);assertThrows(function(){e.set("a-key",0)},TypeError);assertThrows(function(){e.set(Symbol(),0)},TypeError)}TestInvalidCalls(new WeakMap);function TestSet(e,t){assertFalse(e.has(t));assertFalse(e.delete(t));if(typeof t==="object"&&!(e instanceof WeakSet)){assertSame(e,e.add(t));assertTrue(e.has(t));assertTrue(e.delete(t))}assertFalse(e.has(t));assertFalse(e.delete(t));assertFalse(e.has(t))}function TestSetBehavior(e){for(var t=0;t<20;t++){TestSet(e,new Object);TestSet(e,t);TestSet(e,t/100);TestSet(e,"key-"+t);TestSet(e,Symbol(t))}var s=[-0,+0,1,1/3,10,+Infinity,-Infinity,NaN,true,false,null,undefined,"x",Symbol(),{},function(){}];for(var t=0;t<s.length;t++){TestSet(e,s[t])}}TestSetBehavior(new Set);TestSetBehavior(new WeakSet);function TestMapping(e,t,s){assertFalse(e.has(t));assertSame(undefined,e.get(t));assertFalse(e.delete(t));if(typeof t==="object"&&!(e instanceof WeakMap)){assertSame(e,e.set(t,s));assertSame(s,e.get(t));assertTrue(e.has(t));assertTrue(e.delete(t))}assertFalse(e.has(t));assertSame(undefined,e.get(t));assertFalse(e.delete(t));assertFalse(e.has(t));assertSame(undefined,e.get(t))}function TestMapBehavior(e){TestMapping(e,new Object,23);TestMapping(e,new Object,"the-value");TestMapping(e,new Object,new Object);for(var t=0;t<20;t++){TestMapping(e,t,new Object);TestMapping(e,t/10,new Object);TestMapping(e,"key-"+t,new Object);TestMapping(e,Symbol(t),new Object)}var s=[-0,+0,1,1/3,10,+Infinity,-Infinity,NaN,true,false,null,undefined,"x",Symbol(),{},function(){}];for(var t=0;t<s.length;t++){TestMapping(e,s[t],23);TestMapping(e,s[t],"the-value");TestMapping(e,s[t],new Object)}}TestMapBehavior(new Map);TestMapBehavior(new WeakMap);function TestQuery(e){var t=new Object;var s=["x",0,+Infinity,-Infinity,true,false,null,undefined];for(var r=0;r<s.length;r++){TestMapping(e,t,s[r])}}TestQuery(new Map);TestQuery(new WeakMap);function TestDelete(e){var t=new Object;TestMapping(e,t,"to-be-deleted");assertFalse(e.delete(t));assertFalse(e.delete(new Object));assertSame(e.get(t),undefined)}TestDelete(new Map);TestDelete(new WeakMap);function TestGC1(e){var t=new Object;e.set(t,"not-collected");gc();assertSame("not-collected",e.get(t))}TestGC1(new Map);TestGC1(new WeakMap);function TestGC2(e){var t=new Object;for(key=t,i=0;i<10;i++,key=e.get(key)){e.set(key,new Object)}gc();var s=0;for(key=t;key!=undefined;key=e.get(key)){s++}assertEquals(11,s)}TestGC2(new Map);TestGC2(new WeakMap);function TestEnumerable(e){function t(e){var t=[];for(var s in e)t.push(s);return t.sort()}assertArrayEquals([],t(e));assertArrayEquals([],t(e.prototype));assertArrayEquals([],t(new e))}TestEnumerable(Set);TestEnumerable(Map);TestEnumerable(WeakMap);TestEnumerable(WeakSet);function TestArbitrary(e){function t(e,t,s){e[t]=s;assertEquals(s,e[t])}for(var s=0;s<20;s++){t(e,s,"val"+s);t(e,"foo"+s,"bar"+s)}TestMapping(e,new Object,"foobar")}TestArbitrary(new Map);TestArbitrary(new WeakMap);assertThrows(function(){Set()},TypeError);assertThrows(function(){Map()},TypeError);assertThrows(function(){WeakMap()},TypeError);assertThrows(function(){WeakSet()},TypeError);var s=new Set;assertFalse(s.has(NaN));assertFalse(s.has(NaN+1));assertFalse(s.has(23));s.add(NaN);assertTrue(s.has(NaN));assertTrue(s.has(NaN+1));assertFalse(s.has(23));var m=new Map;assertFalse(m.has(NaN));assertFalse(m.has(NaN+1));assertFalse(m.has(23));m.set(NaN,"a-value");assertTrue(m.has(NaN));assertTrue(m.has(NaN+1));assertFalse(m.has(23));var s=new Set;assertTrue(s instanceof Set);assertTrue(Set.prototype.add instanceof Function);assertTrue(Set.prototype.has instanceof Function);assertTrue(Set.prototype.delete instanceof Function);assertTrue(Set.prototype.clear instanceof Function);var m=new Map;assertTrue(m instanceof Map);assertTrue(Map.prototype.set instanceof Function);assertTrue(Map.prototype.get instanceof Function);assertTrue(Map.prototype.has instanceof Function);assertTrue(Map.prototype.delete instanceof Function);assertTrue(Map.prototype.clear instanceof Function);var m=new WeakMap;assertTrue(m instanceof WeakMap);assertTrue(WeakMap.prototype.set instanceof Function);assertTrue(WeakMap.prototype.get instanceof Function);assertTrue(WeakMap.prototype.has instanceof Function);assertTrue(WeakMap.prototype.delete instanceof Function);var s=new WeakSet;assertTrue(s instanceof WeakSet);assertTrue(WeakSet.prototype.add instanceof Function);assertTrue(WeakSet.prototype.has instanceof Function);assertTrue(WeakSet.prototype.delete instanceof Function);assertEquals("Set",Set.name);assertEquals("Map",Map.name);assertEquals("WeakMap",WeakMap.name);assertEquals("WeakSet",WeakSet.name);function TestPrototype(e){assertTrue(e.prototype instanceof Object);assertEquals({value:e.prototype,writable:false,enumerable:false,configurable:false},Object.getOwnPropertyDescriptor(e,"prototype"))}TestPrototype(Set);TestPrototype(Map);TestPrototype(WeakMap);TestPrototype(WeakSet);function TestConstructor(e){assertFalse(e===Object.prototype.constructor);assertSame(e,e.prototype.constructor);assertSame(e,(new e).__proto__.constructor);assertEquals(0,e.length)}TestConstructor(Set);TestConstructor(Map);TestConstructor(WeakMap);TestConstructor(WeakSet);function TestDescriptor(e,t){assertEquals({value:t,writable:true,enumerable:false,configurable:true},Object.getOwnPropertyDescriptor(e,t.name))}TestDescriptor(this,Set);TestDescriptor(this,Map);TestDescriptor(this,WeakMap);TestDescriptor(this,WeakSet);assertTrue(WeakMap.prototype.constructor===WeakMap);assertTrue(Object.getPrototypeOf(WeakMap.prototype)===Object.prototype);assertFalse(WeakMap.prototype===Object.prototype);var o=Object.create({});assertFalse("get"in o);assertFalse("set"in o);assertEquals(undefined,o.get);assertEquals(undefined,o.set);var o=Object.create({},{myValue:{value:10,enumerable:false,configurable:true,writable:true}});assertEquals(10,o.myValue);var alwaysBogus=[undefined,null,true,"x",23,{}];var bogusReceiversTestSet=[{proto:Set.prototype,funcs:["add","has","delete"],receivers:alwaysBogus.concat([new Map,new WeakMap,new WeakSet])},{proto:Map.prototype,funcs:["get","set","has","delete"],receivers:alwaysBogus.concat([new Set,new WeakMap,new WeakSet])},{proto:WeakMap.prototype,funcs:["get","set","has","delete"],receivers:alwaysBogus.concat([new Set,new Map,new WeakSet])},{proto:WeakSet.prototype,funcs:["add","has","delete"],receivers:alwaysBogus.concat([new Set,new Map,new WeakMap])}];function TestBogusReceivers(e){for(var t=0;t<e.length;t++){var s=e[t].proto;var r=e[t].funcs;var a=e[t].receivers;for(var o=0;o<r.length;o++){var n=s[r[o]];for(var u=0;u<a.length;u++){assertThrows(function(){n.call(a[u],{})},TypeError)}}}}TestBogusReceivers(bogusReceiversTestSet);var setSizeDescriptor=Object.getOwnPropertyDescriptor(Set.prototype,"size");assertEquals(undefined,setSizeDescriptor.value);assertEquals(undefined,setSizeDescriptor.set);assertTrue(setSizeDescriptor.get instanceof Function);assertEquals(undefined,setSizeDescriptor.get.prototype);assertFalse(setSizeDescriptor.enumerable);assertTrue(setSizeDescriptor.configurable);assertEquals("get size",setSizeDescriptor.get.name);var s=new Set;assertFalse(s.hasOwnProperty("size"));for(var i=0;i<10;i++){assertEquals(i,s.size);s.add(i)}for(var i=9;i>=0;i--){s.delete(i);assertEquals(i,s.size)}var mapSizeDescriptor=Object.getOwnPropertyDescriptor(Map.prototype,"size");assertEquals(undefined,mapSizeDescriptor.value);assertEquals(undefined,mapSizeDescriptor.set);assertTrue(mapSizeDescriptor.get instanceof Function);assertEquals(undefined,mapSizeDescriptor.get.prototype);assertFalse(mapSizeDescriptor.enumerable);assertTrue(mapSizeDescriptor.configurable);assertEquals("get size",mapSizeDescriptor.get.name);var m=new Map;assertFalse(m.hasOwnProperty("size"));for(var i=0;i<10;i++){assertEquals(i,m.size);m.set(i,i)}for(var i=9;i>=0;i--){m.delete(i);assertEquals(i,m.size)}(function(){var e=new Set;e.add(42);assertTrue(e.has(42));assertEquals(1,e.size);e.clear();assertFalse(e.has(42));assertEquals(0,e.size)})();(function(){var e=new Map;e.set(42,true);assertTrue(e.has(42));assertEquals(1,e.size);e.clear();assertFalse(e.has(42));assertEquals(0,e.size)})();(function e(){var t=new Set;t.add(-0);assertSame(0,t.values().next().value);t.add(0);assertEquals(1,t.size);assertTrue(t.has(0));assertTrue(t.has(-0))})();(function e(){var t=new Map;t.set(-0,"minus");assertSame(0,t.keys().next().value);t.set(0,"plus");assertEquals(1,t.size);assertTrue(t.has(0));assertTrue(t.has(-0));assertEquals("plus",t.get(0));assertEquals("plus",t.get(-0))})();(function e(){assertThrows(function(){Set.prototype.set.forEach.call({})},TypeError);var t=new Set;assertThrows(function(){t.forEach({})},TypeError)})();(function e(){var r=new Set;r.add("a");r.add("b");r.add("c");var a="";var o={};r.forEach(function(e,t,s){assertSame(e,t);assertSame(r,s);assertSame(this,o);a+=e;if(e==="a"){r.delete("b");r.add("d");r.add("e");r.add("f")}else if(e==="c"){r.add("b");r.delete("e")}},o);assertEquals("acdfb",a)})();(function e(){var t=new Set;t.add("a");t.add("b");var s="";t.forEach(function(e){s+=e;if(e==="b"){t.add("c")}});assertEquals("abc",s)})();(function e(){var t=new Set;t.add("a");t.add("b");t.add("c");var s="";t.forEach(function(e){s+=e;if(e==="b"){t.delete("c")}});assertEquals("ab",s)})();(function e(){var t=new Set;t.add("a");t.add("b");t.add("c");var s="";t.forEach(function(e){s+=e;if(e==="b"){t.delete("a")}else if(e==="c"){t.add("a")}});assertEquals("abca",s)})();(function e(){var t=new Set;t.add("a");t.add("b");t.add("c");var s="";t.forEach(function(e){s+=e;if(e==="a"){t.clear();t.add("d");t.add("e")}});assertEquals("ade",s)})();(function e(){var t=new Set;t.add("a");t.add("b");t.add("c");var s="";t.forEach(function(e){s+=e;t.forEach(function(e){s+=e;if(e==="a"){t.delete("b")}})});assertEquals("aaccac",s)})();(function e(){var t=new Set;t.add("a");t.add("b");t.add("c");var s="";var r={};try{t.forEach(function(e){s+=e;throw r})}catch(e){assertEquals(r,e)}assertEquals("a",s)})();(function e(){var t=new Set;for(var s=0;s<100;s++){t.add(s)}var r=0;t.forEach(function(e){r+=e;if(e%10===0){gc()}});assertEquals(4950,r)})();(function e(){var t=new Set(["1","2"]);var s=[];t.forEach(function(){s.push(this)},"");assertTrue(s[0]!==s[1]);s=[];t.forEach(function(){s.push(this)},{});assertEquals(s[0],s[1])})();(function e(){var t=new Set(["1","2"]);var s=[];t.forEach(function(){"use strict";s.push(this)},"");assertTrue(s[0]===""&&s[0]===s[1])})();(function e(){assertThrows(function(){Map.prototype.map.forEach.call({})},TypeError);var t=new Map;assertThrows(function(){t.forEach({})},TypeError)})();(function e(){var r=new Map;r.set(0,"a");r.set(1,"b");r.set(2,"c");var a=[];var o={};r.forEach(function(e,t,s){assertEquals(r,s);assertEquals(this,o);a.push(t,e);if(t===0){r.delete(1);r.set(3,"d");r.set(4,"e");r.set(5,"f")}else if(t===2){r.set(1,"B");r.delete(4)}},o);assertArrayEquals([0,"a",2,"c",3,"d",5,"f",1,"B"],a)})();(function e(){var s=new Map;s.set(0,"a");s.set(1,"b");var r=[];s.forEach(function(e,t){r.push(t,e);if(t===1){s.set(2,"c")}});assertArrayEquals([0,"a",1,"b",2,"c"],r)})();(function e(){var s=new Map;s.set(0,"a");s.set(1,"b");s.set(2,"c");var r=[];s.forEach(function(e,t){r.push(t,e);if(t===1){s.delete(2)}});assertArrayEquals([0,"a",1,"b"],r)})();(function e(){var s=new Map;s.set(0,"a");s.set(1,"b");s.set(2,"c");var r=[];s.forEach(function(e,t){r.push(t,e);if(t===1){s.delete(0)}else if(t===2){s.set(0,"a")}});assertArrayEquals([0,"a",1,"b",2,"c",0,"a"],r)})();(function e(){var s=new Map;s.set(0,"a");s.set(1,"b");s.set(2,"c");var r=[];s.forEach(function(e,t){r.push(t,e);if(t===0){s.clear();s.set(3,"d");s.set(4,"e")}});assertArrayEquals([0,"a",3,"d",4,"e"],r)})();(function e(){var s=new Map;s.set(0,"a");s.set(1,"b");s.set(2,"c");var r=[];s.forEach(function(e,t){r.push(t,e);s.forEach(function(e,t){r.push(t,e);if(t===0){s.delete(1)}})});assertArrayEquals([0,"a",0,"a",2,"c",2,"c",0,"a",2,"c"],r)})();(function e(){var t=new Map;t.set(0,"a");t.set(1,"b");t.set(2,"c");var s=[];var r={};try{t.forEach(function(e,t){s.push(t,e);throw r})}catch(e){assertEquals(r,e)}assertArrayEquals([0,"a"],s)})();(function e(){var t=new Map;for(var s=0;s<100;s++){t.set(s,s)}var r=0;t.forEach(function(e){r+=e;if(e%10===0){gc()}});assertEquals(4950,r)})();(function e(){var s=new Map;s.set(0,0);var r=[];s.forEach(function(e){r.push(e);if(e===0){for(var t=1;t<4;t++){s.set(t,t)}}if(e===3){for(var t=0;t<4;t++){s.delete(t)}for(var t=4;t<8;t++){s.set(t,t)}}});assertArrayEquals([0,1,2,3,4,5,6,7],r)})();(function e(){var s=new Map;s.set(0,0);var r=0;var a=[];s.forEach(function(e){a.push(e);if(++r<5){for(var t=0;t<5;t++){s.clear();s.set(r,r)}}});assertArrayEquals([0,1,2,3,4],a)})();(function e(){var s=new Map;s.set(0,0);s.set(1,1);s.set(2,2);s.set(3,3);s.delete(0);var r=0;var a=[];s.forEach(function(e){if(++r>10)return;a.push(e);if(e==3){s.delete(1);for(var t=4;t<10;t++){s.set(t,t)}for(var t=4;t<10;t+=2){s.delete(t)}s.delete(2);for(var t=10;t<20;t++){s.set(t,t)}for(var t=10;t<20;t+=2){s.delete(t)}s.delete(3)}});assertArrayEquals([1,2,3,5,7,9,11,13,15,17],a)})();(function e(){var s=new Map;s.set(0,0);var r=[];s.forEach(function(e){r.push(e);if(e===0){for(var t=1;t<8;t++){s.set(t,t)}}if(e===4){for(var t=0;t<8;t++){s.delete(t)}}});assertArrayEquals([0,1,2,3,4],r)})();(function e(){var s=new Map;s.set(0,0);var r=[];s.forEach(function(e){r.push(e);if(e===0){for(var t=1;t<16;t++){s.set(t,t)}}if(e===4){for(var t=5;t<16;t++){s.delete(t)}}});assertArrayEquals([0,1,2,3,4],r)})();(function e(){var t=new Map;t.set("key1","value1");t.set("key2","value2");var s=[];t.forEach(function(){s.push(this)},"");assertTrue(s[0]!==s[1]);s=[];t.forEach(function(){s.push(this)},{});assertEquals(s[0],s[1])})();(function e(){var t=new Map;t.set("key1","value1");t.set("key2","value2");var s=[];t.forEach(function(){"use strict";s.push(this)},"");assertTrue(s[0]===""&&s[0]===s[1])})();var oneAndTwo=new Map;var k0={key:0};var k1={key:1};var k2={key:2};oneAndTwo.set(k1,1);oneAndTwo.set(k2,2);function TestSetConstructor(t){var e=new t(null);assertSize(0,e);e=new t(undefined);assertSize(0,e);assertThrows(function(){new t({})},TypeError);assertThrows(function(){new t(true)},TypeError);assertThrows(function(){var e={};e[Symbol.iterator]=42;new t(e)},TypeError);assertThrows(function(){var e={};e[Symbol.iterator]=function(){return 42};new t(e)},TypeError);var s=new Set;s.add(k0);s.add(k1);s.add(k2);e=new t(s.values());assertSize(3,e);assertTrue(e.has(k0));assertTrue(e.has(k1));assertTrue(e.has(k2))}TestSetConstructor(Set);TestSetConstructor(WeakSet);function TestSetConstructorAddNotCallable(e){var t=e.prototype.add;assertThrows(function(){e.prototype.add=42;new e(oneAndTwo.values())},TypeError);e.prototype.add=t}TestSetConstructorAddNotCallable(Set);TestSetConstructorAddNotCallable(WeakSet);function TestSetConstructorGetAddOnce(e){var t=e.prototype.add;var s=0;Object.defineProperty(e.prototype,"add",{get:function(){s++;return function(){}}});var r=new e(oneAndTwo.values());assertEquals(1,s);assertSize(0,r);Object.defineProperty(e.prototype,"add",{value:t,writable:true})}TestSetConstructorGetAddOnce(Set);TestSetConstructorGetAddOnce(WeakSet);function TestSetConstructorAddReplaced(t){var s=t.prototype.add;var r=0;t.prototype.add=function(e){r++;s.call(this,e);t.prototype.add=null};var e=new t(oneAndTwo.keys());assertEquals(2,r);assertSize(2,e);t.prototype.add=s}TestSetConstructorAddReplaced(Set);TestSetConstructorAddReplaced(WeakSet);function TestSetConstructorOrderOfDoneValue(e){var t=0,s=0;var r={next:function(){return{get value(){t++},get done(){s++;throw new Error}}}};r[Symbol.iterator]=function(){return this};assertThrows(function(){new e(r)});assertEquals(1,s);assertEquals(0,t)}TestSetConstructorOrderOfDoneValue(Set);TestSetConstructorOrderOfDoneValue(WeakSet);function TestSetConstructorNextNotAnObject(e){var t={next:function(){return"abc"}};t[Symbol.iterator]=function(){return this};assertThrows(function(){new e(t)},TypeError)}TestSetConstructorNextNotAnObject(Set);TestSetConstructorNextNotAnObject(WeakSet);(function e(){assertThrows(function(){new WeakSet([1])},TypeError)})();function TestSetConstructorIterableValue(e){"use strict";Object.defineProperty(Number.prototype,Symbol.iterator,{get:function(){assertEquals("number",typeof this);return function(){assertEquals("number",typeof this);return oneAndTwo.keys()}},configurable:true});var t=new e(42);assertSize(2,t);assertTrue(t.has(k1));assertTrue(t.has(k2));delete Number.prototype[Symbol.iterator]}TestSetConstructorIterableValue(Set);TestSetConstructorIterableValue(WeakSet);(function e(){var t=new Set("abc");assertSize(3,t);assertTrue(t.has("a"));assertTrue(t.has("b"));assertTrue(t.has("c"))})();function TestMapConstructor(t){var e=new t(null);assertSize(0,e);e=new t(undefined);assertSize(0,e);assertThrows(function(){new t({})},TypeError);assertThrows(function(){new t(true)},TypeError);assertThrows(function(){var e={};e[Symbol.iterator]=42;new t(e)},TypeError);assertThrows(function(){var e={};e[Symbol.iterator]=function(){return 42};new t(e)},TypeError);var s=new Map;s.set(k0,"a");s.set(k1,"b");s.set(k2,"c");e=new t(s.entries());assertSize(3,e);assertEquals("a",e.get(k0));assertEquals("b",e.get(k1));assertEquals("c",e.get(k2))}TestMapConstructor(Map);TestMapConstructor(WeakMap);function TestMapConstructorSetNotCallable(e){var t=e.prototype.set;assertThrows(function(){e.prototype.set=42;new e(oneAndTwo.entries())},TypeError);e.prototype.set=t}TestMapConstructorSetNotCallable(Map);TestMapConstructorSetNotCallable(WeakMap);function TestMapConstructorGetAddOnce(e){var t=e.prototype.set;var s=0;Object.defineProperty(e.prototype,"set",{get:function(){s++;return function(){}}});var r=new e(oneAndTwo.entries());assertEquals(1,s);assertSize(0,r);Object.defineProperty(e.prototype,"set",{value:t,writable:true})}TestMapConstructorGetAddOnce(Map);TestMapConstructorGetAddOnce(WeakMap);function TestMapConstructorSetReplaced(s){var r=s.prototype.set;var a=0;s.prototype.set=function(e,t){a++;r.call(this,e,t);s.prototype.set=null};var e=new s(oneAndTwo.entries());assertEquals(2,a);assertSize(2,e);s.prototype.set=r}TestMapConstructorSetReplaced(Map);TestMapConstructorSetReplaced(WeakMap);function TestMapConstructorOrderOfDoneValue(e){var t=0,s=0;function r(){}var a={next:function(){return{get value(){t++},get done(){s++;throw new r}}}};a[Symbol.iterator]=function(){return this};assertThrows(function(){new e(a)},r);assertEquals(1,s);assertEquals(0,t)}TestMapConstructorOrderOfDoneValue(Map);TestMapConstructorOrderOfDoneValue(WeakMap);function TestMapConstructorNextNotAnObject(e){var t={next:function(){return"abc"}};t[Symbol.iterator]=function(){return this};assertThrows(function(){new e(t)},TypeError)}TestMapConstructorNextNotAnObject(Map);TestMapConstructorNextNotAnObject(WeakMap);function TestMapConstructorIteratorNotObjectValues(e){assertThrows(function(){new e(oneAndTwo.values())},TypeError)}TestMapConstructorIteratorNotObjectValues(Map);TestMapConstructorIteratorNotObjectValues(WeakMap);(function e(){assertThrows(function(){new WeakMap([[1,2]])},TypeError)})();function TestMapConstructorIterableValue(e){"use strict";Object.defineProperty(Number.prototype,Symbol.iterator,{get:function(){assertEquals("number",typeof this);return function(){assertEquals("number",typeof this);return oneAndTwo.entries()}},configurable:true});var t=new e(42);assertSize(2,t);assertEquals(1,t.get(k1));assertEquals(2,t.get(k2));delete Number.prototype[Symbol.iterator]}TestMapConstructorIterableValue(Map);TestMapConstructorIterableValue(WeakMap);function TestCollectionToString(e){assertEquals("[object "+e.name+"]",Object.prototype.toString.call(new e))}TestCollectionToString(Map);TestCollectionToString(Set);TestCollectionToString(WeakMap);TestCollectionToString(WeakSet);function TestConstructorOrderOfAdderIterator(e,t){var s=new Map;s.set({},{});s.set({},{});var r=s[Symbol.iterator];Object.defineProperty(s,Symbol.iterator,{get:function(){a+="iterator";return r}});var a="";var o=e.prototype[t];Object.defineProperty(e.prototype,t,{get:function(){a+=t;return o}});new e(s);assertEquals(t+"iterator",a);Object.defineProperty(e.prototype,t,{value:o})}TestConstructorOrderOfAdderIterator(Map,"set");TestConstructorOrderOfAdderIterator(Set,"add");TestConstructorOrderOfAdderIterator(WeakMap,"set");TestConstructorOrderOfAdderIterator(WeakSet,"add");