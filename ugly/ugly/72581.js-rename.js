"use strict";const ModuleFilenameHelpers=require("./ModuleFilenameHelpers");const NormalModule=require("./NormalModule");const createSchemaValidation=require("./util/create-schema-validation");const validate=createSchemaValidation(require("../schemas/plugins/LoaderOptionsPlugin.check.js"),()=>require("../schemas/plugins/LoaderOptionsPlugin.json"),{name:"Loader Options Plugin",baseDataPath:"options"});class LoaderOptionsPlugin{constructor(e={}){validate(e);if(typeof e!=="object")e={};if(!e.test){e.test={test:()=>true}}this.options=e}apply(e){const a=this.options;e.hooks.compilation.tap("LoaderOptionsPlugin",e=>{NormalModule.getCompilationHooks(e).loader.tap("LoaderOptionsPlugin",(e,o)=>{const t=o.resource;if(!t)return;const i=t.indexOf("?");if(ModuleFilenameHelpers.matchObject(a,i<0?t:t.substr(0,i))){for(const s of Object.keys(a)){if(s==="include"||s==="exclude"||s==="test"){continue}e[s]=a[s]}}})})}}module.exports=LoaderOptionsPlugin;