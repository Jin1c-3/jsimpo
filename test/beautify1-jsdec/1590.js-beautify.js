const _=require('underscore-plus');const url=require('url');const path=require('path');const{Emitter,Disposable,CompositeDisposable}=require('event-kit');const fs=require('fs-plus');const{Directory}=require('pathwatcher');const Grim=require('grim');const DefaultDirectorySearcher=require('./default-directory-searcher');const RipgrepDirectorySearcher=require('./ripgrep-directory-searcher');const Dock=require('./dock');const Model=require('./model');const StateStore=require('./state-store');const TextEditor=require('./text-editor');const Panel=require('./panel');const PanelContainer=require('./panel-container');const Task=require('./task');const WorkspaceCenter=require('./workspace-center');const{createWorkspaceElement}=require('./workspace-element');const STOPPED_CHANGING_ACTIVE_PANE_ITEM_DELAY=100;const ALL_LOCATIONS=['center','left','right','bottom'];module.exports=class Workspace extends Model{constructor(params){super(...arguments);this.updateWindowTitle=this.updateWindowTitle.bind(this);this.updateDocumentEdited=this.updateDocumentEdited.bind(this);this.didDestroyPaneItem=this.didDestroyPaneItem.bind(this);this.didChangeActivePaneOnPaneContainer=this.didChangeActivePaneOnPaneContainer.bind(this);this.didChangeActivePaneItemOnPaneContainer=this.didChangeActivePaneItemOnPaneContainer.bind(this);this.didActivatePaneContainer=this.didActivatePaneContainer.bind(this);this.enablePersistence=params.enablePersistence;this.packageManager=params.packageManager;this.config=params.config;this.project=params.project;this.notificationManager=params.notificationManager;this.viewRegistry=params.viewRegistry;this.grammarRegistry=params.grammarRegistry;this.applicationDelegate=params.applicationDelegate;this.assert=params.assert;this.deserializerManager=params.deserializerManager;this.textEditorRegistry=params.textEditorRegistry;this.styleManager=params.styleManager;this.draggingItem=false;this.itemLocationStore=new StateStore('AtomPreviousItemLocations',1);this.emitter=new Emitter();this.openers=[];this.destroyedItemURIs=[];this.stoppedChangingActivePaneItemTimeout=null;this.scandalDirectorySearcher=new DefaultDirectorySearcher();this.ripgrepDirectorySearcher=new RipgrepDirectorySearcher();this.consumeServices(this.packageManager);this.paneContainers={center:this.createCenter(),left:this.createDock('left'),right:this.createDock('right'),bottom:this.createDock('bottom')};this.activePaneContainer=this.paneContainers.center;this.hasActiveTextEditor=false;this.panelContainers={top:new PanelContainer({viewRegistry:this.viewRegistry,location:'top'}),left:new PanelContainer({viewRegistry:this.viewRegistry,location:'left',dock:this.paneContainers.left}),right:new PanelContainer({viewRegistry:this.viewRegistry,location:'right',dock:this.paneContainers.right}),bottom:new PanelContainer({viewRegistry:this.viewRegistry,location:'bottom',dock:this.paneContainers.bottom}),header:new PanelContainer({viewRegistry:this.viewRegistry,location:'header'}),footer:new PanelContainer({viewRegistry:this.viewRegistry,location:'footer'}),modal:new PanelContainer({viewRegistry:this.viewRegistry,location:'modal'})};this.incoming=new Map()}get paneContainer(){Grim.deprecate('`atom.workspace.paneContainer` has always been private, but it is now gone. Please use `atom.workspace.getCenter()` instead and consult the workspace API docs for public methods.');return this.paneContainers.center.paneContainer}getElement(){if(!this.element){this.element=createWorkspaceElement().initialize(this,{config:this.config,project:this.project,viewRegistry:this.viewRegistry,styleManager:this.styleManager})}return this.element}createCenter(){return new WorkspaceCenter({config:this.config,applicationDelegate:this.applicationDelegate,notificationManager:this.notificationManager,deserializerManager:this.deserializerManager,viewRegistry:this.viewRegistry,didActivate:this.didActivatePaneContainer,didChangeActivePane:this.didChangeActivePaneOnPaneContainer,didChangeActivePaneItem:this.didChangeActivePaneItemOnPaneContainer,didDestroyPaneItem:this.didDestroyPaneItem})}createDock(location){return new Dock({location,config:this.config,applicationDelegate:this.applicationDelegate,deserializerManager:this.deserializerManager,notificationManager:this.notificationManager,viewRegistry:this.viewRegistry,didActivate:this.didActivatePaneContainer,didChangeActivePane:this.didChangeActivePaneOnPaneContainer,didChangeActivePaneItem:this.didChangeActivePaneItemOnPaneContainer,didDestroyPaneItem:this.didDestroyPaneItem})}reset(packageManager){this.packageManager=packageManager;this.emitter.dispose();this.emitter=new Emitter();this.paneContainers.center.destroy();this.paneContainers.left.destroy();this.paneContainers.right.destroy();this.paneContainers.bottom.destroy();_.values(this.panelContainers).forEach(panelContainer=>{panelContainer.destroy()});this.paneContainers={center:this.createCenter(),left:this.createDock('left'),right:this.createDock('right'),bottom:this.createDock('bottom')};this.activePaneContainer=this.paneContainers.center;this.hasActiveTextEditor=false;this.panelContainers={top:new PanelContainer({viewRegistry:this.viewRegistry,location:'top'}),left:new PanelContainer({viewRegistry:this.viewRegistry,location:'left',dock:this.paneContainers.left}),right:new PanelContainer({viewRegistry:this.viewRegistry,location:'right',dock:this.paneContainers.right}),bottom:new PanelContainer({viewRegistry:this.viewRegistry,location:'bottom',dock:this.paneContainers.bottom}),header:new PanelContainer({viewRegistry:this.viewRegistry,location:'header'}),footer:new PanelContainer({viewRegistry:this.viewRegistry,location:'footer'}),modal:new PanelContainer({viewRegistry:this.viewRegistry,location:'modal'})};this.openers=[];this.destroyedItemURIs=[];if(this.element){this.element.destroy();this.element=null}this.consumeServices(this.packageManager)}initialize(){this.originalFontSize=this.config.get('defaultFontSize');this.project.onDidChangePaths(this.updateWindowTitle);this.subscribeToAddedItems();this.subscribeToMovedItems();this.subscribeToDockToggling()}consumeServices({serviceHub}){this.directorySearchers=[];serviceHub.consume('atom.directory-searcher','^0.1.0',provider=>this.directorySearchers.unshift(provider))}serialize(){return{deserializer:'Workspace',packagesWithActiveGrammars:this.getPackageNamesWithActiveGrammars(),destroyedItemURIs:this.destroyedItemURIs.slice(),paneContainer:{version:2},paneContainers:{center:this.paneContainers.center.serialize(),left:this.paneContainers.left.serialize(),right:this.paneContainers.right.serialize(),bottom:this.paneContainers.bottom.serialize()}}}deserialize(state,deserializerManager){const packagesWithActiveGrammars=state.packagesWithActiveGrammars!=null?state.packagesWithActiveGrammars:[];for(let packageName of packagesWithActiveGrammars){const pkg=this.packageManager.getLoadedPackage(packageName);if(pkg!=null){pkg.loadGrammarsSync()}}if(state.destroyedItemURIs!=null){this.destroyedItemURIs=state.destroyedItemURIs}if(state.paneContainers){this.paneContainers.center.deserialize(state.paneContainers.center,deserializerManager);this.paneContainers.left.deserialize(state.paneContainers.left,deserializerManager);this.paneContainers.right.deserialize(state.paneContainers.right,deserializerManager);this.paneContainers.bottom.deserialize(state.paneContainers.bottom,deserializerManager)}else if(state.paneContainer){this.paneContainers.center.deserialize(state.paneContainer,deserializerManager)}this.hasActiveTextEditor=this.getActiveTextEditor()!=null;this.updateWindowTitle()}getPackageNamesWithActiveGrammars(){const packageNames=[];const addGrammar=({includedGrammarScopes,packageName}={})=>{if(!packageName){return}if(packageNames.indexOf(packageName)!==-1){return}packageNames.push(packageName);for(let scopeName of includedGrammarScopes!=null?includedGrammarScopes:[]){addGrammar(this.grammarRegistry.grammarForScopeName(scopeName))}};const editors=this.getTextEditors();for(let editor of editors){addGrammar(editor.getGrammar())}if(editors.length>0){for(let grammar of this.grammarRegistry.getGrammars()){if(grammar.injectionSelector){addGrammar(grammar)}}}return _.uniq(packageNames)}didActivatePaneContainer(paneContainer){if(paneContainer!==this.getActivePaneContainer()){this.activePaneContainer=paneContainer;this.didChangeActivePaneItem(this.activePaneContainer.getActivePaneItem());this.emitter.emit('did-change-active-pane-container',this.activePaneContainer);this.emitter.emit('did-change-active-pane',this.activePaneContainer.getActivePane());this.emitter.emit('did-change-active-pane-item',this.activePaneContainer.getActivePaneItem())}}didChangeActivePaneOnPaneContainer(paneContainer,pane){if(paneContainer===this.getActivePaneContainer()){this.emitter.emit('did-change-active-pane',pane)}}didChangeActivePaneItemOnPaneContainer(paneContainer,item){if(paneContainer===this.getActivePaneContainer()){this.didChangeActivePaneItem(item);this.emitter.emit('did-change-active-pane-item',item)}if(paneContainer===this.getCenter()){const hadActiveTextEditor=this.hasActiveTextEditor;this.hasActiveTextEditor=item instanceof TextEditor;if(this.hasActiveTextEditor||hadActiveTextEditor){const itemValue=this.hasActiveTextEditor?item:undefined;this.emitter.emit('did-change-active-text-editor',itemValue)}}}didChangeActivePaneItem(item){this.updateWindowTitle();this.updateDocumentEdited();if(this.activeItemSubscriptions)this.activeItemSubscriptions.dispose();this.activeItemSubscriptions=new CompositeDisposable();let modifiedSubscription,titleSubscription;if(item!=null&&typeof item.onDidChangeTitle==='function'){titleSubscription=item.onDidChangeTitle(this.updateWindowTitle)}else if(item!=null&&typeof item.on==='function'){titleSubscription=item.on('title-changed',this.updateWindowTitle);if(titleSubscription==null||typeof titleSubscription.dispose!=='function'){titleSubscription=new Disposable(()=>{item.off('title-changed',this.updateWindowTitle)})}}if(item!=null&&typeof item.onDidChangeModified==='function'){modifiedSubscription=item.onDidChangeModified(this.updateDocumentEdited)}else if(item!=null&&typeof item.on==='function'){modifiedSubscription=item.on('modified-status-changed',this.updateDocumentEdited);if(modifiedSubscription==null||typeof modifiedSubscription.dispose!=='function'){modifiedSubscription=new Disposable(()=>{item.off('modified-status-changed',this.updateDocumentEdited)})}}if(titleSubscription!=null){this.activeItemSubscriptions.add(titleSubscription)}if(modifiedSubscription!=null){this.activeItemSubscriptions.add(modifiedSubscription)}this.cancelStoppedChangingActivePaneItemTimeout();this.stoppedChangingActivePaneItemTimeout=setTimeout(()=>{this.stoppedChangingActivePaneItemTimeout=null;this.emitter.emit('did-stop-changing-active-pane-item',item)},STOPPED_CHANGING_ACTIVE_PANE_ITEM_DELAY)}cancelStoppedChangingActivePaneItemTimeout(){if(this.stoppedChangingActivePaneItemTimeout!=null){clearTimeout(this.stoppedChangingActivePaneItemTimeout)}}setDraggingItem(draggingItem){_.values(this.paneContainers).forEach(dock=>{dock.setDraggingItem(draggingItem)})}subscribeToAddedItems(){this.onDidAddPaneItem(({item,pane,index})=>{if(item instanceof TextEditor){const subscriptions=new CompositeDisposable(this.textEditorRegistry.add(item),this.textEditorRegistry.maintainConfig(item));if(!this.project.findBufferForId(item.buffer.id)){this.project.addBuffer(item.buffer)}item.onDidDestroy(()=>{subscriptions.dispose()});this.emitter.emit('did-add-text-editor',{textEditor:item,pane,index});if(!item.isDestroyed()){subscriptions.add(item.observeGrammar(this.handleGrammarUsed.bind(this)))}}})}subscribeToDockToggling(){const docks=[this.getLeftDock(),this.getRightDock(),this.getBottomDock()];docks.forEach(dock=>{dock.onDidChangeVisible(visible=>{if(visible)return;const{activeElement}=document;const dockElement=dock.getElement();if(dockElement===activeElement||dockElement.contains(activeElement)){this.getCenter().activate()}})})}subscribeToMovedItems(){for(const paneContainer of this.getPaneContainers()){paneContainer.observePanes(pane=>{pane.onDidAddItem(({item})=>{if(typeof item.getURI==='function'&&this.enablePersistence){const uri=item.getURI();if(uri){const location=paneContainer.getLocation();let defaultLocation;if(typeof item.getDefaultLocation==='function'){defaultLocation=item.getDefaultLocation()}defaultLocation=defaultLocation||'center';if(location===defaultLocation){this.itemLocationStore.delete(item.getURI())}else{this.itemLocationStore.save(item.getURI(),location)}}}})})}}updateWindowTitle(){let itemPath,itemTitle,projectPath,representedPath;const appName=atom.getAppName();const left=this.project.getPaths();const projectPaths=left!=null?left:[];const item=this.getActivePaneItem();if(item){itemPath=typeof item.getPath==='function'?item.getPath():undefined;const longTitle=typeof item.getLongTitle==='function'?item.getLongTitle():undefined;itemTitle=longTitle==null?typeof item.getTitle==='function'?item.getTitle():undefined:longTitle;projectPath=_.find(projectPaths,projectPath=>itemPath===projectPath||(itemPath!=null?itemPath.startsWith(projectPath+path.sep):undefined))}if(itemTitle==null){itemTitle='untitled'}if(projectPath==null){projectPath=itemPath?path.dirname(itemPath):projectPaths[0]}if(projectPath!=null){projectPath=fs.tildify(projectPath)}const titleParts=[];if(item!=null&&projectPath!=null){titleParts.push(itemTitle,projectPath);representedPath=itemPath!=null?itemPath:projectPath}else if(projectPath!=null){titleParts.push(projectPath);representedPath=projectPath}else{titleParts.push(itemTitle);representedPath=''}if(process.platform!=='darwin'){titleParts.push(appName)}document.title=titleParts.join(' \u2014 ');this.applicationDelegate.setRepresentedFilename(representedPath);this.emitter.emit('did-change-window-title')}updateDocumentEdited(){const activePaneItem=this.getActivePaneItem();const modified=activePaneItem!=null&&typeof activePaneItem.isModified==='function'?activePaneItem.isModified()||false:false;this.applicationDelegate.setWindowDocumentEdited(modified)}onDidChangeActivePaneContainer(callback){return this.emitter.on('did-change-active-pane-container',callback)}observeTextEditors(callback){for(let textEditor of this.getTextEditors()){callback(textEditor)}return this.onDidAddTextEditor(({textEditor})=>callback(textEditor))}observePaneItems(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.observePaneItems(callback)))}onDidChangeActivePaneItem(callback){return this.emitter.on('did-change-active-pane-item',callback)}onDidStopChangingActivePaneItem(callback){return this.emitter.on('did-stop-changing-active-pane-item',callback)}onDidChangeActiveTextEditor(callback){return this.emitter.on('did-change-active-text-editor',callback)}observeActivePaneItem(callback){callback(this.getActivePaneItem());return this.onDidChangeActivePaneItem(callback)}observeActiveTextEditor(callback){callback(this.getActiveTextEditor());return this.onDidChangeActiveTextEditor(callback)}onDidOpen(callback){return this.emitter.on('did-open',callback)}onDidAddPane(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.onDidAddPane(callback)))}onWillDestroyPane(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.onWillDestroyPane(callback)))}onDidDestroyPane(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.onDidDestroyPane(callback)))}observePanes(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.observePanes(callback)))}onDidChangeActivePane(callback){return this.emitter.on('did-change-active-pane',callback)}observeActivePane(callback){callback(this.getActivePane());return this.onDidChangeActivePane(callback)}onDidAddPaneItem(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.onDidAddPaneItem(callback)))}onWillDestroyPaneItem(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.onWillDestroyPaneItem(callback)))}onDidDestroyPaneItem(callback){return new CompositeDisposable(...this.getPaneContainers().map(container=>container.onDidDestroyPaneItem(callback)))}onDidAddTextEditor(callback){return this.emitter.on('did-add-text-editor',callback)}onDidChangeWindowTitle(callback){return this.emitter.on('did-change-window-title',callback)}async open(itemOrURI,options={}){let uri,item;if(typeof itemOrURI==='string'){uri=this.project.resolvePath(itemOrURI)}else if(itemOrURI){item=itemOrURI;if(typeof item.getURI==='function')uri=item.getURI()}let resolveItem=()=>{};if(uri){const incomingItem=this.incoming.get(uri);if(!incomingItem){this.incoming.set(uri,new Promise(resolve=>{resolveItem=resolve}))}else{await incomingItem}}try{if(!atom.config.get('core.allowPendingPaneItems')){options.pending=false}if(uri&&(!url.parse(uri).protocol||process.platform==='win32')){this.applicationDelegate.addRecentDocument(uri)}let pane,itemExistsInWorkspace;if(item||uri){if(options.pane){pane=options.pane}else if(options.searchAllPanes){pane=item?this.paneForItem(item):this.paneForURI(uri)}else{let container;if(uri)container=this.paneContainerForURI(uri);if(!container)container=this.getActivePaneContainer();pane=container.getActivePane();switch(options.split){case'left':pane=pane.findLeftmostSibling();break;case'right':pane=pane.findRightmostSibling();break;case'up':pane=pane.findTopmostSibling();break;case'down':pane=pane.findBottommostSibling();break}}if(pane){if(item){itemExistsInWorkspace=pane.getItems().includes(item)}else{item=pane.itemForURI(uri);itemExistsInWorkspace=item!=null}}}if(item)await Promise.resolve();if(!itemExistsInWorkspace){item=item||(await this.createItemForURI(uri,options));if(!item)return;if(options.pane){pane=options.pane}else{let location=options.location;if(!location&&!options.split&&uri&&this.enablePersistence){location=await this.itemLocationStore.load(uri)}if(!location&&typeof item.getDefaultLocation==='function'){location=item.getDefaultLocation()}const allowedLocations=typeof item.getAllowedLocations==='function'?item.getAllowedLocations():ALL_LOCATIONS;location=allowedLocations.includes(location)?location:allowedLocations[0];const container=this.paneContainers[location]||this.getCenter();pane=container.getActivePane();switch(options.split){case'left':pane=pane.findLeftmostSibling();break;case'right':pane=pane.findOrCreateRightmostSibling();break;case'up':pane=pane.findTopmostSibling();break;case'down':pane=pane.findOrCreateBottommostSibling();break}}}if(!options.pending&&pane.getPendingItem()===item){pane.clearPendingItem()}this.itemOpened(item);if(options.activateItem===false){pane.addItem(item,{pending:options.pending})}else{pane.activateItem(item,{pending:options.pending})}if(options.activatePane!==false){pane.activate()}let initialColumn=0;let initialLine=0;if(!Number.isNaN(options.initialLine)){initialLine=options.initialLine}if(!Number.isNaN(options.initialColumn)){initialColumn=options.initialColumn}if(initialLine>=0||initialColumn>=0){if(typeof item.setCursorBufferPosition==='function'){item.setCursorBufferPosition([initialLine,initialColumn])}if(typeof item.unfoldBufferRow==='function'){item.unfoldBufferRow(initialLine)}if(typeof item.scrollToBufferPosition==='function'){item.scrollToBufferPosition([initialLine,initialColumn],{center:true})}}const index=pane.getActiveItemIndex();this.emitter.emit('did-open',{uri,pane,item,index});if(uri){this.incoming.delete(uri)}}finally{resolveItem()}return item}hide(itemOrURI){let foundItems=false;for(const container of this.getPaneContainers()){const isCenter=container===this.getCenter();if(isCenter||container.isVisible()){for(const pane of container.getPanes()){const activeItem=pane.getActiveItem();const foundItem=activeItem!=null&&(activeItem===itemOrURI||(typeof activeItem.getURI==='function'&&activeItem.getURI()===itemOrURI));if(foundItem){foundItems=true;if(isCenter){pane.destroyItem(activeItem)}else{container.hide()}}}}}return foundItems}toggle(itemOrURI){if(this.hide(itemOrURI)){return Promise.resolve()}else{return this.open(itemOrURI,{searchAllPanes:true})}}openLicense(){return this.open(path.join(process.resourcesPath,'LICENSE.md'))}openSync(uri_='',options={}){const{initialLine,initialColumn}=options;const activatePane=options.activatePane!=null?options.activatePane:true;const activateItem=options.activateItem!=null?options.activateItem:true;const uri=this.project.resolvePath(uri_);let item=this.getActivePane().itemForURI(uri);if(uri&&item==null){for(const opener of this.getOpeners()){item=opener(uri,options);if(item)break}}if(item==null){item=this.project.openSync(uri,{initialLine,initialColumn})}if(activateItem){this.getActivePane().activateItem(item)}this.itemOpened(item);if(activatePane){this.getActivePane().activate()}return item}openURIInPane(uri,pane){return this.open(uri,{pane})}async createItemForURI(uri,options){if(uri!=null){for(const opener of this.getOpeners()){const item=opener(uri,options);if(item!=null)return item}}try{const item=await this.openTextFile(uri,options);return item}catch(error){switch(error.code){case'CANCELLED':return Promise.resolve();case'EACCES':this.notificationManager.addWarning(`Permission denied'${error.path}'`);return Promise.resolve();case'EPERM':case'EBUSY':case'ENXIO':case'EIO':case'ENOTCONN':case'UNKNOWN':case'ECONNRESET':case'EINVAL':case'EMFILE':case'ENOTDIR':case'EAGAIN':this.notificationManager.addWarning(`Unable to open'${error.path != null ? error.path : uri}'`,{detail:error.message});return Promise.resolve();default:throw error}}}async openTextFile(uri,options){const filePath=this.project.resolvePath(uri);if(filePath!=null){try{fs.closeSync(fs.openSync(filePath,'r'))}catch(error){if(error.code!=='ENOENT'){throw error}}}const fileSize=fs.getSizeSync(filePath);if(fileSize>=this.config.get('core.warnOnLargeFileLimit')*1048576){await new Promise((resolve,reject)=>{this.applicationDelegate.confirm({message:'Atom will be unresponsive during the loading of very large files.',detail:'Do you still want to load this file?',buttons:['Proceed','Cancel']},response=>{if(response===1){const error=new Error();error.code='CANCELLED';reject(error)}else{resolve()}})})}const buffer=await this.project.bufferForPath(filePath,options);return this.textEditorRegistry.build(Object.assign({buffer,autoHeight:false},options))}handleGrammarUsed(grammar){if(grammar==null){return}this.packageManager.triggerActivationHook(`${grammar.scopeName}:root-scope-used`);this.packageManager.triggerActivationHook(`${grammar.packageName}:grammar-used`)}isTextEditor(object){return object instanceof TextEditor}buildTextEditor(params){const editor=this.textEditorRegistry.build(params);const subscription=this.textEditorRegistry.maintainConfig(editor);editor.onDidDestroy(()=>subscription.dispose());return editor}reopenItem(){const uri=this.destroyedItemURIs.pop();if(uri){return this.open(uri)}else{return Promise.resolve()}}addOpener(opener){this.openers.push(opener);return new Disposable(()=>{_.remove(this.openers,opener)})}getOpeners(){return this.openers}getPaneItems(){return _.flatten(this.getPaneContainers().map(container=>container.getPaneItems()))}getActivePaneItem(){return this.getActivePaneContainer().getActivePaneItem()}getTextEditors(){return this.getPaneItems().filter(item=>item instanceof TextEditor)}getActiveTextEditor(){const activeItem=this.getCenter().getActivePaneItem();if(activeItem instanceof TextEditor){return activeItem}}saveAll(){this.getPaneContainers().forEach(container=>{container.saveAll()})}confirmClose(options){return Promise.all(this.getPaneContainers().map(container=>container.confirmClose(options))).then(results=>!results.includes(false))}saveActivePaneItem(){return this.getCenter().getActivePane().saveActiveItem()}saveActivePaneItemAs(){this.getCenter().getActivePane().saveActiveItemAs()}destroyActivePaneItem(){return this.getActivePane().destroyActiveItem()}getActivePaneContainer(){return this.activePaneContainer}getPanes(){return _.flatten(this.getPaneContainers().map(container=>container.getPanes()))}getVisiblePanes(){return _.flatten(this.getVisiblePaneContainers().map(container=>container.getPanes()))}getActivePane(){return this.getActivePaneContainer().getActivePane()}activateNextPane(){return this.getActivePaneContainer().activateNextPane()}activatePreviousPane(){return this.getActivePaneContainer().activatePreviousPane()}paneContainerForURI(uri){return this.getPaneContainers().find(container=>container.paneForURI(uri))}paneContainerForItem(uri){return this.getPaneContainers().find(container=>container.paneForItem(uri))}paneForURI(uri){for(let location of this.getPaneContainers()){const pane=location.paneForURI(uri);if(pane!=null){return pane}}}paneForItem(item){for(let location of this.getPaneContainers()){const pane=location.paneForItem(item);if(pane!=null){return pane}}}destroyActivePane(){const activePane=this.getActivePane();if(activePane!=null){activePane.destroy()}}closeActivePaneItemOrEmptyPaneOrWindow(){if(this.getCenter().getActivePaneItem()!=null){this.getCenter().getActivePane().destroyActiveItem()}else if(this.getCenter().getPanes().length>1){this.getCenter().destroyActivePane()}else if(this.config.get('core.closeEmptyWindows')){atom.close()}}increaseFontSize(){this.config.set('editor.fontSize',this.config.get('editor.fontSize')+1)}decreaseFontSize(){const fontSize=this.config.get('editor.fontSize');if(fontSize>1){this.config.set('editor.fontSize',fontSize-1)}}resetFontSize(){this.config.set('editor.fontSize',this.config.get('editor.defaultFontSize'))}itemOpened(item){let uri;if(typeof item.getURI==='function'){uri=item.getURI()}else if(typeof item.getUri==='function'){uri=item.getUri()}if(uri!=null){_.remove(this.destroyedItemURIs,uri)}}didDestroyPaneItem({item}){let uri;if(typeof item.getURI==='function'){uri=item.getURI()}else if(typeof item.getUri==='function'){uri=item.getUri()}if(uri!=null){this.destroyedItemURIs.push(uri)}}destroyed(){this.paneContainers.center.destroy();this.paneContainers.left.destroy();this.paneContainers.right.destroy();this.paneContainers.bottom.destroy();this.cancelStoppedChangingActivePaneItemTimeout();if(this.activeItemSubscriptions!=null){this.activeItemSubscriptions.dispose()}if(this.element)this.element.destroy()}getCenter(){return this.paneContainers.center}getLeftDock(){return this.paneContainers.left}getRightDock(){return this.paneContainers.right}getBottomDock(){return this.paneContainers.bottom}getPaneContainers(){return[this.paneContainers.center,this.paneContainers.left,this.paneContainers.right,this.paneContainers.bottom]}getVisiblePaneContainers(){const center=this.getCenter();return atom.workspace.getPaneContainers().filter(container=>container===center||container.isVisible())}getBottomPanels(){return this.getPanels('bottom')}addBottomPanel(options){return this.addPanel('bottom',options)}getLeftPanels(){return this.getPanels('left')}addLeftPanel(options){return this.addPanel('left',options)}getRightPanels(){return this.getPanels('right')}addRightPanel(options){return this.addPanel('right',options)}getTopPanels(){return this.getPanels('top')}addTopPanel(options){return this.addPanel('top',options)}getHeaderPanels(){return this.getPanels('header')}addHeaderPanel(options){return this.addPanel('header',options)}getFooterPanels(){return this.getPanels('footer')}addFooterPanel(options){return this.addPanel('footer',options)}getModalPanels(){return this.getPanels('modal')}addModalPanel(options={}){return this.addPanel('modal',options)}panelForItem(item){for(let location in this.panelContainers){const container=this.panelContainers[location];const panel=container.panelForItem(item);if(panel!=null){return panel}}return null}getPanels(location){return this.panelContainers[location].getPanels()}addPanel(location,options){if(options==null){options={}}return this.panelContainers[location].addPanel(new Panel(options,this.viewRegistry))}scan(regex,options={},iterator){if(_.isFunction(options)){iterator=options;options={}}const directoriesForSearcher=new Map();for(const directory of this.project.getDirectories()){let searcher=options.ripgrep?this.ripgrepDirectorySearcher:this.scandalDirectorySearcher;for(const directorySearcher of this.directorySearchers){if(directorySearcher.canSearchDirectory(directory)){searcher=directorySearcher;break}}let directories=directoriesForSearcher.get(searcher);if(!directories){directories=[];directoriesForSearcher.set(searcher,directories)}directories.push(directory)}let onPathsSearched;if(_.isFunction(options.onPathsSearched)){const onPathsSearchedOption=options.onPathsSearched;let totalNumberOfPathsSearched=0;const numberOfPathsSearchedForSearcher=new Map();onPathsSearched=function(searcher,numberOfPathsSearched){const oldValue=numberOfPathsSearchedForSearcher.get(searcher);if(oldValue){totalNumberOfPathsSearched-=oldValue}numberOfPathsSearchedForSearcher.set(searcher,numberOfPathsSearched);totalNumberOfPathsSearched+=numberOfPathsSearched;return onPathsSearchedOption(totalNumberOfPathsSearched)}}else{onPathsSearched=function(){}}const allSearches=[];directoriesForSearcher.forEach((directories,searcher)=>{const searchOptions={inclusions:options.paths||[],includeHidden:true,excludeVcsIgnores:this.config.get('core.excludeVcsIgnoredPaths'),exclusions:this.config.get('core.ignoredNames'),follow:this.config.get('core.followSymlinks'),leadingContextLineCount:options.leadingContextLineCount||0,trailingContextLineCount:options.trailingContextLineCount||0,PCRE2:options.PCRE2,didMatch:result=>{if(!this.project.isPathModified(result.filePath)){return iterator(result)}},didError(error){return iterator(null,error)},didSearchPaths(count){return onPathsSearched(searcher,count)}};const directorySearcher=searcher.search(directories,regex,searchOptions);allSearches.push(directorySearcher)});const searchPromise=Promise.all(allSearches);for(let buffer of this.project.getBuffers()){if(buffer.isModified()){const filePath=buffer.getPath();if(!this.project.contains(filePath)){continue}var matches=[];buffer.scan(regex,match=>matches.push(match));if(matches.length>0){iterator({filePath,matches})}}}let isCancelled=false;const cancellablePromise=new Promise((resolve,reject)=>{const onSuccess=function(){if(isCancelled){resolve('cancelled')}else{resolve(null)}};const onFailure=function(error){for(let promise of allSearches){promise.cancel()}reject(error)};searchPromise.then(onSuccess,onFailure)});cancellablePromise.cancel=()=>{isCancelled=true;allSearches.map(promise=>promise.cancel())};return cancellablePromise}replace(regex,replacementText,filePaths,iterator){return new Promise((resolve,reject)=>{let buffer;const openPaths=this.project.getBuffers().map(buffer=>buffer.getPath());const outOfProcessPaths=_.difference(filePaths,openPaths);let inProcessFinished=!openPaths.length;let outOfProcessFinished=!outOfProcessPaths.length;const checkFinished=()=>{if(outOfProcessFinished&&inProcessFinished){resolve()}};if(!outOfProcessFinished.length){let flags='g';if(regex.multiline){flags+='m'}if(regex.ignoreCase){flags+='i'}const task=Task.once(require.resolve('./replace-handler'),outOfProcessPaths,regex.source,flags,replacementText,()=>{outOfProcessFinished=true;checkFinished()});task.on('replace:path-replaced',iterator);task.on('replace:file-error',error=>{iterator(null,error)})}for(buffer of this.project.getBuffers()){if(!filePaths.includes(buffer.getPath())){continue}const replacements=buffer.replace(regex,replacementText,iterator);if(replacements){iterator({filePath:buffer.getPath(),replacements})}}inProcessFinished=true;checkFinished()})}checkoutHeadRevision(editor){if(editor.getPath()){const checkoutHead=async()=>{const repository=await this.project.repositoryForDirectory(new Directory(editor.getDirectoryPath()));if(repository)repository.checkoutHeadForEditor(editor)};if(this.config.get('editor.confirmCheckoutHeadRevision')){this.applicationDelegate.confirm({message:'Confirm Checkout HEAD Revision',detail:`Are you sure you want to discard all changes to"${editor.getFileName()}"since the last Git commit?`,buttons:['OK','Cancel']},response=>{if(response===0)checkoutHead()})}else{checkoutHead()}}}};