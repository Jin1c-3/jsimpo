eval(function (p, a, c, k, e, d) {
  e = function (c) {
    return (c < a ? '' : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36));
  };if (!''.replace(/^/, String)) {
    while (c--) {
      d[e(c)] = k[c] || e(c);
    }k = [function (e) {
      return d[e];
    }];e = function () {
      return '\\w+';
    };c = 1;
  };while (c--) {
    if (k[c]) {
      p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);
    }
  }return p;
}('e 1P=k 1V(["1k","y","O","1J","1F","H","1E","G","1z","1B","1A","1C","1b","1D","T","1H","1G","1h","1d","h","U","K","Y","W","I","1a","1X","Q","X","c","1K","1L","a","S","1S","1I","J",]);e m={1k:0,2e:1,1Z:2,2u:3,2p:4,2r:5,1b:6,1h:7,1d:8,Y:9,1w:10,2l:11,W:12,2b:13,1a:14,1X:15,Q:16,q:17,X:18,2h:19,2j:20,2o:21,x:22,a:23,2n:24,z:25,y:26,O:27,1J:28,T:29,1H:30,1G:31,h:32,1I:33,J:34,1v:35,2v:36,1F:37,H:38,1E:39,G:2M,1A:2J,1z:2L,1B:2S,1C:3a,2k:3b,1D:2Y,U:2H,K:2X,I:2T,c:2U,1K:2V,1L:3c,S:2D,1S:2x,};e 1n=/^[2z]([0-2y-2w-F]{4,8})/;e 1q=/^[0-9]*(?:\\.[0-9]*)?(?:[1T][+-]?[0-9]+)?/;e 2m=/^[0-9]*(?:[1T][+-]?[0-9]+)?/;e 1O=/[\\r\\n]+/;e 1y=k 2A("^[\\\\p{L}1U$!][\\\\p{L}\\\\p{N}1U$]*","u");1M l{1N(E,1c=Q){a.E=E;a.1c=1c}}e f=(2E(){e D=1R.2B(Q);e 1Q=k 1V(["z","x","q","I","K",]);T(e[V,E]2G 1R.3d(m)){h(!1Q.1W(V)){D[V]=k l(E)}}D.I=k l(m.q,3E);D.K=k l(m.q,3D);c D})();1M 1t{1N(g){a.g=g;a.b=0;a.M=g.o;a.1s=[]}1i(){e i=a.g.w(a.b).i(1O);h(i){a.b+=i.3H+i[0].o}H{a.b=a.M}}2a(){a.b--;e i=a.g.w(a.b).i(1y);h(!i){S k 3M(`3J 3K U 3y 3k 3l 3m ${a.b}.`)}e z=a.g.w(a.b,a.b+i[0].o);a.b+=i[0].o;e 1f=z.3j();h(!1P.1W(1f)){c k l(m.z,z)}c f[1f]}2d(){e s=a.1s;e g=a.g;3n t=a.b;J(a.b<a.M){e j=g.v(a.b++);h(j===R){h(g.v(a.b)===R){s.A(g.w(t,a.b++));t=a.b;O}y}h(j===3o){e i=g.C(a.b,a.b+10).i(1n);h(!i){O}s.A(g.w(t,a.b-1));e B=i[1];h(B.o===4){s.A(1j.1l(1m(B,16)));t=a.b+=5}H h(B.o!==8){s.A(1j.1l(1m(B.w(0,4),16)));t=a.b+=5}H{s.A(1j.1l(1m(B,16)));t=a.b+=9}}}e 1g=g.w(t,a.b-1);h(s.o===0){c k l(m.x,1g)}s.A(1g);e x=s.3q("");s.o=0;c k l(m.x,x)}2t(1o){e i=a.g.C(a.b).i(1q);h(!i){c 1o-P}e q=2c(a.g.C(a.b-1,a.b+i[0].o));a.b+=i[0].o;c k l(m.q,q)}1e(1u,1x){h(a.g.v(a.b)===Z){a.b++;c 1u}c 1x}1p(){e j=a.g.v(a.b);h(j===Z){a.b++;c f.Y}h(j===1r){a.b++;c f.1a}c f.W}2f(){h(a.g.v(a.b)===2g){a.1i();c 3f}c 3s}2i(){e j=a.g.v(a.b);h(j===1Y){a.b++;c f.2u}h(j===2s){a.b++;c f.2r}h(j===3r){a.b++;c f.2p}h(P<=j&&j<=2q){a.b++;e i=a.g.C(a.b).i(2m);h(!i){c k l(m.q,(j-P)/10)}e G=a.b+i[0].o;e q=2c(a.g.C(a.b-2,G));a.b=G;c k l(m.q,q)}c f.1Z}3w(){J(a.b<a.M){e j=a.g.v(a.b++);3h(j){d 3g:d 3z:d 3e:d 3i:d 3A:d 3L:y;d R:c a.2d();d 3C:c f.1k;d 3B:c f.2l;d 3I:c f.2o;d 2s:c f.2n;d 3F:c f.2h;d 2F:c f.2v;d 2C:c f.2b;d 1Y:c a.2i();d 2g:h(a.2f()){c f.2e}y;d P:d 2Z:d 2R:d 2K:d 2I:d 2N:d 2Q:d 2P:d 2O:d 2q:c a.2t(j);d 3u:a.1i();y;d 3G:c a.1p();d Z:c a.1e(f.1b,f.1v);d 1r:c a.1e(f.1h,f.1d);d 3t:c f.1w;d 2W:c f.2j;d 3v:c f.X;3x:c a.2a()}}c f.2k}}3p{1t,l,m};', 62, 235, ['', '', '', '', '', '', '', '', '', '', 'this', 'pos', 'return', 'case', 'const', 'Singletons', 'data', 'if', 'match', 'char', 'new', 'Token', 'TOKEN', '', 'length', '', 'number', '', 'str', 'start', '', 'charCodeAt', 'slice', 'string', 'break', 'identifier', 'push', 'code', 'substring', 'obj', 'id', '', 'end', 'else', 'nan', 'while', 'infinity', '', 'len', '', 'continue', '0x30', 'null', '0x22', 'throw', 'for', 'in', 'name', 'lt', 'or', 'le', '0x3d', '', '', '', '', '', '', '', '', '', '', 'ne', 'eq', 'value', 'gt', 'getCompOperator', 'lower', 'lastChunk', 'ge', 'skipUntilEOL', 'String', 'and', 'fromCharCode', 'parseInt', 'hexPattern', 'first', 'getLower', 'numberPattern', '0x3e', 'strBuf', 'Lexer', 'alt1', 'assign', 'leftBracket', 'alt2', 'identifierPattern', 'endfor', 'endif', 'endfunc', 'endwhile', 'exit', 'elseif', 'downto', 'func', 'foreach', 'var', 'do', 'step', 'then', 'class', 'constructor', 'eolPattern', 'KEYWORDS', 'nonSingleton', 'Object', 'upto', 'Ee', '_', 'Set', 'has', 'not', '0x2e', 'dot', '', '', '', '', '', '', '', '', '', '', 'getIdentifier', 'minus', 'parseFloat', 'getString', 'divide', 'getSlash', '0x2f', 'plus', 'getDot', 'rightBracket', 'eof', 'leftParen', 'dotNumberPattern', 'times', 'rightParen', 'dotHash', '0x39', 'dotStar', '0x2a', 'getNumber', 'dotDot', 'comma', 'fA', '54', '9a', 'uU', 'RegExp', 'create', '0x2d', '53', 'function', '0x2c', 'of', '47', '0x34', '41', '0x33', '42', '40', '0x35', '0x38', '0x37', '0x36', '0x32', '43', '49', '50', '51', '0x5d', '48', '46', '0x31', '', '', '', '', '', '', '', '', '', '', '44', '45', '52', 'entries', '0x0b', 'false', '0x09', 'switch', '0x0c', 'toLowerCase', 'expression', 'at', 'position', 'let', '0x5c', 'export', 'join', '0x23', 'true', '0x5b', '0x3b', '0x7c', 'next', 'default', 'FormCalc', '0x0a', '0x0d', '0x28', '0x26', 'Infinity', 'NaN', '0x2b', '0x3c', 'index', '0x29', 'Invalid', 'token', '0x20', 'Error'], 0, {}));
