import reduce from'./reduce';import wrapAsync from'./internal/wrapAsync';import{promiseCallback,PROMISE_SYMBOL}from'./internal/promiseCallback';export default function seq(...functions){var _functions=functions.map(wrapAsync);return function(...args){var that=this;var cb=args[args.length-1];if(typeof cb=='function'){args.pop()}else{cb=promiseCallback()}reduce(_functions,args,(newargs,fn,iterCb)=>{fn.apply(that,newargs.concat((err,...nextargs)=>{iterCb(err,nextargs)}))},(err,results)=>cb(err,...results));return cb[PROMISE_SYMBOL]}}
