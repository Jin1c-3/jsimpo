import{isObject}from'./obj';import{getMimetype}from'./mimetypes';const filterSource=function(src){if(Array.isArray(src)){let newsrc=[];src.forEach(function(srcobj){srcobj=filterSource(srcobj);if(Array.isArray(srcobj)){newsrc=newsrc.concat(srcobj)}else if(isObject(srcobj)){newsrc.push(srcobj)}});src=newsrc}else if(typeof src==='string'&&src.trim()){src=[fixSource({src})]}else if(isObject(src)&&typeof src.src==='string'&&src.src&&src.src.trim()){src=[fixSource(src)]}else{src=[]}return src};function fixSource(src){if(!src.type){const mimetype=getMimetype(src.src);if(mimetype){src.type=mimetype}}return src}export default filterSource;import{isObject}from'./obj';import{getMimetype}from'./mimetypes';const filterSource=function(src){if(Array.isArray(src)){let newsrc=[];src.forEach(function(srcobj){srcobj=filterSource(srcobj);if(Array.isArray(srcobj)){newsrc=newsrc.concat(srcobj)}else if(isObject(srcobj)){newsrc.push(srcobj)}});src=newsrc}else if(typeof src==='string'&&src.trim()){src=[fixSource({src})]}else if(isObject(src)&&typeof src.src==='string'&&src.src&&src.src.trim()){src=[fixSource(src)]}else{src=[]}return src};function fixSource(src){if(!src.type){const mimetype=getMimetype(src.src);if(mimetype){src.type=mimetype}}return src}export default filterSource;