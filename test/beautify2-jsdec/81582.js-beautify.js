const errors=require('@tryghost/errors');const tpl=require('@tryghost/tpl');const messages={missingContext:'missing context'};module.exports=function(Bookshelf){Bookshelf.Model=Bookshelf.Model.extend({getActor(options={context:{}}){if(options.context&&options.context.integration){return{id:options.context.integration.id,type:'integration'}}if(options.context&&options.context.user){return{id:options.context.user,type:'user'}}return null},contextUser:function contextUser(options){options=options||{};options.context=options.context||{};if(options.context.user||Bookshelf.Model.isExternalUser(options.context.user)){return options.context.user}else if(options.context.integration){return Bookshelf.Model.internalUser}else if(options.context.internal){return Bookshelf.Model.internalUser}else if(this.get('id')){return this.get('id')}else if(options.context.external){return Bookshelf.Model.externalUser}else{throw new errors.NotFoundError({message:tpl(messages.missingContext),level:'critical'})}}},{internalUser:1,externalUser:0,isInternalUser:function isInternalUser(id){return id===Bookshelf.Model.internalUser||id===Bookshelf.Model.internalUser.toString()},isExternalUser:function isExternalUser(id){return id===Bookshelf.Model.externalUser||id===Bookshelf.Model.externalUser.toString()}})};