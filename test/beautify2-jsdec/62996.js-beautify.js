load('test/mjsunit/wasm/wasm-module-builder.js');let initialMemoryPages=1;let maximumMemoryPages=5;let other_fn_idx=0;function generateBuilder(add_memory,import_sig){let builder=new WasmModuleBuilder();if(import_sig){let idx=builder.addImport('import_module','other_module_fn',import_sig);assertEquals(idx,other_fn_idx)}if(add_memory){builder.addMemory(initialMemoryPages,maximumMemoryPages,true);builder.addFunction('load',kSig_i_i).addBody([kExprLocalGet,0,kExprI32LoadMem,0,0]).exportFunc();builder.addFunction('store',kSig_i_ii).addBody([kExprLocalGet,0,kExprLocalGet,1,kExprI32StoreMem,0,0,kExprLocalGet,1]).exportFunc()}return builder}function assertMemoryIndependence(load_a,store_a,load_b,store_b){assertEquals(0,load_a(0));assertEquals(0,load_b(0));assertEquals(0,load_a(4));assertEquals(0,load_b(4));store_a(0,101);assertEquals(101,load_a(0));assertEquals(0,load_b(0));assertEquals(0,load_a(4));assertEquals(0,load_b(4));store_a(4,102);assertEquals(101,load_a(0));assertEquals(0,load_b(0));assertEquals(102,load_a(4));assertEquals(0,load_b(4));store_b(0,103);assertEquals(101,load_a(0));assertEquals(103,load_b(0));assertEquals(102,load_a(4));assertEquals(0,load_b(4));store_b(4,107);assertEquals(101,load_a(0));assertEquals(103,load_b(0));assertEquals(102,load_a(4));assertEquals(107,load_b(4));store_a(0,0);store_a(4,0);store_b(0,0);store_b(4,0)}(function SimpleMemoryIndependenceTest(){print("SimpleMemoryIndependenceTest");let kPages=1;let builder=new WasmModuleBuilder();builder.addMemory(kPages,kPages,true);builder.addFunction("store",kSig_v_ii).addBody([kExprLocalGet,0,kExprLocalGet,1,kExprI32StoreMem,0,0,]).exportFunc();builder.addFunction("load",kSig_i_i).addBody([kExprLocalGet,0,kExprI32LoadMem,0,0,]).exportFunc();var a=builder.instantiate();builder=new WasmModuleBuilder();builder.addImport("mod","store",kSig_v_ii);builder.addMemory(kPages,kPages,true);builder.addFunction("store",kSig_v_ii).addBody([kExprLocalGet,0,kExprLocalGet,1,kExprCallFunction,0,]).exportFunc();builder.addFunction("load",kSig_i_i).addBody([kExprLocalGet,0,kExprI32LoadMem,0,0,]).exportFunc();var b=builder.instantiate({mod:{store:a.exports.store}});assertEquals(0,a.exports.load(0));assertEquals(0,b.exports.load(0));assertEquals(0,a.exports.load(4));assertEquals(0,b.exports.load(4));a.exports.store(0,101);assertEquals(101,a.exports.load(0));assertEquals(0,b.exports.load(0));assertEquals(0,a.exports.load(4));assertEquals(0,b.exports.load(4));a.exports.store(4,102);assertEquals(101,a.exports.load(0));assertEquals(0,b.exports.load(0));assertEquals(102,a.exports.load(4));assertEquals(0,b.exports.load(4));b.exports.store(4,107);assertEquals(101,a.exports.load(0));assertEquals(0,b.exports.load(0));assertEquals(107,a.exports.load(4));assertEquals(0,b.exports.load(4))})();(function TestExternalCallBetweenTwoWasmModulesWithoutAndWithMemory(){print('TestExternalCallBetweenTwoWasmModulesWithoutAndWithMemory');let first_module=generateBuilder(add_memory=false,import_sig=kSig_i_i);first_module.addFunction('plus_one',kSig_i_i).addBody([kExprLocalGet,0,kExprCallFunction,other_fn_idx,kExprI32Const,1,kExprI32Add,kExprReturn]).exportFunc();let second_module=generateBuilder(add_memory=true,import_sig=undefined);let index=kPageSize-4;let second_value=2222;let second_instance=second_module.instantiate();let first_instance=first_module.instantiate({import_module:{other_module_fn:second_instance.exports.load}});second_instance.exports.store(index,second_value);assertEquals(second_value,second_instance.exports.load(index));assertEquals(second_value+1,first_instance.exports.plus_one(index))})();(function TestExternalCallBetweenTwoWasmModulesWithMemory(){print('TestExternalCallBetweenTwoWasmModulesWithMemory');let first_module=generateBuilder(add_memory=true,import_sig=kSig_i_i);first_module.addFunction('plus_one',kSig_i_i).addBody([kExprLocalGet,0,kExprCallFunction,other_fn_idx,kExprI32Const,1,kExprI32Add,kExprReturn]).exportFunc();let second_module=generateBuilder(add_memory=true,import_sig=undefined);let index=kPageSize-4;let first_value=1111;let second_value=2222;let second_instance=second_module.instantiate();let first_instance=first_module.instantiate({import_module:{other_module_fn:second_instance.exports.load}});first_instance.exports.store(index,first_value);second_instance.exports.store(index,second_value);assertEquals(first_value,first_instance.exports.load(index));assertEquals(second_value,second_instance.exports.load(index));assertEquals(second_value+1,first_instance.exports.plus_one(index))})();(function TestCorrectMemoryAccessedAfterReturningFromExternalCall(){print('TestCorrectMemoryAccessedAfterReturningFromExternalCall');let first_module=generateBuilder(add_memory=true,import_sig=kSig_i_ii);first_module.addFunction('sandwich',kSig_i_iii).addBody([kExprLocalGet,0,kExprLocalGet,1,kExprI32StoreMem,0,0,kExprLocalGet,0,kExprLocalGet,2,kExprCallFunction,other_fn_idx,kExprDrop,kExprLocalGet,0,kExprI32LoadMem,0,0,kExprReturn]).exportFunc();let second_module=generateBuilder(add_memory=true,import_sig=undefined);let index=kPageSize-4;let first_value=1111;let second_value=2222;let second_instance=second_module.instantiate();let first_instance=first_module.instantiate({import_module:{other_module_fn:second_instance.exports.store}});assertEquals(first_value,first_instance.exports.sandwich(index,first_value,second_value));assertEquals(first_value,first_instance.exports.load(index));assertEquals(second_value,second_instance.exports.load(index))})();(function CallThroughTableMemoryIndependenceTest(){print("CallThroughTableIndependenceTest");let kTableSize=2;let kPages=1;let builder=new WasmModuleBuilder();builder.addMemory(kPages,kPages,true);builder.addFunction("store",kSig_v_ii).addBody([kExprLocalGet,0,kExprLocalGet,1,kExprI32StoreMem,0,0,]).exportFunc();builder.addFunction("load",kSig_i_i).addBody([kExprLocalGet,0,kExprI32LoadMem,0,0,]).exportFunc();{let module=builder.toModule();var a=new WebAssembly.Instance(module);var b=new WebAssembly.Instance(module);assertMemoryIndependence(a.exports.load,a.exports.store,b.exports.load,b.exports.store)}let table=new WebAssembly.Table({element:"anyfunc",initial:kTableSize,maximum:kTableSize});table.set(0,a.exports.store);table.set(1,b.exports.store);assertMemoryIndependence(a.exports.load,table.get(0),b.exports.load,table.get(1));table.set(1,a.exports.store);table.set(0,b.exports.store);assertMemoryIndependence(a.exports.load,table.get(1),b.exports.load,table.get(0));builder=new WasmModuleBuilder();builder.addImportedTable("m","table",kTableSize,kTableSize);var sig_index=builder.addType(kSig_v_ii);builder.addFunction("store",kSig_v_iii).addBody([kExprLocalGet,1,kExprLocalGet,2,kExprLocalGet,0,kExprCallIndirect,sig_index,kTableZero,]).exportFunc();let c=builder.instantiate({m:{table:table}});let a_index=1;let b_index=0;let store_a=(index,val)=>c.exports.store(a_index,index,val)let store_b=(index,val)=>c.exports.store(b_index,index,val);assertMemoryIndependence(a.exports.load,store_a,b.exports.load,store_b);table.set(0,a.exports.store);table.set(1,b.exports.store);a_index=0;b_index=1;assertMemoryIndependence(a.exports.load,store_a,b.exports.load,store_b)})();