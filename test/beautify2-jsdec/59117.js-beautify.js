utils.load('test/inspector/wasm-inspector-test.js');let{session,contextGroup,Protocol}=InspectorTest.start('Tests reported code offsets on wasm scripts');let sentinel=0;function addHeader(binary,num_functions){binary.emit_header();var custom_section=new Binary();custom_section.emit_u8(0);custom_section.emit_u8(10);custom_section.emit_string('sentinel');custom_section.emit_bytes([sentinel]);++sentinel;binary.emit_bytes(custom_section.trunc_buffer());binary.emit_section(kTypeSectionCode,section=>{section.emit_u32v(1);section.emit_u8(kWasmFunctionTypeForm);section.emit_u32v(0);section.emit_u32v(0)});binary.emit_section(kFunctionSectionCode,section=>{section.emit_u32v(num_functions);for(let i=0;i<num_functions;++i){section.emit_u32v(0)}})}function createModuleWithNoCodeSection(){let binary=new Binary;addHeader(binary,0);return binary.trunc_buffer()}function createModuleWithEmptyCodeSection(){let binary=new Binary;addHeader(binary,0);binary.emit_u8(kCodeSectionCode);binary.emit_u32v(1);binary.emit_u32v(0);return binary.trunc_buffer()}function createModuleWithFiveByteSectionLength(){let binary=new Binary;addHeader(binary,1);binary.emit_u8(kCodeSectionCode);binary.emit_bytes([0x84,0x80,0x80,0x80,0x00]);binary.emit_u32v(1);binary.emit_u32v(2);binary.emit_u32v(0);binary.emit_bytes([kExprEnd]);return binary.trunc_buffer()}function createModuleWithFiveBytePayload(){let binary=new Binary;addHeader(binary,1);binary.emit_u8(kCodeSectionCode);binary.emit_bytes([0x88,0x80,0x80,0x80,0x00]);binary.emit_bytes([0x81,0x80,0x80,0x80,0x00]);binary.emit_u32v(2);binary.emit_u32v(0);binary.emit_bytes([kExprEnd]);return binary.trunc_buffer()}function compileSync(bytes){new WebAssembly.Module(new Uint8Array(bytes))}function compileAsync(bytes){WebAssembly.compile(new Uint8Array(bytes))}contextGroup.addScript(`${compileSync}${compileAsync}`,0,0,'v8://test/compileFunctions');InspectorTest.runAsyncTestSuite([async function test(){Protocol.Debugger.enable();let script_ids=new Map();let generators=[createModuleWithNoCodeSection,createModuleWithEmptyCodeSection,createModuleWithFiveByteSectionLength,createModuleWithFiveBytePayload];for(let generator of generators){session.Protocol.Runtime.evaluate({'expression':`compileSync([${generator()}]);compileAsync([${generator()}]);`});for(let wasm_scripts=0;wasm_scripts<2;){({params}=await Protocol.Debugger.onceScriptParsed());if(!params.url.startsWith('wasm://'))continue;if(!script_ids.has(params.scriptId)){script_ids.set(params.scriptId,script_ids.size)}let stable_id=script_ids.get(params.scriptId);InspectorTest.log(`Wasm script parsed:ID ${stable_id},startColumn:${params.startColumn},endColumn:${params.endColumn},codeOffset:${params.codeOffset}`);++wasm_scripts}}}]);