import{assignWithDepth}from'./utils';import{log}from'./logger';import theme from'./themes';import config from'./defaultConfig';const handleThemeVariables=(value)=>{return theme[value]?theme[value].getThemeVariables():theme.default.getThemeVariables()};const manipulators={themeVariables:handleThemeVariables,};config.class.arrowMarkerAbsolute=config.arrowMarkerAbsolute;config.git.arrowMarkerAbsolute=config.arrowMarkerAbsolute;export const defaultConfig=Object.freeze(config);const siteConfig=assignWithDepth({},defaultConfig);const currentConfig=assignWithDepth({},defaultConfig);export const setSiteConfig=(conf)=>{console.log('setSiteConfig');Object.keys(conf).forEach((key)=>{const manipulator=manipulators[key];conf[key]=manipulator?manipulator(conf[key]):conf[key]});assignWithDepth(currentConfig,conf,{clobber:true});assignWithDepth(siteConfig,conf);return getSiteConfig()};export const getSiteConfig=()=>{return assignWithDepth({},siteConfig)};export const setConfig=(conf)=>{console.log('setConfig');sanitize(conf);Object.keys(conf).forEach((key)=>{const manipulator=manipulators[key];conf[key]=manipulator?manipulator(conf[key]):conf[key]});assignWithDepth(currentConfig,conf);return getConfig()};export const getConfig=()=>{return assignWithDepth({},currentConfig)};export const sanitize=(options)=>{Object.keys(siteConfig.secure).forEach((key)=>{if(typeof options[siteConfig.secure[key]]!=='undefined'){log.trace(`Denied attempt to modify a secure key ${siteConfig.secure[key]}`,options[siteConfig.secure[key]]);delete options[siteConfig.secure[key]]}})};export const reset=(conf=getSiteConfig())=>{console.warn('reset');Object.keys(siteConfig).forEach((key)=>delete siteConfig[key]);Object.keys(currentConfig).forEach((key)=>delete currentConfig[key]);assignWithDepth(siteConfig,conf,{clobber:true});assignWithDepth(currentConfig,conf,{clobber:true})};const configApi=Object.freeze({sanitize,setSiteConfig,getSiteConfig,setConfig,getConfig,reset,defaultConfig,});export default configApi;