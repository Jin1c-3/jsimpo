define(function(require,exports,module){"use strict";var _=require("thirdparty/lodash"),CodeMirror=require("thirdparty/CodeMirror/lib/codemirror");var cache;function _clearCache(cm){cache=null;if(cm){cm.off("changes",_clearCache)}}function _manageCache(cm,line){if(!cache||!cache.tokens||cache.line!==line||cache.cm!==cm){var tokens=cm.getLineTokens(line,false);tokens.unshift(cm.getTokenAt({line:line,ch:0},false));cache={cm:cm,line:line,timeStamp:Date.now(),tokens:tokens};cm.off("changes",_clearCache);cm.on("changes",_clearCache)}return cache.tokens}function getTokenAt(cm,pos,precise){if(precise){_clearCache();return cm.getTokenAt(pos,precise)}var cachedTokens=_manageCache(cm,pos.line),tokenIndex=_.sortedIndex(cachedTokens,{end:pos.ch},"end"),token=cachedTokens[tokenIndex];return token||cm.getTokenAt(pos,precise)}function getInitialContext(cm,pos){return{"editor":cm,"pos":pos,"token":cm.getTokenAt(pos,true)}}function movePrevToken(ctx,precise){if(precise===undefined){precise=true}if(ctx.pos.ch<=0||ctx.token.start<=0){if(ctx.pos.line<=0){return false}ctx.pos.line--;ctx.pos.ch=ctx.editor.getLine(ctx.pos.line).length}else{ctx.pos.ch=ctx.token.start}ctx.token=getTokenAt(ctx.editor,ctx.pos,precise);return true}function isAtStart(ctx){return(ctx.pos.ch<=0||ctx.token.start<=0)&&(ctx.pos.line<=0)}function moveNextToken(ctx,precise){var eol=ctx.editor.getLine(ctx.pos.line).length;if(precise===undefined){precise=true}if(ctx.pos.ch>=eol||ctx.token.end>=eol){if(ctx.pos.line>=ctx.editor.lineCount()-1){return false}ctx.pos.line++;ctx.pos.ch=0}else{ctx.pos.ch=ctx.token.end+1}ctx.token=getTokenAt(ctx.editor,ctx.pos,precise);return true}function isAtEnd(ctx){var eol=ctx.editor.getLine(ctx.pos.line).length;return(ctx.pos.ch>=eol||ctx.token.end>=eol)&&(ctx.pos.line>=ctx.editor.lineCount()-1)}function moveSkippingWhitespace(moveFxn,ctx){if(!moveFxn(ctx)){return false}while(!ctx.token.type&&!/\S/.test(ctx.token.string)){if(!moveFxn(ctx)){return false}}return true}function offsetInToken(ctx){var offset=ctx.pos.ch-ctx.token.start;if(offset<0){console.log("CodeHintUtils: _offsetInToken - Invalid context: pos not in the current token!")}return offset}function getModeAt(cm,pos,precise){precise=precise||true;var modeData=cm.getMode(),name;if(modeData.innerMode){modeData=CodeMirror.innerMode(modeData,getTokenAt(cm,pos,precise).state).mode}name=(modeData.name==="xml")?modeData.configuration:modeData.name;return{mode:modeData,name:name}}exports.getTokenAt=getTokenAt;exports.movePrevToken=movePrevToken;exports.moveNextToken=moveNextToken;exports.isAtStart=isAtStart;exports.isAtEnd=isAtEnd;exports.moveSkippingWhitespace=moveSkippingWhitespace;exports.getInitialContext=getInitialContext;exports.offsetInToken=offsetInToken;exports.getModeAt=getModeAt});