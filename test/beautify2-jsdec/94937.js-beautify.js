const debug=require('debug')('@cypress/react')const tryLoadWebpackConfig=require('../utils/tryLoadWebpackConfig')const{allowModuleSourceInPlace}=require('../utils/webpack-helpers')const{addCypressToWebpackEslintRulesInPlace}=require('../utils/eslint-helpers')const{getTranspileFolders}=require('../utils/get-transpile-folders')const{addFolderToBabelLoaderTranspileInPlace}=require('../utils/babel-helpers')module.exports=function findReactScriptsWebpackConfig(config,{webpackConfigPath,}={webpackConfigPath:'react-scripts/config/webpack.config'}){process.env.FAST_REFRESH='false'const webpackConfig=tryLoadWebpackConfig(webpackConfigPath)if(!webpackConfig){throw new Error('⚠️ Could not find Webpack options for react-scripts. Make sure that you have react-scripts module available.')}addCypressToWebpackEslintRulesInPlace(webpackConfig)getTranspileFolders(config).forEach((cypressFolder)=>{allowModuleSourceInPlace(cypressFolder,webpackConfig)addFolderToBabelLoaderTranspileInPlace(cypressFolder,webpackConfig)})debug('resolved webpack config: %o',webpackConfig)return webpackConfig}const debug=require('debug')('@cypress/react')const tryLoadWebpackConfig=require('../utils/tryLoadWebpackConfig')const{allowModuleSourceInPlace}=require('../utils/webpack-helpers')const{addCypressToWebpackEslintRulesInPlace}=require('../utils/eslint-helpers')const{getTranspileFolders}=require('../utils/get-transpile-folders')const{addFolderToBabelLoaderTranspileInPlace}=require('../utils/babel-helpers')module.exports=function findReactScriptsWebpackConfig(config,{webpackConfigPath,}={webpackConfigPath:'react-scripts/config/webpack.config'}){process.env.FAST_REFRESH='false'const webpackConfig=tryLoadWebpackConfig(webpackConfigPath)if(!webpackConfig){throw new Error('⚠️ Could not find Webpack options for react-scripts. Make sure that you have react-scripts module available.')}addCypressToWebpackEslintRulesInPlace(webpackConfig)getTranspileFolders(config).forEach((cypressFolder)=>{allowModuleSourceInPlace(cypressFolder,webpackConfig)addFolderToBabelLoaderTranspileInPlace(cypressFolder,webpackConfig)})debug('resolved webpack config: %o',webpackConfig)return webpackConfig}