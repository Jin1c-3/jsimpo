function t(_0x263270, _0x38eb9e) {
    var _0x50b8f1 = _0x2035;
    assertTrue(_0x263270[_0x50b8f1(493)](_0x38eb9e));
}
function f(_0x3bdf52, _0x2310fa) {
    var _0x1a1e87 = _0x2035;
    assertFalse(_0x3bdf52[_0x1a1e87(493)](_0x2310fa));
}
t(/\p{ASCII}+/u, _0x323041(494)), f(/\p{ASCII}+/u, '\u24D0\u24D1\u24D2\u2460\u2461\u2462'), f(/\p{ASCII}+/u, _0x323041(495)), f(/\P{ASCII}+/u, _0x323041(496)), t(/\P{ASCII}+/u, _0x323041(497)), t(/\P{ASCII}+/u, _0x323041(495)), f(/[^\p{ASCII}]+/u, 'abc123'), f(/[\p{ASCII}]+/u, _0x323041(497)), f(/[\p{ASCII}]+/u, _0x323041(495)), t(/[^\P{ASCII}]+/u, _0x323041(496)), t(/[\P{ASCII}]+/u, _0x323041(497)), f(/[^\P{ASCII}]+/u, _0x323041(495)), t(/\p{Any}+/u, _0x323041(495)), assertEquals(['\uFFFD'], /\p{Any}/u[_0x323041(498)]('\uFFFD\uFFFD')), assertEquals(['\uFFFD'], /\p{Any}/u[_0x323041(498)]('\uFFFD\uFFFD')), assertEquals(['\uD800\uDC01'], /\p{Any}/u['exec']('\uD800\uDC01')), assertEquals(['\uFFFD'], /\p{Any}/u[_0x323041(498)]('\uFFFD')), f(/\P{Any}+/u, '123'), f(/[\P{Any}]+/u, _0x323041(499)), t(/[\P{Any}\d]+/u, _0x323041(499)), t(/[^\P{Any}]+/u, _0x323041(499)), t(/\p{Assigned}+/u, _0x323041(499)), t(/\p{Assigned}+/u, '\uD83C\uDD30\uD83C\uDD31\uD83C\uDD32'), f(/\p{Assigned}+/u, '\uFDD0'), f(/\p{Assigned}+/u, '\uDBBF\uDFFF'), f(/\P{Assigned}+/u, _0x323041(499)), f(/\P{Assigned}+/u, _0x323041(500)), t(/\P{Assigned}+/u, '\uFDD0'), t(/\P{Assigned}+/u, '\uDBBF\uDFFF'), f(/\P{Assigned}/u, ''), t(/[^\P{Assigned}]+/u, '123'), f(/[\P{Assigned}]+/u, _0x323041(500)), f(/[^\P{Assigned}]+/u, '\uFDD0'), t(/[\P{Assigned}]+/u, '\uDBBF\uDFFF'), f(/[\P{Assigned}]/u, ''), f(/[^\u1234\p{ASCII}]+/u, 'ሴ'), t(/[x\P{ASCII}]+/u, 'x'), t(/[\u1234\p{ASCII}]+/u, 'ሴ'), assertThrows(_0x323041(501)), assertThrows(_0x323041(502)), assertThrows(_0x323041(503)), assertThrows(_0x323041(504)), assertThrows(_0x323041(505)), assertThrows(_0x323041(506)), assertThrows(_0x323041(507)), assertThrows(_0x323041(508)), assertThrows('/\\p{Other_ID_Start}/u'), assertThrows('/\\P{OIDS}/u'), assertThrows('/\\p{Other_Lowercase}/u'), assertThrows('/\\P{OLower}/u'), assertThrows(_0x323041(509)), assertThrows('/\\P{OMath}/u'), assertThrows(_0x323041(510)), assertThrows(_0x323041(511));