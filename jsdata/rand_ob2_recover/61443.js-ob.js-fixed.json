{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "F"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": []
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "a"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "F"
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "f"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x5ec63d"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "a"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "_0x5ec63d"
                                }
                            },
                            "arguments": []
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "a"
                            },
                            "property": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x46b415"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 221,
                                        "raw": "0xdd"
                                    }
                                ]
                            }
                        },
                        "right": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 11,
                                            "raw": "0xb"
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        }
                    },
                    {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "a"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "right": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 22,
                                            "raw": "0x16"
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        }
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "obj"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "a"
                            },
                            "property": {
                                "type": "Identifier",
                                "name": "obj"
                            }
                        },
                        "right": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 33,
                                            "raw": "0x21"
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        }
                    },
                    {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "a"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "foo",
                                "raw": "'foo'"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    },
                    {
                        "type": "UnaryExpression",
                        "operator": "delete",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "a"
                            },
                            "property": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x46b415"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 222,
                                        "raw": "0xde"
                                    }
                                ]
                            }
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "b"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "_0x46b415"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 221,
                                "raw": "0xdd"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x53d5"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x39428a"
                },
                {
                    "type": "Identifier",
                    "name": "_0x4bee67"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x53d5"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x8358a0"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x53d59"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x8358a0"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x8358a0"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 213,
                                                                "raw": "0xd5"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x546514"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x8358"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x8358a0"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x546514"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x53d5"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x39428a"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x4bee67"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "b"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "f"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "b"
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 11,
                                "raw": "0xb"
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "f"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 22,
                                "raw": "0x16"
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "f"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 33,
                                "raw": "0x21"
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "f"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "obj"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}