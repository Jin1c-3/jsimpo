
function _0x5bec(_0x3878ed, _0x180a34) {
    return _0x5bec = function (_0x42f265, _0xa66f7e) {
        _0x42f265 = _0x42f265 - (0x6db * -0x3 + -0x9 * 0xbf + -0x1 * -0x1cb5);
        var _0x1806c1 = _0x33f2[_0x42f265];
        return _0x1806c1;
    }, _0x5bec(_0x3878ed, _0x180a34);
}
var _0x300da9 = _0x5bec;
(function (_0x2fda93, _0x5f0366) {
    var _0x42bbee = _0x5bec;
    while (!![]) {
        try {
            var _0x438380 = parseInt(_0x42bbee(0x16d)) * parseInt(_0x42bbee(0x16e)) + parseInt(_0x42bbee(0x16f)) * -parseInt(_0x42bbee(0x170)) + parseInt(_0x42bbee(0x171)) * -parseInt(_0x42bbee(0x172)) + -parseInt(_0x42bbee(0x173)) + -parseInt(_0x42bbee(0x174)) * -parseInt(_0x42bbee(0x175)) + parseInt(_0x42bbee(0x176)) * parseInt(_0x42bbee(0x177)) + parseInt(_0x42bbee(0x178));
            if (_0x438380 === _0x5f0366)
                break;
            else
                _0x2fda93['push'](_0x2fda93['shift']());
        } catch (_0x4a28f5) {
            _0x2fda93['push'](_0x2fda93['shift']());
        }
    }
}(_0x33f2, 0x21698 * 0x5 + 0x8ce4e * 0x1 + -0xa30f1), module[_0x300da9(0x179)] = {
    'findBundle': function (_0xa068a6, _0x311c90) {
        var _0x142bba = _0x300da9, _0x31caca = { 'ckFHL': _0x142bba(0x17a) };
        return [
            _0x142bba(0x17b),
            _0x31caca[_0x142bba(0x17c)]
        ];
    }
});
