
(function (_0xa29030, _0x4154b8) {
    var _0x71c305 = _0x58ac;
    while (!![]) {
        try {
            var _0x851581 = parseInt(_0x71c305(0x18f)) * parseInt(_0x71c305(0x190)) + -parseInt(_0x71c305(0x191)) * -parseInt(_0x71c305(0x192)) + parseInt(_0x71c305(0x193)) * -parseInt(_0x71c305(0x194)) + parseInt(_0x71c305(0x195)) * -parseInt(_0x71c305(0x196)) + -parseInt(_0x71c305(0x197)) * -parseInt(_0x71c305(0x198)) + -parseInt(_0x71c305(0x199)) + -parseInt(_0x71c305(0x19a)) * -parseInt(_0x71c305(0x19b));
            if (_0x851581 === _0x4154b8)
                break;
            else
                _0xa29030['push'](_0xa29030['shift']());
        } catch (_0x218227) {
            _0xa29030['push'](_0xa29030['shift']());
        }
    }
}(_0x1350, 0x4aa * -0x1cd + 0xf2ea9 + 0x4f8b8));
function _0x58ac(_0xe3d783, _0xb307b7) {
    return _0x58ac = function (_0x501b32, _0x3adde4) {
        _0x501b32 = _0x501b32 - (-0xc8c + 0x5d * 0x1 + 0x6df * 0x2);
        var _0x4fb9ae = _0x1350[_0x501b32];
        return _0x4fb9ae;
    }, _0x58ac(_0xe3d783, _0xb307b7);
}
function f() {
    var _0x114c11 = _0x58ac, _0x3f094c = { 'RdYFH': _0x114c11(0x19c) };
    throw _0x3f094c[_0x114c11(0x19d)];
    try {
    } catch (_0x196c45) {
    }
}
assertThrows(f);
