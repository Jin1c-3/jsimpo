
var _0x59330c = _0x54e8;
(function (_0x5547b6, _0x29ec29) {
    var _0x686152 = _0x54e8;
    while (!![]) {
        try {
            var _0x149e35 = parseInt(_0x686152(0x1b5)) * parseInt(_0x686152(0x1b6)) + -parseInt(_0x686152(0x1b7)) * -parseInt(_0x686152(0x1b8)) + parseInt(_0x686152(0x1b9)) + -parseInt(_0x686152(0x1ba)) * parseInt(_0x686152(0x1bb)) + -parseInt(_0x686152(0x1bc)) + -parseInt(_0x686152(0x1bd)) + parseInt(_0x686152(0x1be));
            if (_0x149e35 === _0x29ec29)
                break;
            else
                _0x5547b6['push'](_0x5547b6['shift']());
        } catch (_0x380d6f) {
            _0x5547b6['push'](_0x5547b6['shift']());
        }
    }
}(_0x1527, -0x2 * -0xa4b43 + 0x1 * 0xe7d9 + -0x713e8));
var Base = {}, obj = {
        'set'() {
            var _0x4a1cac = _0x54e8;
            return super[_0x4a1cac(0x1bf)] = -0x71 * -0x3d + -0xbed * -0x1 + -0x26d7;
        }
    };
function _0x54e8(_0x514251, _0x4e102f) {
    return _0x54e8 = function (_0x5ea604, _0x4ce4fd) {
        _0x5ea604 = _0x5ea604 - (0x1c4f + 0x1 * 0x10ba + 0x1 * -0x2b54);
        var _0x3d2155 = _0x1527[_0x5ea604];
        return _0x3d2155;
    }, _0x54e8(_0x514251, _0x4e102f);
}
Object[_0x59330c(0x1c0)](obj, _0x59330c(0x1bf), {
    'value': 0x2,
    'writable': ![],
    'configurable': !![],
    'enumerable': !![]
}), Object[_0x59330c(0x1c1)](obj, Base), expect(obj[_0x59330c(0x1c2)]())[_0x59330c(0x1c3)](-0x5ee + 0xc * 0xda + -0x447), expect(Base[_0x59330c(0x1bf)])[_0x59330c(0x1c4)](), expect(obj[_0x59330c(0x1bf)])[_0x59330c(0x1c3)](-0xd * -0x12a + -0x1 * 0x22c1 + -0x4b * -0x43);
const desc = Object[_0x59330c(0x1c5)](obj, _0x59330c(0x1bf));
expect(desc[_0x59330c(0x1c6)])[_0x59330c(0x1c3)](!![]), expect(desc[_0x59330c(0x1c7)])[_0x59330c(0x1c3)](![]), expect(desc[_0x59330c(0x1c8)])[_0x59330c(0x1c3)](!![]);
