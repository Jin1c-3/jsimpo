const {Potrace} = require('potrace');
exports['pluginOptionsSchema'] = function ({Joi: _0x3c29d0}) {
    return _0x3c29d0['object']({
        'maxWidth': _0x3c29d0['number']()['default'](0x28a)['description']('The\x20maxWidth\x20in\x20pixels\x20of\x20the\x20div\x20where\x20the\x20markdown\x20will\x20be\x20displayed.\x20This\x20value\x20is\x20used\x20when\x20deciding\x20what\x20the\x20width\x20of\x20the\x20various\x20responsive\x20thumbnails\x20should\x20be.'),
        'linkImagesToOriginal': _0x3c29d0['boolean']()['default'](!![])['description']('Add\x20a\x20link\x20to\x20each\x20image\x20to\x20the\x20original\x20image.\x20Sometimes\x20people\x20want\x20to\x20see\x20a\x20full-sized\x20version\x20of\x20an\x20image\x20e.g.\x20to\x20see\x20extra\x20detail\x20on\x20a\x20part\x20of\x20the\x20image\x20and\x20this\x20is\x20a\x20convenient\x20and\x20common\x20pattern\x20for\x20enabling\x20this.\x20Set\x20this\x20option\x20to\x20false\x20to\x20disable\x20this\x20behavior.'),
        'showCaptions': _0x3c29d0['alternatives']()['try'](_0x3c29d0['boolean'](), _0x3c29d0['array']()['items'](_0x3c29d0['string']()['valid']('title'), _0x3c29d0['string']()['valid']('alt')))['default'](![])['description']('Add\x20a\x20caption\x20to\x20each\x20image\x20with\x20the\x20contents\x20of\x20the\x20title\x20attribute,\x20when\x20this\x20is\x20not\x20empty.\x20If\x20the\x20title\x20attribute\x20is\x20empty\x20but\x20the\x20alt\x20attribute\x20is\x20not,\x20it\x20will\x20be\x20used\x20instead.\x20Set\x20this\x20option\x20to\x20true\x20to\x20enable\x20this\x20behavior.\x20You\x20can\x20also\x20pass\x20an\x20array\x20instead\x20to\x20specify\x20which\x20value\x20should\x20be\x20used\x20for\x20the\x20caption\x20—\x20for\x20example,\x20passing\x20[\x27alt\x27,\x20\x27title\x27]\x20would\x20use\x20the\x20alt\x20attribute\x20first,\x20and\x20then\x20the\x20title.\x20When\x20this\x20is\x20set\x20to\x20true\x20it\x20is\x20the\x20same\x20as\x20passing\x20[\x27title\x27,\x20\x27alt\x27].\x20If\x20you\x20just\x20want\x20to\x20use\x20the\x20title\x20(and\x20omit\x20captions\x20for\x20images\x20that\x20have\x20alt\x20attributes\x20but\x20no\x20title),\x20pass\x20[\x27title\x27].'),
        'markdownCaptions': _0x3c29d0['boolean']()['default'](![])['description']('Parse\x20the\x20caption\x20as\x20markdown\x20instead\x20of\x20raw\x20text.\x20Ignored\x20if\x20showCaptions\x20is\x20false.'),
        'sizeByPixelDensity': _0x3c29d0['boolean']()['default'](![])['description']('[deprecated]\x20Pixel\x20density\x20is\x20only\x20used\x20in\x20vector\x20images,\x20which\x20Gatsby’s\x20implementation\x20of\x20Sharp\x20doesn’t\x20support.\x20This\x20option\x20is\x20currently\x20a\x20no-op\x20and\x20will\x20be\x20removed\x20in\x20the\x20next\x20major\x20version\x20of\x20Gatsby.'),
        'wrapperStyle': _0x3c29d0['alternatives']()['try'](_0x3c29d0['object']({})['unknown'](!![]), _0x3c29d0['function']()['maxArity'](0x1), _0x3c29d0['string']()),
        'backgroundColor': _0x3c29d0['string']()['default']('white')['description']('Set\x20the\x20background\x20color\x20of\x20the\x20image\x20to\x20match\x20the\x20background\x20image\x20of\x20your\x20design.\x0a\x0a\x20\x20\x20\x20\x20\x20Note:\x0a\x20\x20\x20\x20\x20\x20-\x20set\x20this\x20option\x20to\x20transparent\x20for\x20a\x20transparent\x20image\x20background.\x0a\x20\x20\x20\x20\x20\x20-\x20set\x20this\x20option\x20to\x20none\x20to\x20completely\x20remove\x20the\x20image\x20background.'),
        'quality': _0x3c29d0['number']()['default'](0x32)['description']('The\x20quality\x20level\x20of\x20the\x20generated\x20files.'),
        'withWebp': _0x3c29d0['alternatives']()['try'](_0x3c29d0['object']({ 'quality': _0x3c29d0['number']() }), _0x3c29d0['boolean']())['default'](![])['description']('Additionally\x20generate\x20WebP\x20versions\x20alongside\x20your\x20chosen\x20file\x20format.\x20They\x20are\x20added\x20as\x20a\x20srcset\x20with\x20the\x20appropriate\x20mimetype\x20and\x20will\x20be\x20loaded\x20in\x20browsers\x20that\x20support\x20the\x20format.\x20Pass\x20true\x20for\x20default\x20support,\x20or\x20an\x20object\x20of\x20options\x20to\x20specifically\x20override\x20those\x20for\x20the\x20WebP\x20files.\x20For\x20example,\x20pass\x20{\x20quality:\x2080\x20}\x20to\x20have\x20the\x20WebP\x20images\x20be\x20at\x20quality\x20level\x2080.'),
        'tracedSVG': _0x3c29d0['alternatives']()['try'](_0x3c29d0['boolean'](), _0x3c29d0['object']({
            'turnPolicy': _0x3c29d0['string']()['valid']('TURNPOLICY_BLACK', 'TURNPOLICY_WHITE', 'TURNPOLICY_LEFT', 'TURNPOLICY_RIGHT', 'TURNPOLICY_MINORITY', 'TURNPOLICY_MAJORITY', Potrace['TURNPOLICY_BLACK'], Potrace['TURNPOLICY_WHITE'], Potrace['TURNPOLICY_LEFT'], Potrace['TURNPOLICY_RIGHT'], Potrace['TURNPOLICY_MINORITY'], Potrace['TURNPOLICY_MAJORITY'])['default'](Potrace['TURNPOLICY_MAJORITY']),
            'turdSize': _0x3c29d0['number']()['default'](0x64),
            'alphaMax': _0x3c29d0['number'](),
            'optCurve': _0x3c29d0['boolean']()['default'](!![]),
            'optTolerance': _0x3c29d0['number']()['default'](0.4),
            'threshold': _0x3c29d0['alternatives']()['try'](_0x3c29d0['number']()['min'](0x0)['max'](0xff), _0x3c29d0['number']()['valid'](Potrace['THRESHOLD_AUTO']))['default'](Potrace['THRESHOLD_AUTO']),
            'blackOnWhite': _0x3c29d0['boolean']()['default'](!![]),
            'color': _0x3c29d0['string']()['default']('lightgray'),
            'background': _0x3c29d0['string']()['default']('transparent')
        }))['default'](![])['description']('Use\x20traced\x20SVGs\x20for\x20placeholder\x20images\x20instead\x20of\x20the\x20“blur\x20up”\x20effect.\x20Pass\x20true\x20for\x20traced\x20SVGs\x20with\x20the\x20default\x20settings\x20(seen\x20here),\x20or\x20an\x20object\x20of\x20options\x20to\x20override\x20the\x20default.\x20For\x20example,\x20pass\x20{\x20color:\x20\x22#F00\x22,\x20turnPolicy:\x20\x22TURNPOLICY_MAJORITY\x22\x20}\x20to\x20change\x20the\x20color\x20of\x20the\x20trace\x20to\x20red\x20and\x20the\x20turn\x20policy\x20to\x20TURNPOLICY_MAJORITY.\x20See\x20node-potrace\x20parameter\x20documentation\x20for\x20a\x20full\x20listing\x20and\x20explanation\x20of\x20the\x20available\x20options.'),
        'loading': _0x3c29d0['string']()['valid']('lazy', 'eager', 'auto')['default']('lazy')['description']('Set\x20the\x20browser’s\x20native\x20lazy\x20loading\x20attribute.\x20One\x20of\x20lazy,\x20eager\x20or\x20auto.'),
        'decoding': _0x3c29d0['string']()['valid']('async', 'sync', 'auto')['default']('async')['description']('Set\x20the\x20browser’s\x20native\x20decoding\x20attribute.\x20One\x20of\x20async,\x20sync\x20or\x20auto.'),
        'disableBgImageOnAlpha': _0x3c29d0['boolean']()['default'](![])['description']('Images\x20containing\x20transparent\x20pixels\x20around\x20the\x20edges\x20results\x20in\x20images\x20with\x20blurry\x20edges.\x20As\x20a\x20result,\x20these\x20images\x20do\x20not\x20work\x20well\x20with\x20the\x20“blur\x20up”\x20technique\x20used\x20in\x20this\x20plugin.\x20As\x20a\x20workaround\x20to\x20disable\x20background\x20images\x20with\x20blurry\x20edges\x20on\x20images\x20containing\x20transparent\x20pixels,\x20enable\x20this\x20setting.'),
        'disableBgImage': _0x3c29d0['boolean']()['default'](![])['description']('Remove\x20background\x20image\x20and\x20its’\x20inline\x20style.\x20Useful\x20to\x20prevent\x20Stylesheet\x20too\x20long\x20error\x20on\x20AMP.'),
        'srcSetBreakpoints': _0x3c29d0['array']()['items'](_0x3c29d0['number']())['description']('By\x20default\x20gatsby\x20generates\x200.25x,\x200.5x,\x201x,\x201.5x,\x202x,\x20and\x203x\x20sizes\x20of\x20thumbnails.\x20If\x20you\x20want\x20more\x20control\x20over\x20which\x20sizes\x20are\x20output\x20you\x20can\x20use\x20the\x20srcSetBreakpoints\x20parameter.\x20For\x20example,\x20if\x20you\x20want\x20images\x20that\x20are\x20200,\x20340,\x20520,\x20and\x20890\x20wide\x20you\x20can\x20add\x20srcSetBreakpoints:\x20[\x20200,\x20340,\x20520,\x20890\x20]\x20as\x20a\x20parameter.\x20You\x20will\x20also\x20get\x20maxWidth\x20as\x20a\x20breakpoint\x20(which\x20is\x20650\x20by\x20default),\x20so\x20you\x20will\x20actually\x20get\x20[\x20200,\x20340,\x20520,\x20650,\x20890\x20]\x20as\x20breakpoints.')
    });
};
