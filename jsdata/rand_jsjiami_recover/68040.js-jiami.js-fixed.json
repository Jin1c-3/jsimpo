{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "it"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "should not bundle context requires with asyncMode === 'weak'",
                        "raw": "'should not bundle context requires with asyncMode === 'weak''"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x2fc8b2"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "context",
                                                        "raw": "'context'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": ".",
                                                        "raw": "'.'"
                                                    },
                                                    {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                        },
                                                        "prefix": true
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": {},
                                                        "raw": "/two/",
                                                        "regex": {
                                                            "pattern": "two",
                                                            "flags": ""
                                                        }
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "weak",
                                                        "raw": "'weak'"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "expect"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2fc8b2"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "./two",
                                                                                "raw": "'./two'"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    }
                                                ]
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "toThrowError",
                                                "raw": "'toThrowError'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": {},
                                                "raw": "/not available/",
                                                "regex": {
                                                    "pattern": "not available",
                                                    "flags": ""
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "it"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "should find module with asyncMode === 'weak' when required elsewhere",
                        "raw": "'should\\x20find\\x20module\\x20with\\x20asyncMode\\x20===\\x20\\x27weak\\x27\\x20when\\x20required\\x20elsewhere'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x1044a9"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "context",
                                                        "raw": "'context'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": ".",
                                                        "raw": "'.'"
                                                    },
                                                    {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                        },
                                                        "prefix": true
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": {},
                                                        "raw": "/.+/",
                                                        "regex": {
                                                            "pattern": ".+",
                                                            "flags": ""
                                                        }
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "weak",
                                                        "raw": "'weak'"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "expect"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x4aa48c"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "kUQII",
                                                                "raw": "'kUQII'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x1044a9"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "./three",
                                                                "raw": "'./three'"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "toBe",
                                                "raw": "'toBe'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 3,
                                                "raw": "0x3"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "require"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "./three",
                                                "raw": "'./three'"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "it"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "should find module with asyncMode === 'weak' when required elsewhere (recursive)",
                        "raw": "'should find module with asyncMode === 'weak' when required elsewhere (recursive)'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x2811dd"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "context",
                                                        "raw": "'context'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": ".",
                                                        "raw": "'.'"
                                                    },
                                                    {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "prefix": true
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": {},
                                                        "raw": "/.+/",
                                                        "regex": {
                                                            "pattern": ".+",
                                                            "flags": ""
                                                        }
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "weak",
                                                        "raw": "'weak'"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "expect"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0x2811dd"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "./dir/four",
                                                                "raw": "'./dir/four'"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "toBe",
                                                "raw": "'toBe'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 4,
                                                "raw": "0x4"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "require"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "./dir/four",
                                                "raw": "'./dir/four'"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}