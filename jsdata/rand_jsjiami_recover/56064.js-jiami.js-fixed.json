{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "common"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../common",
                                "raw": "'../common'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "assert",
                                "raw": "'assert'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "events"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "events",
                                "raw": "'events'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "ObjectPattern",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "inspect"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "inspect"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            }
                        ]
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "util",
                                "raw": "'util'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "e"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "events"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "EventEmitter",
                                "raw": "'EventEmitter'"
                            }
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "e"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "on",
                        "raw": "'on'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "maxListeners",
                        "raw": "'maxListeners'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "common"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "mustCall",
                                "raw": "'mustCall'"
                            }
                        },
                        "arguments": []
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "e"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "setMaxListeners",
                        "raw": "'setMaxListeners'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 42,
                        "raw": "0x2a"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "throwsObjs"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Identifier",
                                "name": "NaN"
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                },
                                "prefix": true
                            },
                            {
                                "type": "Literal",
                                "value": "and even this",
                                "raw": "'and even this'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ForOfStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "obj"
                        },
                        "init": null
                    }
                ],
                "kind": "const"
            },
            "right": {
                "type": "Identifier",
                "name": "throwsObjs"
            },
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "throws",
                                    "raw": "'throws'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ArrowFunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "body": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "e"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "setMaxListeners",
                                                "raw": "'setMaxListeners'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "obj"
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": true,
                                    "async": false
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "code",
                                                "raw": "'code'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Literal",
                                                "value": "ERR_OUT_OF_RANGE",
                                                "raw": "'ERR_OUT_OF_RANGE'"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "name",
                                                "raw": "'name'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Literal",
                                                "value": "RangeError",
                                                "raw": "'RangeError'"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "message",
                                                "raw": "'message'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "The value of \"n\" is out of range. ",
                                                    "raw": "'The\\x20value\\x20of\\x20\\x22n\\x22\\x20is\\x20out\\x20of\\x20range.\\x20'"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "It must be a non-negative number. Received ",
                                                        "raw": "'It must be a non-negative number. Received '"
                                                    },
                                                    "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "inspect"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "obj"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "throws",
                                    "raw": "'throws'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ArrowFunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "body": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "events"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "defaultMaxListeners",
                                                "raw": "'defaultMaxListeners'"
                                            }
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "obj"
                                        }
                                    },
                                    "generator": false,
                                    "expression": true,
                                    "async": false
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "code",
                                                "raw": "'code'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Literal",
                                                "value": "ERR_OUT_OF_RANGE",
                                                "raw": "'ERR_OUT_OF_RANGE'"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "name",
                                                "raw": "'name'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Literal",
                                                "value": "RangeError",
                                                "raw": "'RangeError'"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "message",
                                                "raw": "'message'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "The value of \"defaultMaxListeners\" is out of range. ",
                                                    "raw": "'The value of \"defaultMaxListeners\" is out of range. '"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "It must be a non-negative number. Received ",
                                                        "raw": "'It must be a non-negative number. Received '"
                                                    },
                                                    "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "inspect"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "obj"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "e"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "emit",
                        "raw": "'emit'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "maxListeners",
                        "raw": "'maxListeners'"
                    }
                ]
            }
        },
        {
            "type": "BlockStatement",
            "body": [
                {
                    "type": "VariableDeclaration",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "ObjectPattern",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Identifier",
                                            "name": "EventEmitter"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "EventEmitter"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": true
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Identifier",
                                            "name": "defaultMaxListeners"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "defaultMaxListeners"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": true
                                    }
                                ]
                            },
                            "init": {
                                "type": "Identifier",
                                "name": "events"
                            }
                        }
                    ],
                    "kind": "const"
                },
                {
                    "type": "ForOfStatement",
                    "left": {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "obj"
                                },
                                "init": null
                            }
                        ],
                        "kind": "const"
                    },
                    "right": {
                        "type": "Identifier",
                        "name": "throwsObjs"
                    },
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "assert"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "throws",
                                            "raw": "'throws'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "EventEmitter"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "setMaxListeners",
                                                        "raw": "'setMaxListeners'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "obj"
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "code",
                                                        "raw": "'code'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Literal",
                                                        "value": "ERR_OUT_OF_RANGE",
                                                        "raw": "'ERR_OUT_OF_RANGE'"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "EventEmitter"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "setMaxListeners",
                                            "raw": "'setMaxListeners'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "defaultMaxListeners"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "INVALID_EMITTER",
                                            "raw": "'INVALID_EMITTER'"
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "code",
                                            "raw": "'code'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": "ERR_INVALID_ARG_TYPE",
                                            "raw": "'ERR_INVALID_ARG_TYPE'"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        }
    ],
    "sourceType": "script"
}