{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "targets"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ClassDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Foo"
            },
            "superClass": null,
            "body": {
                "type": "ClassBody",
                "body": [
                    {
                        "type": "MethodDefinition",
                        "key": {
                            "type": "Identifier",
                            "name": "constructor"
                        },
                        "computed": false,
                        "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "targets"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "push",
                                                    "raw": "'push'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "MetaProperty",
                                                    "meta": {
                                                        "type": "Identifier",
                                                        "name": "new"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "target"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "kind": "constructor",
                        "static": false
                    }
                ]
            }
        },
        {
            "type": "ClassDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Bar"
            },
            "superClass": {
                "type": "Identifier",
                "name": "Foo"
            },
            "body": {
                "type": "ClassBody",
                "body": []
            }
        },
        {
            "type": "ClassDeclaration",
            "id": {
                "type": "Identifier",
                "name": "Baz"
            },
            "superClass": null,
            "body": {
                "type": "ClassBody",
                "body": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "Reflect"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "construct",
                        "raw": "'construct'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Foo"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "Reflect"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "construct",
                        "raw": "'construct'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Foo"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": []
                    },
                    {
                        "type": "Identifier",
                        "name": "Bar"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "Reflect"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "construct",
                        "raw": "'construct'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Bar"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "Reflect"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "construct",
                        "raw": "'construct'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Bar"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": []
                    },
                    {
                        "type": "Identifier",
                        "name": "Baz"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "Reflect"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "construct",
                        "raw": "'construct'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Foo"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": []
                    },
                    {
                        "type": "Identifier",
                        "name": "Baz"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "targets"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Foo"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "targets"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                }
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Bar"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "targets"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                }
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Bar"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "targets"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 3,
                                    "raw": "0x3"
                                }
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Baz"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "targets"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 4,
                                    "raw": "0x4"
                                }
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Baz"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}