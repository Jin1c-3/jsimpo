{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "fetch"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "node-fetch",
                                "raw": "'node-fetch'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "ObjectPattern",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "writeFileSync"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "writeFileSync"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            }
                        ]
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "fs",
                                "raw": "'fs'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "stories"
                    },
                    "init": {
                        "type": "Literal",
                        "value": 50,
                        "raw": "0x32"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "getStory"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x5c792e"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x12b9df"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "fetch"
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "https://hacker-news.firebaseio.com/v0/item/",
                                                        "raw": "'https://hacker-news.firebaseio.com/v0/item/'"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x5c792e"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": ".json",
                                                    "raw": "'.json'"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "AwaitExpression",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x12b9df"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "json",
                                        "raw": "'json'"
                                    }
                                },
                                "arguments": []
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "getTopStories"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x5d57e0"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "fetch"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "https://hacker-news.firebaseio.com/v0/topstories.js",
                                                "raw": "'https://hacker-news.firebaseio.com/v0/topstories.js'"
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x70629c"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5d57e0"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "json",
                                                "raw": "'json'"
                                            }
                                        },
                                        "arguments": []
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2ff360"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ForStatement",
                        "init": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "_0xe58fae"
                                    },
                                    "init": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    }
                                }
                            ],
                            "kind": "let"
                        },
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "<",
                            "left": {
                                "type": "Identifier",
                                "name": "_0xe58fae"
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "stories"
                            }
                        },
                        "update": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0xe58fae"
                            },
                            "prefix": false
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x1deb62"
                                            },
                                            "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x70629c"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "_0xe58fae"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "const"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x2ff360"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "push",
                                                "raw": "'push'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "AwaitExpression",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "getStory"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x1deb62"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "writeFileSync"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "top-stories.json",
                                    "raw": "'top-stories.json'"
                                },
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "window.stories = ",
                                        "raw": "'window.stories = '"
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "JSON"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "stringify",
                                                "raw": "'stringify'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2ff360"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "getTopStories"
                },
                "arguments": []
            }
        }
    ],
    "sourceType": "script"
}