{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "path"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "path",
                                "raw": "'path'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "ObjectPattern",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "parseMD"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "parseMD"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            }
                        ]
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".",
                                "raw": "'.'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "describe"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "challenge parser",
                        "raw": "'challenge parser'"
                    },
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "should parse a simple md file",
                                                "raw": "'should parse a simple md file'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x5dd020"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/simple.md",
                                                                                            "raw": "'__fixtures__/simple.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5dd020"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "should parse a more realistic md file",
                                                "raw": "'should parse a more realistic md file'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x192db9"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/realistic.md",
                                                                                            "raw": "'__fixtures__/realistic.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x192db9"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "should import md from other files",
                                                "raw": "'should\\x20import\\x20md\\x20from\\x20other\\x20files'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x50af25"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/with-imports.md",
                                                                                            "raw": "'__fixtures__/with-imports.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x50af25"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "should parse frontmatter",
                                                "raw": "'should parse frontmatter'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4414e6"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/with-frontmatter.md",
                                                                                            "raw": "'__fixtures__/with-frontmatter.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4414e6"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "should parse gfm strikethrough and frontmatter",
                                                "raw": "'should parse gfm strikethrough and frontmatter'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x16f84e"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/with-gfm.md",
                                                                                            "raw": "'__fixtures__/with-gfm.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x16f84e"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "should not mix other YAML with the frontmatter",
                                                "raw": "'should not mix other YAML with the frontmatter'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4b3841"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/with-yaml.md",
                                                                                            "raw": "'__fixtures__/with-yaml.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4b3841"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "it should parse video questions",
                                                "raw": "'it\\x20should\\x20parse\\x20video\\x20questions'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x78d203"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/with-video-question.md",
                                                                                            "raw": "'__fixtures__/with-video-question.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x78d203"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "it should not parse directives we do not use",
                                                "raw": "'it\\x20should\\x20not\\x20parse\\x20directives\\x20we\\x20do\\x20not\\x20use'"
                                            },
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x151a0d"
                                                                    },
                                                                    "init": {
                                                                        "type": "AwaitExpression",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "parseMD"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "path"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "resolve",
                                                                                            "raw": "'resolve'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "__dirname"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "__fixtures__/with-directives.md",
                                                                                            "raw": "'__fixtures__/with-directives.md'"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "const"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "expect"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x151a0d"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "toMatchSnapshot",
                                                                        "raw": "'toMatchSnapshot'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": true
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}