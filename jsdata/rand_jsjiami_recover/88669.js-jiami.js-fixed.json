{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "MongoInternals"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "RemoteCollectionDriver",
                        "raw": "'RemoteCollectionDriver'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x209726"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x599faf"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0xb63144"
                                        },
                                        "init": {
                                            "type": "ThisExpression"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0xb63144"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "mongo",
                                            "raw": "'mongo'"
                                        }
                                    },
                                    "right": {
                                        "type": "NewExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "MongoConnection"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x209726"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x599faf"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "_"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "extend",
                        "raw": "'extend'"
                    }
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "MongoInternals"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "RemoteCollectionDriver",
                                "raw": "'RemoteCollectionDriver'"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "prototype",
                            "raw": "'prototype'"
                        }
                    },
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "open",
                                    "raw": "'open'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x3ab4e6"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x2822a3"
                                                        },
                                                        "init": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "each",
                                                            "raw": "'each'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "find",
                                                                    "raw": "'find'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "findOne",
                                                                    "raw": "'findOne'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "insert",
                                                                    "raw": "'insert'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "update",
                                                                    "raw": "'update'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "upsert",
                                                                    "raw": "'upsert'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "remove",
                                                                    "raw": "'remove'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "_ensureIndex",
                                                                    "raw": "'_ensureIndex'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "_dropIndex",
                                                                    "raw": "'_dropIndex'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "_createCappedCollection",
                                                                    "raw": "'_createCappedCollection'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "dropCollection",
                                                                    "raw": "'dropCollection'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "rawCollection",
                                                                    "raw": "'rawCollection'"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "FunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0xadf092"
                                                                }
                                                            ],
                                                            "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x26b365"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0xadf092"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "bind",
                                                                                        "raw": "'bind'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2822a3"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "mongo",
                                                                                                "raw": "'mongo'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xadf092"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2822a3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "mongo",
                                                                                            "raw": "'mongo'"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3ab4e6"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "generator": false,
                                                            "expression": false,
                                                            "async": false
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "_0x26b365"
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "MongoInternals"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "defaultRemoteCollectionDriver",
                        "raw": "'defaultRemoteCollectionDriver'"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "_"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "once",
                            "raw": "'once'"
                        }
                    },
                    "arguments": [
                        {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0x5943d2"
                                                },
                                                "init": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Literal",
                                                            "value": "1|2|3|0|4",
                                                            "raw": "'1|2|3|0|4'"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "split",
                                                            "raw": "'split'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "|",
                                                            "raw": "'|'"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0x3ba700"
                                                },
                                                "init": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0x0"
                                                }
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "WhileStatement",
                                        "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": []
                                                },
                                                "prefix": true
                                            },
                                            "prefix": true
                                        },
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "SwitchStatement",
                                                    "discriminant": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x5943d2"
                                                        },
                                                        "property": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x3ba700"
                                                            },
                                                            "prefix": false
                                                        }
                                                    },
                                                    "cases": [
                                                        {
                                                            "type": "SwitchCase",
                                                            "test": {
                                                                "type": "Literal",
                                                                "value": "0",
                                                                "raw": "'0'"
                                                            },
                                                            "consequent": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x49582d"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "consequent": {
                                                                        "type": "ThrowStatement",
                                                                        "argument": {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Error"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "MONGO_URL must be set in environment",
                                                                                    "raw": "'MONGO_URL must be set in environment'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ContinueStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "SwitchCase",
                                                            "test": {
                                                                "type": "Literal",
                                                                "value": "1",
                                                                "raw": "'1'"
                                                            },
                                                            "consequent": [
                                                                {
                                                                    "type": "ContinueStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "SwitchCase",
                                                            "test": {
                                                                "type": "Literal",
                                                                "value": "2",
                                                                "raw": "'2'"
                                                            },
                                                            "consequent": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x49582d"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "process"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "env",
                                                                                        "raw": "'env'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "MONGO_URL",
                                                                                    "raw": "'MONGO_URL'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ContinueStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "SwitchCase",
                                                            "test": {
                                                                "type": "Literal",
                                                                "value": "3",
                                                                "raw": "'3'"
                                                            },
                                                            "consequent": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "process"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "env",
                                                                                "raw": "'env'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "MONGO_OPLOG_URL",
                                                                            "raw": "'MONGO_OPLOG_URL'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xb2ced5"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "oplogUrl",
                                                                                            "raw": "'oplogUrl'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "process"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "env",
                                                                                                "raw": "'env'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "MONGO_OPLOG_URL",
                                                                                            "raw": "'MONGO_OPLOG_URL'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ContinueStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "SwitchCase",
                                                            "test": {
                                                                "type": "Literal",
                                                                "value": "4",
                                                                "raw": "'4'"
                                                            },
                                                            "consequent": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "MongoInternals"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "RemoteCollectionDriver",
                                                                                "raw": "'RemoteCollectionDriver'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x49582d"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0xb2ced5"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "BreakStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        }
                    ]
                }
            }
        }
    ],
    "sourceType": "script"
}