{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "f"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x40617a"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Literal",
                                            "value": "4|1|6|3|5|0|2",
                                            "raw": "'4|1|6|3|5|0|2'"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2233f0"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x40617a"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_0x2233f0"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "YieldExpression",
                                                            "argument": null,
                                                            "delegate": false
                                                        },
                                                        "alternate": {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "YieldExpression",
                                                                "argument": null,
                                                                "delegate": false
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "SequenceExpression",
                                                        "expressions": [
                                                            {
                                                                "type": "YieldExpression",
                                                                "argument": null,
                                                                "delegate": false
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "EmptyStatement"
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "YieldExpression",
                                                        "argument": null,
                                                        "delegate": false
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "5",
                                                "raw": "'5'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "YieldExpression",
                                                        "argument": null,
                                                        "delegate": false
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "6",
                                                "raw": "'6'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "YieldExpression",
                                                                "argument": null,
                                                                "delegate": false
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": true,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}