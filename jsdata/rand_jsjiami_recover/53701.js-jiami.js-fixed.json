{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "common"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../common",
                                "raw": "'../common'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "assert",
                                "raw": "'assert'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "domain"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "domain",
                                "raw": "'domain'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "d"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "domain"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "Domain",
                                "raw": "'Domain'"
                            }
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "d"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "on",
                        "raw": "'on'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "error",
                        "raw": "'error'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "common"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "mustCall",
                                "raw": "'mustCall'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x14b461"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x3bd1b9"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Literal",
                                                                "value": "0|2|1|4|3",
                                                                "raw": "'0|2|1|4|3'"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "split",
                                                                "raw": "'split'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "|",
                                                                "raw": "'|'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x537074"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "WhileStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    },
                                                    "prefix": true
                                                },
                                                "prefix": true
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "SwitchStatement",
                                                        "discriminant": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x3bd1b9"
                                                            },
                                                            "property": {
                                                                "type": "UpdateExpression",
                                                                "operator": "++",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x537074"
                                                                },
                                                                "prefix": false
                                                            }
                                                        },
                                                        "cases": [
                                                            {
                                                                "type": "SwitchCase",
                                                                "test": {
                                                                    "type": "Literal",
                                                                    "value": "0",
                                                                    "raw": "'0'"
                                                                },
                                                                "consequent": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "strictEqual",
                                                                                    "raw": "'strictEqual'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x14b461"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "message",
                                                                                        "raw": "'message'"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "foobar",
                                                                                    "raw": "'foobar'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ContinueStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "SwitchCase",
                                                                "test": {
                                                                    "type": "Literal",
                                                                    "value": "1",
                                                                    "raw": "'1'"
                                                                },
                                                                "consequent": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "strictEqual",
                                                                                    "raw": "'strictEqual'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x14b461"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "domainEmitter",
                                                                                        "raw": "'domainEmitter'"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "undefined"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ContinueStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "SwitchCase",
                                                                "test": {
                                                                    "type": "Literal",
                                                                    "value": "2",
                                                                    "raw": "'2'"
                                                                },
                                                                "consequent": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "strictEqual",
                                                                                    "raw": "'strictEqual'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x14b461"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "domain",
                                                                                        "raw": "'domain'"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "d"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ContinueStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "SwitchCase",
                                                                "test": {
                                                                    "type": "Literal",
                                                                    "value": "3",
                                                                    "raw": "'3'"
                                                                },
                                                                "consequent": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "strictEqual",
                                                                                    "raw": "'strictEqual'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x14b461"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "domainThrown",
                                                                                        "raw": "'domainThrown'"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ContinueStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "SwitchCase",
                                                                "test": {
                                                                    "type": "Literal",
                                                                    "value": "4",
                                                                    "raw": "'4'"
                                                                },
                                                                "consequent": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "strictEqual",
                                                                                    "raw": "'strictEqual'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x14b461"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "domainBound",
                                                                                        "raw": "'domainBound'"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "undefined"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ContinueStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "BreakStatement",
                                                        "label": null
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "d"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "run",
                        "raw": "'run'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "common"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "mustCall",
                                "raw": "'mustCall'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "process"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "nextTick",
                                                        "raw": "'nextTick'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "common"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "mustCall",
                                                                "raw": "'mustCall'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ArrowFunctionExpression",
                                                                "id": null,
                                                                "params": [],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ThrowStatement",
                                                                            "argument": {
                                                                                "type": "NewExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Error"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": "foobar",
                                                                                        "raw": "'foobar'"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}