{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "path"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "path",
                                "raw": "'path'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "http"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "http",
                                "raw": "'http'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "server"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "http"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "createServer",
                                "raw": "'createServer'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x14dd36"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_0x30c7a1"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x55e688"
                                                    },
                                                    "init": {
                                                        "type": "ArrowFunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x251e38"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5177a8"
                                                                            },
                                                                            "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "require"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Literal",
                                                                                            "value": "./",
                                                                                            "raw": "'./'"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "path"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "join",
                                                                                                    "raw": "'join'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "value": ".next/serverless/pages/",
                                                                                                    "raw": "'.next/serverless/pages/'"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x251e38"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "const"
                                                                },
                                                                {
                                                                    "type": "TryStatement",
                                                                    "block": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "AwaitExpression",
                                                                                    "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "||",
                                                                                            "left": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "||",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x5177a8"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "render",
                                                                                                        "raw": "'render'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x5177a8"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "default",
                                                                                                        "raw": "'default'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x5177a8"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x14dd36"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x30c7a1"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "handler": {
                                                                        "type": "CatchClause",
                                                                        "param": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x38c128"
                                                                        },
                                                                        "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x30c7a1"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "statusCode",
                                                                                                "raw": "'statusCode'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 500,
                                                                                            "raw": "0x1f4"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x30c7a1"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "end",
                                                                                                "raw": "'end'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": "internal error",
                                                                                                "raw": "'internal error'"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "finalizer": null
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": true
                                                    }
                                                }
                                            ],
                                            "kind": "const"
                                        },
                                        {
                                            "type": "TryStatement",
                                            "block": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AwaitExpression",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x55e688"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "/[[...slug]].js",
                                                                        "raw": "'/[[...slug]].js'"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "handler": {
                                                "type": "CatchClause",
                                                "param": {
                                                    "type": "Identifier",
                                                    "name": "_0x90b293"
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "error",
                                                                        "raw": "'error'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "failed to render",
                                                                        "raw": "'failed\\x20to\\x20render'"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x90b293"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x30c7a1"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "statusCode",
                                                                        "raw": "'statusCode'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 500,
                                                                    "raw": "0x1f4"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x30c7a1"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "end",
                                                                        "raw": "'end'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "Internal Error",
                                                                        "raw": "'Internal\\x20Error'"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            "finalizer": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": true
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "port"
                    },
                    "init": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "process"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "env",
                                    "raw": "'env'"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": "PORT",
                                "raw": "'PORT'"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 3000,
                            "raw": "0xbb8"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "server"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "listen",
                        "raw": "'listen'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "port"
                    },
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "console"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "log",
                                                "raw": "'log'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "ready on",
                                                "raw": "'ready on'"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "port"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}