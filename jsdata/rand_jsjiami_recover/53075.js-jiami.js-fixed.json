{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "isTerm"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "process"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "env",
                                    "raw": "'env'"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": "TERM_PROGRAM",
                                "raw": "'TERM_PROGRAM'"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": "Apple_Terminal",
                            "raw": "'Apple_Terminal'"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "colors"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "ansi-colors",
                                "raw": "'ansi-colors'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "utils"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./utils",
                                "raw": "'./utils'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ansi"
                    },
                    "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "module"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "exports",
                                "raw": "'exports'"
                            }
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "exports"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ESC"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "\u001b[",
                        "raw": "'\u001b['"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "BEL"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "\u0007",
                        "raw": "'\u0007'"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "hidden"
                    },
                    "init": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                            "type": "ArrayExpression",
                            "elements": []
                        },
                        "prefix": true
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "code"
                    },
                    "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "ansi"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "code",
                                "raw": "'code'"
                            }
                        },
                        "right": {
                            "type": "ObjectExpression",
                            "properties": [
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "bell",
                                        "raw": "'bell'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "BEL"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "beep",
                                        "raw": "'beep'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "BEL"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "beginning",
                                        "raw": "'beginning'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "G",
                                            "raw": "'G'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "down",
                                        "raw": "'down'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "J",
                                            "raw": "'J'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "esc",
                                        "raw": "'esc'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "ESC"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "getPosition",
                                        "raw": "'getPosition'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "6n",
                                            "raw": "'6n'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "hide",
                                        "raw": "'hide'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "?25l",
                                            "raw": "'?25l'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "line",
                                        "raw": "'line'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "2K",
                                            "raw": "'2K'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "lineEnd",
                                        "raw": "'lineEnd'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "K",
                                            "raw": "'K'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "lineStart",
                                        "raw": "'lineStart'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "1K",
                                            "raw": "'1K'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "restorePosition",
                                        "raw": "'restorePosition'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "isTerm"
                                            },
                                            "consequent": {
                                                "type": "Literal",
                                                "value": "8",
                                                "raw": "'8'"
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": "u",
                                                "raw": "'u'"
                                            }
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "savePosition",
                                        "raw": "'savePosition'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "isTerm"
                                            },
                                            "consequent": {
                                                "type": "Literal",
                                                "value": "7",
                                                "raw": "'7'"
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": "s",
                                                "raw": "'s'"
                                            }
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "screen",
                                        "raw": "'screen'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "2J",
                                            "raw": "'2J'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "show",
                                        "raw": "'show'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "?25h",
                                            "raw": "'?25h'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "up",
                                        "raw": "'up'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ESC"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "1J",
                                            "raw": "'1J'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                }
                            ]
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "cursor"
                    },
                    "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "ansi"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "cursor",
                                "raw": "'cursor'"
                            }
                        },
                        "right": {
                            "type": "ObjectExpression",
                            "properties": [
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "hidden",
                                        "raw": "'hidden'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "hidden"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "get",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "hide",
                                        "raw": "'hide'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "hidden"
                                                        },
                                                        "right": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "code"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "hide",
                                                            "raw": "'hide'"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": true,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "show",
                                        "raw": "'show'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "hidden"
                                                        },
                                                        "right": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "code"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "show",
                                                            "raw": "'show'"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": true,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "forward",
                                        "raw": "'forward'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x3a8477"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "",
                                                        "raw": "''"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "ESC"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x3a8477"
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "C",
                                                "raw": "'C'"
                                            }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "backward",
                                        "raw": "'backward'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x57f2db"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "",
                                                        "raw": "''"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "ESC"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x57f2db"
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "D",
                                                "raw": "'D'"
                                            }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "nextLine",
                                        "raw": "'nextLine'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x4a6f9a"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "ESC"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "E",
                                                        "raw": "'E'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "repeat",
                                                    "raw": "'repeat'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4a6f9a"
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "prevLine",
                                        "raw": "'prevLine'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x1c0c15"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "ESC"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "F",
                                                        "raw": "'F'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "repeat",
                                                    "raw": "'repeat'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1c0c15"
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "up",
                                        "raw": "'up'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x104893"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "_0x104893"
                                            },
                                            "consequent": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "ESC"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x104893"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "A",
                                                    "raw": "'A'"
                                                }
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "down",
                                        "raw": "'down'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x51035c"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "_0x51035c"
                                            },
                                            "consequent": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "ESC"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x51035c"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "B",
                                                    "raw": "'B'"
                                                }
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "right",
                                        "raw": "'right'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x288f47"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "_0x288f47"
                                            },
                                            "consequent": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "ESC"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x288f47"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "C",
                                                    "raw": "'C'"
                                                }
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "left",
                                        "raw": "'left'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "ArrowFunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x227121"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "Identifier",
                                                "name": "_0x227121"
                                            },
                                            "consequent": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "ESC"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x227121"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "D",
                                                    "raw": "'D'"
                                                }
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        },
                                        "generator": false,
                                        "expression": true,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "to",
                                        "raw": "'to'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x1e22a4"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x25b2e4"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x25b2e4"
                                                        },
                                                        "consequent": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "",
                                                                                "raw": "''"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "ESC"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x25b2e4"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "0x1"
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": ";",
                                                                        "raw": "';'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1e22a4"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 1,
                                                                        "raw": "0x1"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "H",
                                                                "raw": "'H'"
                                                            }
                                                        },
                                                        "alternate": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "",
                                                                        "raw": "''"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "ESC"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1e22a4"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 1,
                                                                        "raw": "0x1"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "G",
                                                                "raw": "'G'"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": true,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "move",
                                        "raw": "'move'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x2db89a"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0x0"
                                                }
                                            },
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x2d5985"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0x0"
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x1a5277"
                                                            },
                                                            "init": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "+=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x1a5277"
                                                        },
                                                        "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2db89a"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursor"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "left",
                                                                        "raw": "'left'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2db89a"
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2db89a"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "cursor"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "right",
                                                                            "raw": "'right'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2db89a"
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": {
                                                                    "type": "Literal",
                                                                    "value": "",
                                                                    "raw": "''"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "+=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x1a5277"
                                                        },
                                                        "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2d5985"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursor"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "up",
                                                                        "raw": "'up'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2d5985"
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2d5985"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "cursor"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "down",
                                                                            "raw": "'down'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2d5985"
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": {
                                                                    "type": "Literal",
                                                                    "value": "",
                                                                    "raw": "''"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x1a5277"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": true,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "restore",
                                        "raw": "'restore'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "AssignmentPattern",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0xfd83cd"
                                                },
                                                "right": {
                                                    "type": "ObjectExpression",
                                                    "properties": []
                                                }
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "ObjectPattern",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "after"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "after"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": true
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "cursor"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "cursor"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": true
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "initial"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "initial"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": true
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "input"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": true
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "prompt"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "prompt"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": true
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "size"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "size"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": true
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": true
                                                                    }
                                                                ]
                                                            },
                                                            "init": {
                                                                "type": "Identifier",
                                                                "name": "_0xfd83cd"
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "initial"
                                                        },
                                                        "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "utils"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isPrimitive",
                                                                        "raw": "'isPrimitive'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "initial"
                                                                    }
                                                                ]
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "String"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "initial"
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "input"
                                                        },
                                                        "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "utils"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isPrimitive",
                                                                        "raw": "'isPrimitive'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    }
                                                                ]
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "String"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "input"
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                        },
                                                        "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "utils"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isPrimitive",
                                                                        "raw": "'isPrimitive'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "value"
                                                                    }
                                                                ]
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "String"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "value"
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "Identifier",
                                                        "name": "size"
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "!==",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "aFjMF",
                                                                        "raw": "'aFjMF'"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "skNzb",
                                                                        "raw": "'skNzb'"
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                                {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1cb95b"
                                                                                    },
                                                                                    "init": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "ansi"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "cursor",
                                                                                                        "raw": "'cursor'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "up",
                                                                                                    "raw": "'up'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "size"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "ansi"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "cursor",
                                                                                                        "raw": "'cursor'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "to",
                                                                                                    "raw": "'to'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "prompt"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "length",
                                                                                                        "raw": "'length'"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "kind": "let"
                                                                        },
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                                {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xb87b4f"
                                                                                    },
                                                                                    "init": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "-",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "cursor"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "kind": "let"
                                                                        },
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": ">",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0xb87b4f"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0x0"
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "!==",
                                                                                            "left": {
                                                                                                "type": "Literal",
                                                                                                "value": "LXvMR",
                                                                                                "raw": "'LXvMR'"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": "LXvMR",
                                                                                                "raw": "'LXvMR'"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "VariableDeclaration",
                                                                                                    "declarations": [
                                                                                                        {
                                                                                                            "type": "VariableDeclarator",
                                                                                                            "id": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x140cb7"
                                                                                                            },
                                                                                                            "init": {
                                                                                                                "type": "ConditionalExpression",
                                                                                                                "test": {
                                                                                                                    "type": "LogicalExpression",
                                                                                                                    "operator": "&&",
                                                                                                                    "left": {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "input"
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "UnaryExpression",
                                                                                                                            "operator": "!",
                                                                                                                            "argument": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "initial"
                                                                                                                            },
                                                                                                                            "prefix": true
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    }
                                                                                                                },
                                                                                                                "consequent": {
                                                                                                                    "type": "UnaryExpression",
                                                                                                                    "operator": "-",
                                                                                                                    "argument": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "initial"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "length",
                                                                                                                            "raw": "'length'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "prefix": true
                                                                                                                },
                                                                                                                "alternate": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "+",
                                                                                                                    "left": {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "-",
                                                                                                                        "argument": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "input"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "length",
                                                                                                                                "raw": "'length'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "cursor"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "kind": "let"
                                                                                                },
                                                                                                {
                                                                                                    "type": "IfStatement",
                                                                                                    "test": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "after"
                                                                                                    },
                                                                                                    "consequent": {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "-=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x140cb7"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "after"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "length",
                                                                                                                    "raw": "'length'"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "alternate": null
                                                                                                },
                                                                                                {
                                                                                                    "type": "IfStatement",
                                                                                                    "test": {
                                                                                                        "type": "LogicalExpression",
                                                                                                        "operator": "&&",
                                                                                                        "left": {
                                                                                                            "type": "LogicalExpression",
                                                                                                            "operator": "&&",
                                                                                                            "left": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "===",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "input"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "",
                                                                                                                    "raw": "''"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "initial"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "UnaryExpression",
                                                                                                            "operator": "!",
                                                                                                            "argument": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "prompt"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "includes",
                                                                                                                        "raw": "'includes'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "initial"
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "prefix": true
                                                                                                        }
                                                                                                    },
                                                                                                    "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "+=",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x140cb7"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "initial"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "length",
                                                                                                                            "raw": "'length'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "alternate": null
                                                                                                },
                                                                                                {
                                                                                                    "type": "ReturnStatement",
                                                                                                    "argument": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "ansi"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "cursor",
                                                                                                                    "raw": "'cursor'"
                                                                                                                }
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "move",
                                                                                                                "raw": "'move'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x140cb7"
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "+=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x1cb95b"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "ansi"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "cursor",
                                                                                                                        "raw": "'cursor'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "left",
                                                                                                                    "raw": "'left'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0xb87b4f"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": null
                                                                        },
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1cb95b"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "+=",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "str"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "ansi"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "erase",
                                                                                                "raw": "'erase'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "line",
                                                                                            "raw": "'line'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "ConditionalExpression",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "<",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "i"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "-",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "n"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "0x1"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "ansi"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "cursor",
                                                                                                        "raw": "'cursor'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "up",
                                                                                                    "raw": "'up'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "0x1"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": {
                                                                                            "type": "Literal",
                                                                                            "value": "",
                                                                                            "raw": "''"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "after"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "fLHvh",
                                                                        "raw": "'fLHvh'"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "yLYiI",
                                                                        "raw": "'yLYiI'"
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "columns"
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "consequent": {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "erase"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "line",
                                                                                            "raw": "'line'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "cursor"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "to",
                                                                                                "raw": "'to'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "alternate": null
                                                                        },
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                                {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2e982c"
                                                                                    },
                                                                                    "init": {
                                                                                        "type": "ArrowFunctionExpression",
                                                                                        "id": null,
                                                                                        "params": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2e4727"
                                                                                            }
                                                                                        ],
                                                                                        "body": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": [
                                                                                                    {
                                                                                                        "type": "SpreadElement",
                                                                                                        "argument": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "colors"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "unstyle",
                                                                                                                    "raw": "'unstyle'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2e4727"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        },
                                                                                        "generator": false,
                                                                                        "expression": true,
                                                                                        "async": false
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "kind": "let"
                                                                        },
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                                {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1dbd3b"
                                                                                    },
                                                                                    "init": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "input"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "split",
                                                                                                "raw": "'split'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": {},
                                                                                                "raw": "/\\r?\\n/",
                                                                                                "regex": {
                                                                                                    "pattern": "\\r?\\n",
                                                                                                    "flags": ""
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "kind": "let"
                                                                        },
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                                {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3ea277"
                                                                                    },
                                                                                    "init": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "kind": "let"
                                                                        },
                                                                        {
                                                                            "type": "ForOfStatement",
                                                                            "left": {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x411efb"
                                                                                        },
                                                                                        "init": null
                                                                                    }
                                                                                ],
                                                                                "kind": "let"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1dbd3b"
                                                                            },
                                                                            "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "+=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x3ea277"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 1,
                                                                                                    "raw": "0x1"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "Math"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "floor",
                                                                                                            "raw": "'floor'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "/",
                                                                                                            "left": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "Math"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "max",
                                                                                                                        "raw": "'max'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "BinaryExpression",
                                                                                                                        "operator": "-",
                                                                                                                        "left": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x2e982c"
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x411efb"
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 1,
                                                                                                                            "raw": "0x1"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 0,
                                                                                                                        "raw": "0x0"
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "columns"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1ad5e2"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "EnrAZ",
                                                                                            "raw": "'EnrAZ'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "erase"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "line",
                                                                                                            "raw": "'line'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "cursor"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "prevLine",
                                                                                                                "raw": "'prevLine'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": []
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "repeat",
                                                                                                    "raw": "'repeat'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "-",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x3ea277"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 1,
                                                                                                        "raw": "0x1"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "erase"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "line",
                                                                                                "raw": "'line'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "cursor"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "to",
                                                                                            "raw": "'to'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                                {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xfcf73"
                                                                                    },
                                                                                    "init": {
                                                                                        "type": "ConditionalExpression",
                                                                                        "test": {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "&&",
                                                                                            "left": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "input"
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "initial"
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                },
                                                                                                "prefix": true
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "-",
                                                                                            "argument": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "initial"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "length",
                                                                                                    "raw": "'length'"
                                                                                                }
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "alternate": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "-",
                                                                                                "argument": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "input"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "length",
                                                                                                        "raw": "'length'"
                                                                                                    }
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "cursor"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "kind": "let"
                                                                        },
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "Identifier",
                                                                                "name": "after"
                                                                            },
                                                                            "consequent": {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "-=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xfcf73"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "after"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "length",
                                                                                            "raw": "'length'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "alternate": null
                                                                        },
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "&&",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "input"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "",
                                                                                            "raw": "''"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "initial"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "prompt"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "includes",
                                                                                                "raw": "'includes'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "initial"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "+=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xfcf73"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "initial"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "length",
                                                                                                    "raw": "'length'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": null
                                                                        },
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "ansi"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "cursor",
                                                                                            "raw": "'cursor'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "move",
                                                                                        "raw": "'move'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xfcf73"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": null
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": true,
                                    "shorthand": false
                                }
                            ]
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "erase"
                    },
                    "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "ansi"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "erase",
                                "raw": "'erase'"
                            }
                        },
                        "right": {
                            "type": "ObjectExpression",
                            "properties": [
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "screen",
                                        "raw": "'screen'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "code"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "screen",
                                            "raw": "'screen'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "up",
                                        "raw": "'up'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "code"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "up",
                                            "raw": "'up'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "down",
                                        "raw": "'down'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "code"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "down",
                                            "raw": "'down'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "line",
                                        "raw": "'line'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "code"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "line",
                                            "raw": "'line'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "lineEnd",
                                        "raw": "'lineEnd'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "code"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "lineEnd",
                                            "raw": "'lineEnd'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "lineStart",
                                        "raw": "'lineStart'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "code"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "lineStart",
                                            "raw": "'lineStart'"
                                        }
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "lines",
                                        "raw": "'lines'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x3b5e71"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x6fb72a"
                                                            },
                                                            "init": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ForStatement",
                                                    "init": {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2e5caa"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x2e5caa"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_0x3b5e71"
                                                        }
                                                    },
                                                    "update": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x2e5caa"
                                                        },
                                                        "prefix": false
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x6fb72a"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "ansi"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "erase",
                                                                                    "raw": "'erase'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "line",
                                                                                "raw": "'line'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "ConditionalExpression",
                                                                            "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "<",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x2e5caa"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3b5e71"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "0x1"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "ansi"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "cursor",
                                                                                            "raw": "'cursor'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "up",
                                                                                        "raw": "'up'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "0x1"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": {
                                                                                "type": "Literal",
                                                                                "value": "",
                                                                                "raw": "''"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "Identifier",
                                                        "name": "_0x3b5e71"
                                                    },
                                                    "consequent": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x6fb72a"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "ansi"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "code",
                                                                        "raw": "'code'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "beginning",
                                                                    "raw": "'beginning'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x6fb72a"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": true,
                                    "shorthand": false
                                }
                            ]
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "ansi"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "clear",
                        "raw": "'clear'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x30e35c"
                            },
                            "right": {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        },
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x553513"
                            },
                            "right": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "process"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "stdout",
                                        "raw": "'stdout'"
                                    }
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "columns",
                                    "raw": "'columns'"
                                }
                            }
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x553513"
                                    },
                                    "prefix": true
                                },
                                "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "erase"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "line",
                                                "raw": "'line'"
                                            }
                                        },
                                        "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "cursor"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "to",
                                                    "raw": "'to'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0x0"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x236c85"
                                        },
                                        "init": {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3f4cfb"
                                                }
                                            ],
                                            "body": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "SpreadElement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "colors"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "unstyle",
                                                                        "raw": "'unstyle'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3f4cfb"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "length",
                                                    "raw": "'length'"
                                                }
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x5eda6a"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x30e35c"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "split",
                                                    "raw": "'split'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": {},
                                                    "raw": "/\\r?\\n/",
                                                    "regex": {
                                                        "pattern": "\\r?\\n",
                                                        "flags": ""
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x5434d6"
                                        },
                                        "init": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ForOfStatement",
                                "left": {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x5ef741"
                                            },
                                            "init": null
                                        }
                                    ],
                                    "kind": "let"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0x5eda6a"
                                },
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x5434d6"
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "0x1"
                                                    },
                                                    "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Math"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "floor",
                                                                "raw": "'floor'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Math"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "max",
                                                                            "raw": "'max'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x236c85"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x5ef741"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "0x1"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x553513"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x3b9c6f"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "Hkxxs",
                                                            "raw": "'Hkxxs'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "erase"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "line",
                                                                "raw": "'line'"
                                                            }
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "cursor"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "prevLine",
                                                                    "raw": "'prevLine'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    ]
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "repeat",
                                                    "raw": "'repeat'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x5434d6"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "0x1"
                                                    }
                                                }
                                            ]
                                        },
                                        "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "erase"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "line",
                                                "raw": "'line'"
                                            }
                                        }
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "cursor"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "to",
                                                "raw": "'to'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        }
    ],
    "sourceType": "script"
}