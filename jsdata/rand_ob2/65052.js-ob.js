var _0x71c5 = [
    '47aOfWkm',
    '2974YAjIdj',
    '317089aAJlie',
    '1JIbEPt',
    'Debug',
    'DebugEvent',
    'Break',
    'frame',
    'evaluate',
    'a\x20=\x204',
    'value',
    'set_a_to_5()',
    'b\x20=\x205',
    'next',
    '18kiGkDu',
    '12387bylYhd',
    '93BjvwTk',
    '2620bKtFgd',
    '64353eLKNqa',
    '322734minEIf',
    '286uIxUsH',
    '1072HFZBvJ'
];
function _0x516f(_0x1c23ff, _0x3a6ad2) {
    return _0x516f = function (_0x71c5ae, _0x516f64) {
        _0x71c5ae = _0x71c5ae - 0xf3;
        var _0x377769 = _0x71c5[_0x71c5ae];
        return _0x377769;
    }, _0x516f(_0x1c23ff, _0x3a6ad2);
}
var _0x150a5b = _0x516f;
(function (_0x857c4e, _0x5c65c3) {
    var _0x4f431a = _0x516f;
    while (!![]) {
        try {
            var _0xe6308e = -parseInt(_0x4f431a(0xf3)) * -parseInt(_0x4f431a(0xf4)) + -parseInt(_0x4f431a(0xf5)) * parseInt(_0x4f431a(0xf6)) + parseInt(_0x4f431a(0xf7)) + parseInt(_0x4f431a(0xf8)) + parseInt(_0x4f431a(0xf9)) * parseInt(_0x4f431a(0xfa)) + parseInt(_0x4f431a(0xfb)) * -parseInt(_0x4f431a(0xfc)) + -parseInt(_0x4f431a(0xfd)) * parseInt(_0x4f431a(0xfe));
            if (_0xe6308e === _0x5c65c3)
                break;
            else
                _0x857c4e['push'](_0x857c4e['shift']());
        } catch (_0x2b4b63) {
            _0x857c4e['push'](_0x857c4e['shift']());
        }
    }
}(_0x71c5, 0x34c36), Debug = debug[_0x150a5b(0xff)]);
var debug_step = 0x0, failure = null;
function listener(_0x3e9fd7, _0x2207a0, _0x46942e, _0x4ba52e) {
    var _0x4fd6dd = _0x150a5b;
    if (_0x3e9fd7 != Debug[_0x4fd6dd(0x100)][_0x4fd6dd(0x101)])
        return;
    try {
        debug_step == 0x0 ? (assertEquals(0x1, _0x2207a0[_0x4fd6dd(0x102)](0x0)['evaluate']('a')['value']()), assertEquals(0x3, _0x2207a0[_0x4fd6dd(0x102)](0x0)[_0x4fd6dd(0x103)]('b')['value']()), _0x2207a0[_0x4fd6dd(0x102)](0x0)[_0x4fd6dd(0x103)](_0x4fd6dd(0x104))[_0x4fd6dd(0x105)](), debug_step++) : (assertEquals(0x4, _0x2207a0[_0x4fd6dd(0x102)](0x0)['evaluate']('a')[_0x4fd6dd(0x105)]()), assertEquals(0x3, _0x2207a0[_0x4fd6dd(0x102)](0x0)[_0x4fd6dd(0x103)]('b')[_0x4fd6dd(0x105)]()), _0x2207a0[_0x4fd6dd(0x102)](0x0)[_0x4fd6dd(0x103)](_0x4fd6dd(0x106)), _0x2207a0['frame'](0x0)[_0x4fd6dd(0x103)](_0x4fd6dd(0x107))['value']());
    } catch (_0x4d42c9) {
        failure = _0x4d42c9;
    }
}
Debug['setListener'](listener);
function* generator(_0x2af6f6, _0x3a6530) {
    function _0x508d86() {
        _0x2af6f6 = 0x5;
    }
    _0x508d86;
    var _0x3a6530 = 0x3;
    debugger;
    yield _0x2af6f6, yield _0x3a6530;
    debugger;
    return yield _0x2af6f6, _0x3a6530;
}
var foo = generator(0x1, 0x2);
assertEquals(0x4, foo['next']()[_0x150a5b(0x105)]), assertEquals(0x3, foo[_0x150a5b(0x108)]()[_0x150a5b(0x105)]), assertEquals(0x5, foo[_0x150a5b(0x108)]()[_0x150a5b(0x105)]), assertEquals(0x5, foo['next']()[_0x150a5b(0x105)]), assertNull(failure), Debug['setListener'](null);
