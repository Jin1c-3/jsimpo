'use strict';
const _0x34de = [
    '.policy',
    'Generating\x20.deb\x20file\x20from\x20',
    'fakeroot',
    'dpkg-deb',
    'inherit',
    'Copying\x20generated\x20package\x20into\x20\x22',
    '1148hPuONW',
    '389dTTJwq',
    '516190mdtUqI',
    '950835XNCvEt',
    '302717mFHyCU',
    '101wWwUuF',
    '146KYtpYK',
    '522471DpWWzG',
    '4929OcFoXM',
    '258abFSdJ',
    'fs-extra',
    'path',
    './spawn-sync',
    'lodash.template',
    'exports',
    'Creating\x20Debian\x20package\x20for\x20\x22',
    'channel',
    'atom',
    'atom-',
    'stable',
    'apm',
    'appMetadata',
    'description',
    'version',
    'ia32',
    'i386',
    'arch',
    'x64',
    'amd64',
    'powerpc',
    'join',
    'buildOutputPath',
    'tmpdir',
    'basename',
    'usr',
    'bin',
    'share',
    'applications',
    'pixmaps',
    'doc',
    'existsSync',
    'log',
    'removeSync',
    '.deb',
    'Deleting\x20existing\x20Debian\x20package\x20at\x20\x22',
    '.deb\x22',
    'Creating\x20Debian\x20package\x20directory\x20structure\x20at\x20\x22',
    'mkdirpSync',
    'Copying\x20\x22',
    'copySync',
    'chmodSync',
    'Copying\x20binaries\x20into\x20\x22',
    'repositoryRootPath',
    'resources',
    'node_modules',
    'chrome-sandbox',
    'Writing\x20control\x20file\x20into\x20\x22',
    '-sk',
    'stdout',
    'toString',
    'split',
    'readFileSync',
    'linux',
    'debian',
    'writeFileSync',
    'Writing\x20desktop\x20entry\x20file\x20into\x20\x22',
    'appName',
    '/usr',
    '.desktop',
    'Copying\x20icon\x20into\x20\x22',
    'app.asar.unpacked',
    'atom.png',
    'Copying\x20license\x20into\x20\x22',
    'LICENSE.md',
    'Copying\x20polkit\x20configuration\x20into\x20\x22',
    'polkit-1',
    'actions'
];
const _0x43ca64 = _0x4fef;
(function (_0x3c284a, _0x1eedba) {
    const _0x2f5287 = _0x4fef;
    while (!![]) {
        try {
            const _0x42ade2 = parseInt(_0x2f5287(0x1c7)) * -parseInt(_0x2f5287(0x1c8)) + parseInt(_0x2f5287(0x1c9)) + parseInt(_0x2f5287(0x1ca)) + parseInt(_0x2f5287(0x1cb)) + parseInt(_0x2f5287(0x1cc)) * parseInt(_0x2f5287(0x1cd)) + parseInt(_0x2f5287(0x1ce)) + -parseInt(_0x2f5287(0x1cf)) * parseInt(_0x2f5287(0x1d0));
            if (_0x42ade2 === _0x1eedba)
                break;
            else
                _0x3c284a['push'](_0x3c284a['shift']());
        } catch (_0x13f6f9) {
            _0x3c284a['push'](_0x3c284a['shift']());
        }
    }
}(_0x34de, 0x8fba1));
const fs = require(_0x43ca64(0x1d1)), os = require('os'), path = require(_0x43ca64(0x1d2)), spawnSync = require(_0x43ca64(0x1d3)), template = require(_0x43ca64(0x1d4)), CONFIG = require('../config');
function _0x4fef(_0x25b433, _0x237292) {
    return _0x4fef = function (_0x34de93, _0x4feffc) {
        _0x34de93 = _0x34de93 - 0x1c7;
        let _0x509305 = _0x34de[_0x34de93];
        return _0x509305;
    }, _0x4fef(_0x25b433, _0x237292);
}
module[_0x43ca64(0x1d5)] = function (_0xb02374) {
    const _0x146e3b = _0x43ca64;
    console['log'](_0x146e3b(0x1d6) + _0xb02374 + '\x22');
    const _0x1abce4 = CONFIG[_0x146e3b(0x1d7)] === 'stable' ? _0x146e3b(0x1d8) : _0x146e3b(0x1d9) + CONFIG[_0x146e3b(0x1d7)], _0xeaf276 = CONFIG[_0x146e3b(0x1d7)] === _0x146e3b(0x1da) ? _0x146e3b(0x1db) : 'apm-' + CONFIG[_0x146e3b(0x1d7)], _0x4e69fe = CONFIG[_0x146e3b(0x1dc)][_0x146e3b(0x1dd)], _0x2882b8 = CONFIG['appMetadata'][_0x146e3b(0x1de)];
    let _0x3f2371;
    if (process['arch'] === _0x146e3b(0x1df))
        _0x3f2371 = _0x146e3b(0x1e0);
    else {
        if (process[_0x146e3b(0x1e1)] === _0x146e3b(0x1e2))
            _0x3f2371 = _0x146e3b(0x1e3);
        else
            process['arch'] === 'ppc' ? _0x3f2371 = _0x146e3b(0x1e4) : _0x3f2371 = process[_0x146e3b(0x1e1)];
    }
    const _0x4e0220 = path[_0x146e3b(0x1e5)](CONFIG[_0x146e3b(0x1e6)], _0x146e3b(0x1d9) + _0x3f2371 + '.deb'), _0x51c6c2 = path['join'](os[_0x146e3b(0x1e7)](), path[_0x146e3b(0x1e8)](_0xb02374)), _0x2e6c32 = path[_0x146e3b(0x1e5)](_0x51c6c2, 'DEBIAN'), _0x441cf3 = path[_0x146e3b(0x1e5)](_0x51c6c2, _0x146e3b(0x1e9)), _0x1a7d8d = path[_0x146e3b(0x1e5)](_0x441cf3, _0x146e3b(0x1ea)), _0x112440 = path[_0x146e3b(0x1e5)](_0x441cf3, _0x146e3b(0x1eb)), _0x12e406 = path[_0x146e3b(0x1e5)](_0x112440, _0x1abce4), _0x3881e2 = path[_0x146e3b(0x1e5)](_0x112440, _0x146e3b(0x1ec)), _0x48ffa2 = path[_0x146e3b(0x1e5)](_0x112440, _0x146e3b(0x1ed)), _0x1a262f = path[_0x146e3b(0x1e5)](_0x112440, _0x146e3b(0x1ee), _0x1abce4);
    fs[_0x146e3b(0x1ef)](_0x51c6c2) && (console[_0x146e3b(0x1f0)]('Deleting\x20existing\x20build\x20dir\x20for\x20Debian\x20package\x20at\x20\x22' + _0x51c6c2 + '\x22'), fs[_0x146e3b(0x1f1)](_0x51c6c2));
    fs['existsSync'](_0x51c6c2 + _0x146e3b(0x1f2)) && (console[_0x146e3b(0x1f0)](_0x146e3b(0x1f3) + _0x51c6c2 + _0x146e3b(0x1f4)), fs[_0x146e3b(0x1f1)](_0x51c6c2 + '.deb'));
    fs[_0x146e3b(0x1ef)](_0x51c6c2) && (console[_0x146e3b(0x1f0)](_0x146e3b(0x1f3) + _0x4e0220 + '\x22'), fs[_0x146e3b(0x1f1)](_0x51c6c2));
    console[_0x146e3b(0x1f0)](_0x146e3b(0x1f5) + _0x51c6c2 + '\x22'), fs[_0x146e3b(0x1f6)](_0x51c6c2), fs[_0x146e3b(0x1f6)](_0x2e6c32), fs[_0x146e3b(0x1f6)](_0x441cf3), fs[_0x146e3b(0x1f6)](_0x112440), fs['mkdirpSync'](_0x3881e2), fs[_0x146e3b(0x1f6)](_0x48ffa2), fs[_0x146e3b(0x1f6)](_0x1a262f), fs[_0x146e3b(0x1f6)](_0x1a7d8d), console[_0x146e3b(0x1f0)](_0x146e3b(0x1f7) + _0xb02374 + '\x22\x20to\x20\x22' + _0x12e406 + '\x22'), fs[_0x146e3b(0x1f8)](_0xb02374, _0x12e406), fs[_0x146e3b(0x1f9)](_0x12e406, '755'), console['log'](_0x146e3b(0x1fa) + _0x1a7d8d + '\x22'), fs[_0x146e3b(0x1f8)](path['join'](CONFIG[_0x146e3b(0x1fb)], 'atom.sh'), path['join'](_0x1a7d8d, _0x1abce4)), fs['symlinkSync'](path['join']('..', 'share', _0x1abce4, _0x146e3b(0x1fc), 'app', _0x146e3b(0x1db), _0x146e3b(0x1fd), '.bin', _0x146e3b(0x1db)), path[_0x146e3b(0x1e5)](_0x1a7d8d, _0xeaf276)), fs['chmodSync'](path[_0x146e3b(0x1e5)](_0x12e406, _0x146e3b(0x1fe)), '4755'), console['log'](_0x146e3b(0x1ff) + _0x2e6c32 + '\x22');
    const _0xebda81 = spawnSync('du', [
            _0x146e3b(0x200),
            _0xb02374
        ])[_0x146e3b(0x201)][_0x146e3b(0x202)]()[_0x146e3b(0x203)](/\s+/)[0x0], _0x4b929d = fs[_0x146e3b(0x204)](path[_0x146e3b(0x1e5)](CONFIG[_0x146e3b(0x1fb)], 'resources', _0x146e3b(0x205), _0x146e3b(0x206), 'control.in')), _0x37ffb0 = template(_0x4b929d)({
            'appFileName': _0x1abce4,
            'version': _0x2882b8,
            'arch': _0x3f2371,
            'installedSize': _0xebda81,
            'description': _0x4e69fe
        });
    fs[_0x146e3b(0x207)](path['join'](_0x2e6c32, 'control'), _0x37ffb0), console[_0x146e3b(0x1f0)](_0x146e3b(0x208) + _0x3881e2 + '\x22');
    const _0x50ef5b = fs[_0x146e3b(0x204)](path[_0x146e3b(0x1e5)](CONFIG['repositoryRootPath'], _0x146e3b(0x1fc), _0x146e3b(0x205), 'atom.desktop.in')), _0x2f7e32 = template(_0x50ef5b)({
            'appName': CONFIG[_0x146e3b(0x209)],
            'appFileName': _0x1abce4,
            'description': _0x4e69fe,
            'installDir': _0x146e3b(0x20a),
            'iconPath': _0x1abce4
        });
    fs[_0x146e3b(0x207)](path['join'](_0x3881e2, _0x1abce4 + _0x146e3b(0x20b)), _0x2f7e32), console[_0x146e3b(0x1f0)](_0x146e3b(0x20c) + _0x48ffa2 + '\x22'), fs[_0x146e3b(0x1f8)](path[_0x146e3b(0x1e5)](_0xb02374, _0x146e3b(0x1fc), _0x146e3b(0x20d), _0x146e3b(0x1fc), _0x146e3b(0x20e)), path[_0x146e3b(0x1e5)](_0x48ffa2, _0x1abce4 + '.png')), console[_0x146e3b(0x1f0)](_0x146e3b(0x20f) + _0x1a262f + '\x22'), fs[_0x146e3b(0x1f8)](path['join'](_0xb02374, _0x146e3b(0x1fc), _0x146e3b(0x210)), path[_0x146e3b(0x1e5)](_0x1a262f, 'copyright')), console['log'](_0x146e3b(0x211) + _0x112440 + '\x22'), fs[_0x146e3b(0x1f8)](path[_0x146e3b(0x1e5)](CONFIG[_0x146e3b(0x1fb)], _0x146e3b(0x1fc), _0x146e3b(0x205), 'atom.policy'), path[_0x146e3b(0x1e5)](_0x112440, _0x146e3b(0x212), _0x146e3b(0x213), 'atom-' + CONFIG[_0x146e3b(0x1d7)] + _0x146e3b(0x214))), console[_0x146e3b(0x1f0)](_0x146e3b(0x215) + _0x51c6c2), spawnSync(_0x146e3b(0x216), [
        _0x146e3b(0x217),
        '-b',
        _0x51c6c2
    ], { 'stdio': _0x146e3b(0x218) }), console['log'](_0x146e3b(0x219) + _0x4e0220 + '\x22'), fs[_0x146e3b(0x1f8)](_0x51c6c2 + _0x146e3b(0x1f2), _0x4e0220);
};
