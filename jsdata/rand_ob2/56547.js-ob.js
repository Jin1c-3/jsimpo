'use strict';
const _0x37db = [
    'strictEqual',
    'Type\x20\x27',
    '\x27:\x20expecting:\x20',
    'inspect',
    'printGraph',
    'replace',
    'toLowerCase',
    '936597edMKDx',
    '1HAnWzJ',
    '347679YpwVxt',
    '27QgUaCz',
    '4699QLaZMd',
    '496832yWlhrk',
    '799760ZiDNyp',
    '1GiFAUX',
    '540045xFlXiF',
    '451412yWPEPu',
    '1hvduTN',
    '../common',
    'assert',
    'util',
    'length',
    'isArray',
    'found',
    'type',
    'index',
    'data',
    'uid',
    'triggerAsyncId',
    'old',
    'new',
    'splice',
    'exports',
    'activities',
    'forEach',
    'push',
    'error',
    '\x27\x20expected\x20to\x20be\x20triggered\x20by\x20\x27',
    'expectedTid',
    'but\x20was\x20triggered\x20by\x20\x27',
    '\x27\x20instead.'
];
const _0x5e4efe = _0x5d37;
(function (_0x3c0986, _0xfe6e93) {
    const _0x468211 = _0x5d37;
    while (!![]) {
        try {
            const _0x1a6e2a = -parseInt(_0x468211(0x6c)) * -parseInt(_0x468211(0x6d)) + parseInt(_0x468211(0x6e)) + -parseInt(_0x468211(0x6f)) * parseInt(_0x468211(0x70)) + -parseInt(_0x468211(0x71)) + -parseInt(_0x468211(0x72)) * -parseInt(_0x468211(0x73)) + -parseInt(_0x468211(0x74)) + -parseInt(_0x468211(0x75)) * parseInt(_0x468211(0x76));
            if (_0x1a6e2a === _0xfe6e93)
                break;
            else
                _0x3c0986['push'](_0x3c0986['shift']());
        } catch (_0x220470) {
            _0x3c0986['push'](_0x3c0986['shift']());
        }
    }
}(_0x37db, 0x7278a));
require(_0x5e4efe(0x77));
const assert = require(_0x5e4efe(0x78)), util = require(_0x5e4efe(0x79));
function findInGraph(_0xefdbc, _0x9c7492, _0x5cbf5a) {
    const _0x403e2c = _0x5e4efe;
    let _0x9b7f62 = 0x0;
    for (let _0x477695 = 0x0; _0x477695 < _0xefdbc[_0x403e2c(0x7a)]; _0x477695++) {
        const _0x4b784a = _0xefdbc[_0x477695];
        if (_0x4b784a['type'] === _0x9c7492)
            _0x9b7f62++;
        if (_0x9b7f62 === _0x5cbf5a)
            return _0x4b784a;
    }
}
function _0x5d37(_0xf00bd0, _0x4d6d3d) {
    return _0x5d37 = function (_0x37db06, _0x5d3715) {
        _0x37db06 = _0x37db06 - 0x6c;
        let _0x3cfe43 = _0x37db[_0x37db06];
        return _0x3cfe43;
    }, _0x5d37(_0xf00bd0, _0x4d6d3d);
}
function pruneTickObjects(_0x300cbd) {
    const _0x545f64 = _0x5e4efe, _0x228ad3 = {
            'found': !![],
            'index': null,
            'data': null
        };
    if (!Array[_0x545f64(0x7b)](_0x300cbd))
        return _0x300cbd;
    while (_0x228ad3[_0x545f64(0x7c)]) {
        for (let _0x2a76c1 = 0x0; _0x2a76c1 < _0x300cbd[_0x545f64(0x7a)]; _0x2a76c1++) {
            if (_0x300cbd[_0x2a76c1][_0x545f64(0x7d)] === 'TickObject') {
                _0x228ad3[_0x545f64(0x7e)] = _0x2a76c1;
                break;
            } else
                _0x2a76c1 + 0x1 >= _0x300cbd[_0x545f64(0x7a)] && (_0x228ad3[_0x545f64(0x7c)] = ![]);
        }
        if (_0x228ad3['found']) {
            _0x228ad3['data'] = _0x300cbd[_0x228ad3[_0x545f64(0x7e)]];
            const _0x4b83ca = {
                'new': _0x228ad3[_0x545f64(0x7f)]['triggerAsyncId'],
                'old': _0x228ad3[_0x545f64(0x7f)][_0x545f64(0x80)]
            };
            _0x300cbd['forEach'](function _0xc8231d(_0x1b2e70) {
                const _0x5ea653 = _0x545f64;
                if (_0x1b2e70[_0x5ea653(0x81)] === _0x4b83ca[_0x5ea653(0x82)])
                    _0x1b2e70[_0x5ea653(0x81)] = _0x4b83ca[_0x5ea653(0x83)];
            }), _0x300cbd[_0x545f64(0x84)](_0x228ad3[_0x545f64(0x7e)], 0x1);
        }
    }
    return _0x300cbd;
}
module[_0x5e4efe(0x85)] = function verifyGraph(_0x1d8ad2, _0x26edc9) {
    const _0x125216 = _0x5e4efe;
    pruneTickObjects(_0x1d8ad2);
    const _0x3e5028 = {}, _0x1840b6 = {}, _0x20ce6f = {}, _0x3d276a = [], _0x361eb2 = pruneTickObjects(_0x1d8ad2[_0x125216(0x86)]);
    _0x361eb2[_0x125216(0x87)](_0x473389);
    function _0x473389(_0x34e851) {
        const _0x2e4bb5 = _0x125216;
        if (!_0x20ce6f[_0x34e851[_0x2e4bb5(0x7d)]])
            _0x20ce6f[_0x34e851[_0x2e4bb5(0x7d)]] = 0x0;
        _0x20ce6f[_0x34e851[_0x2e4bb5(0x7d)]]++;
        const _0x446d4d = findInGraph(_0x26edc9, _0x34e851['type'], _0x20ce6f[_0x34e851[_0x2e4bb5(0x7d)]]);
        if (_0x446d4d == null)
            return;
        _0x3e5028[_0x446d4d['id']] = _0x34e851['uid'], _0x1840b6[_0x34e851[_0x2e4bb5(0x80)]] = _0x446d4d['id'];
        if (_0x446d4d[_0x2e4bb5(0x81)] == null)
            return;
        const _0x269e58 = _0x3e5028[_0x446d4d[_0x2e4bb5(0x81)]];
        if (_0x34e851[_0x2e4bb5(0x81)] === _0x269e58)
            return;
        _0x3d276a[_0x2e4bb5(0x88)]({
            'id': _0x446d4d['id'],
            'expectedTid': _0x446d4d[_0x2e4bb5(0x81)],
            'actualTid': _0x1840b6[_0x34e851[_0x2e4bb5(0x81)]]
        });
    }
    _0x3d276a[_0x125216(0x7a)] && _0x3d276a[_0x125216(0x87)](_0x48592a => console[_0x125216(0x89)]('\x27' + _0x48592a['id'] + _0x125216(0x8a) + _0x48592a[_0x125216(0x8b)] + '\x27,\x20' + (_0x125216(0x8c) + _0x48592a['actualTid'] + _0x125216(0x8d))));
    assert[_0x125216(0x8e)](_0x3d276a[_0x125216(0x7a)], 0x0);
    const _0x24ac8b = Object['create'](null);
    for (let _0x4eec20 = 0x0; _0x4eec20 < _0x26edc9[_0x125216(0x7a)]; _0x4eec20++) {
        if (_0x24ac8b[_0x26edc9[_0x4eec20]['type']] == null)
            _0x24ac8b[_0x26edc9[_0x4eec20][_0x125216(0x7d)]] = 0x0;
        _0x24ac8b[_0x26edc9[_0x4eec20][_0x125216(0x7d)]]++;
    }
    for (const _0x471493 in _0x24ac8b) {
        assert['ok'](_0x20ce6f[_0x471493] >= _0x24ac8b[_0x471493], _0x125216(0x8f) + _0x471493 + _0x125216(0x90) + _0x24ac8b[_0x471493] + '\x20' + ('found:\x20' + _0x20ce6f[_0x471493]));
    }
};
function inspect(_0x37cd1f, _0x2e3fc3) {
    const _0x7e610c = _0x5e4efe;
    console[_0x7e610c(0x89)](util[_0x7e610c(0x91)](_0x37cd1f, ![], _0x2e3fc3 || 0x5, !![]));
}
module[_0x5e4efe(0x85)][_0x5e4efe(0x92)] = function printGraph(_0x19aed3) {
    const _0x487468 = _0x5e4efe, _0x5c5405 = {}, _0x8cc29e = {}, _0x1e0e69 = pruneTickObjects(_0x19aed3[_0x487468(0x86)]), _0x57d051 = [];
    _0x1e0e69['forEach'](_0x2c0a73);
    function _0x2c0a73(_0x2b5b62) {
        const _0x45e578 = _0x487468, _0xff0334 = _0x2b5b62[_0x45e578(0x7d)][_0x45e578(0x93)](/WRAP/, '')[_0x45e578(0x94)]();
        if (!_0x5c5405[_0xff0334])
            _0x5c5405[_0xff0334] = 0x1;
        const _0x47d1b5 = _0xff0334 + ':' + _0x5c5405[_0xff0334]++;
        _0x8cc29e[_0x2b5b62['uid']] = _0x47d1b5;
        const _0x3cb006 = _0x8cc29e[_0x2b5b62[_0x45e578(0x81)]] || null;
        _0x57d051[_0x45e578(0x88)]({
            'type': _0x2b5b62['type'],
            'id': _0x47d1b5,
            'triggerAsyncId': _0x3cb006
        });
    }
    inspect(_0x57d051);
};
