const _0x4a8f = [
    'length',
    'getIdentifier',
    'Invalid\x20token\x20in\x20FormCalc\x20expression\x20at\x20position\x20',
    'getString',
    'charCodeAt',
    'ffgVT',
    'substring',
    'push',
    'mRzIa',
    'fromCharCode',
    'agePl',
    'MFPoy',
    'glzdn',
    'usNAM',
    'join',
    'getNumber',
    'ygRVL',
    'UmUGj',
    'mTzOO',
    'getCompOperator',
    'GxhLd',
    'getLower',
    'sFEbk',
    'getSlash',
    'rNJwU',
    'skipUntilEOL',
    'getDot',
    'iSIYJ',
    'dotDot',
    'sxNfy',
    'DDzjW',
    'kyCXp',
    'VkBJY',
    'ouuzL',
    'dot',
    'leftParen',
    'rightParen',
    'times',
    'plus',
    'comma',
    'minus',
    'divide',
    'assign',
    'leftBracket',
    'rightBracket',
    '126998ySDuTe',
    '4IOfYnY',
    '90zXGfIX',
    '4077BMIbEq',
    '19643WWDGlf',
    '5701LKwAEB',
    '25ktUoYx',
    '195348CiVKjG',
    '547911QYKJaq',
    '1077142ImQzDu',
    'and',
    'break',
    'continue',
    'elseif',
    'end',
    'endfunc',
    'endif',
    'endwhile',
    'exit',
    'foreach',
    'nan',
    'not',
    'return',
    'step',
    'then',
    'this',
    'throw',
    'upto',
    'var',
    'while',
    'string',
    'infinity',
    'create',
    'ycLau',
    'hOnCk',
    'number',
    'FWVYC',
    'entries',
    'has',
    'data',
    'pos',
    'len',
    'strBuf',
    'slice',
    'match',
    'index'
];
function _0x2214(_0x44e29e, _0x66e2f5) {
    return _0x2214 = function (_0x2531b0, _0x422e3c) {
        _0x2531b0 = _0x2531b0 - (-0x1 * -0x25b1 + -0x1fb5 * -0x1 + -0x4458);
        let _0x5d477e = _0x4a8f[_0x2531b0];
        return _0x5d477e;
    }, _0x2214(_0x44e29e, _0x66e2f5);
}
const _0x311c0d = _0x2214;
(function (_0x226c91, _0x2a04a1) {
    const _0x49a927 = _0x2214;
    while (!![]) {
        try {
            const _0xdfcd3 = -parseInt(_0x49a927(0x10e)) * -parseInt(_0x49a927(0x10f)) + -parseInt(_0x49a927(0x110)) * -parseInt(_0x49a927(0x111)) + parseInt(_0x49a927(0x112)) + -parseInt(_0x49a927(0x113)) * parseInt(_0x49a927(0x114)) + parseInt(_0x49a927(0x115)) + parseInt(_0x49a927(0x116)) + -parseInt(_0x49a927(0x117));
            if (_0xdfcd3 === _0x2a04a1)
                break;
            else
                _0x226c91['push'](_0x226c91['shift']());
        } catch (_0x290a8f) {
            _0x226c91['push'](_0x226c91['shift']());
        }
    }
}(_0x4a8f, -0x8344f + 0x4de3 * -0x1 + 0xee39f));
const KEYWORDS = new Set([
        _0x311c0d(0x118),
        _0x311c0d(0x119),
        _0x311c0d(0x11a),
        'do',
        'downto',
        'else',
        _0x311c0d(0x11b),
        _0x311c0d(0x11c),
        'endfor',
        _0x311c0d(0x11d),
        _0x311c0d(0x11e),
        _0x311c0d(0x11f),
        'eq',
        _0x311c0d(0x120),
        'for',
        _0x311c0d(0x121),
        'func',
        'ge',
        'gt',
        'if',
        'in',
        'infinity',
        'le',
        'lt',
        _0x311c0d(0x122),
        'ne',
        _0x311c0d(0x123),
        'null',
        'or',
        _0x311c0d(0x124),
        _0x311c0d(0x125),
        _0x311c0d(0x126),
        _0x311c0d(0x127),
        _0x311c0d(0x128),
        _0x311c0d(0x129),
        _0x311c0d(0x12a),
        _0x311c0d(0x12b)
    ]), TOKEN = {
        'and': 0x0,
        'divide': 0x1,
        'dot': 0x2,
        'dotDot': 0x3,
        'dotHash': 0x4,
        'dotStar': 0x5,
        'eq': 0x6,
        'ge': 0x7,
        'gt': 0x8,
        'le': 0x9,
        'leftBracket': 0xa,
        'leftParen': 0xb,
        'lt': 0xc,
        'minus': 0xd,
        'ne': 0xe,
        'not': 0xf,
        'null': 0x10,
        'number': 0x11,
        'or': 0x12,
        'plus': 0x13,
        'rightBracket': 0x14,
        'rightParen': 0x15,
        'string': 0x16,
        'this': 0x17,
        'times': 0x18,
        'identifier': 0x19,
        'break': 0x1a,
        'continue': 0x1b,
        'do': 0x1c,
        'for': 0x1d,
        'foreach': 0x1e,
        'func': 0x1f,
        'if': 0x20,
        'var': 0x21,
        'while': 0x22,
        'assign': 0x23,
        'comma': 0x24,
        'downto': 0x25,
        'else': 0x26,
        'elseif': 0x27,
        'end': 0x28,
        'endif': 0x29,
        'endfor': 0x2a,
        'endfunc': 0x2b,
        'endwhile': 0x2c,
        'eof': 0x2d,
        'exit': 0x2e,
        'in': 0x2f,
        'infinity': 0x30,
        'nan': 0x31,
        'return': 0x32,
        'step': 0x33,
        'then': 0x34,
        'throw': 0x35,
        'upto': 0x36
    }, hexPattern = /^[uU]([0-9a-fA-F]{4,8})/, numberPattern = /^[0-9]*(?:\.[0-9]*)?(?:[Ee][+-]?[0-9]+)?/, dotNumberPattern = /^[0-9]*(?:[Ee][+-]?[0-9]+)?/, eolPattern = /[\r\n]+/, identifierPattern = new RegExp('^[\x5cp{L}_$!][\x5cp{L}\x5cp{N}_$]*', 'u');
class Token {
    constructor(_0xde33b9, _0x1b982b = null) {
        this['id'] = _0xde33b9, this['value'] = _0x1b982b;
    }
}
const Singletons = function () {
    const _0x306e3f = _0x311c0d, _0x285135 = {
            'ycLau': 'identifier',
            'hOnCk': _0x306e3f(0x12c),
            'FWVYC': _0x306e3f(0x12d)
        }, _0x58e819 = Object[_0x306e3f(0x12e)](null), _0x19a1f0 = new Set([
            _0x285135[_0x306e3f(0x12f)],
            _0x285135[_0x306e3f(0x130)],
            _0x306e3f(0x131),
            _0x306e3f(0x122),
            _0x285135[_0x306e3f(0x132)]
        ]);
    for (const [_0xba7464, _0x52bfcc] of Object[_0x306e3f(0x133)](TOKEN)) {
        !_0x19a1f0[_0x306e3f(0x134)](_0xba7464) && (_0x58e819[_0xba7464] = new Token(_0x52bfcc));
    }
    return _0x58e819[_0x306e3f(0x122)] = new Token(TOKEN[_0x306e3f(0x131)], NaN), _0x58e819['infinity'] = new Token(TOKEN[_0x306e3f(0x131)], Infinity), _0x58e819;
}();
class Lexer {
    constructor(_0x55010d) {
        const _0x157bf4 = _0x311c0d;
        this[_0x157bf4(0x135)] = _0x55010d, this[_0x157bf4(0x136)] = 0x18 * -0x1a + 0x1f17 + -0x1ca7, this[_0x157bf4(0x137)] = _0x55010d['length'], this[_0x157bf4(0x138)] = [];
    }
    ['skipUntilEOL']() {
        const _0x1fdcf1 = _0x311c0d, _0x2ab8ef = this[_0x1fdcf1(0x135)][_0x1fdcf1(0x139)](this[_0x1fdcf1(0x136)])[_0x1fdcf1(0x13a)](eolPattern);
        _0x2ab8ef ? this[_0x1fdcf1(0x136)] += _0x2ab8ef[_0x1fdcf1(0x13b)] + _0x2ab8ef[0xedb + 0x792 * -0x3 + 0x7db][_0x1fdcf1(0x13c)] : this['pos'] = this[_0x1fdcf1(0x137)];
    }
    [_0x311c0d(0x13d)]() {
        const _0x106814 = _0x311c0d;
        this[_0x106814(0x136)]--;
        const _0x1a57fe = this[_0x106814(0x135)]['slice'](this[_0x106814(0x136)])[_0x106814(0x13a)](identifierPattern);
        if (!_0x1a57fe)
            throw new Error(_0x106814(0x13e) + this['pos'] + '.');
        const _0x2a80b = this[_0x106814(0x135)][_0x106814(0x139)](this[_0x106814(0x136)], this[_0x106814(0x136)] + _0x1a57fe[-0x811 + -0x2e0 * 0x6 + 0x1951][_0x106814(0x13c)]);
        this[_0x106814(0x136)] += _0x1a57fe[0xa49 + -0x52f * -0x6 + -0x2963]['length'];
        const _0x46fef2 = _0x2a80b['toLowerCase']();
        if (!KEYWORDS[_0x106814(0x134)](_0x46fef2))
            return new Token(TOKEN['identifier'], _0x2a80b);
        return Singletons[_0x46fef2];
    }
    [_0x311c0d(0x13f)]() {
        const _0x1af71d = _0x311c0d, _0x5d2ca6 = {
                'FAhqA': function (_0x241c37, _0x5b108b) {
                    return _0x241c37 < _0x5b108b;
                },
                'ffgVT': function (_0x2acce3, _0x1d2666) {
                    return _0x2acce3 === _0x1d2666;
                },
                'mRzIa': function (_0x457ffe, _0x3212c7) {
                    return _0x457ffe - _0x3212c7;
                },
                'usNAM': function (_0x19f418, _0x2185e3) {
                    return _0x19f418 === _0x2185e3;
                },
                'agePl': function (_0x54f98e, _0xb64653) {
                    return _0x54f98e !== _0xb64653;
                },
                'MFPoy': function (_0x43758e, _0x5a9759, _0x497048) {
                    return _0x43758e(_0x5a9759, _0x497048);
                },
                'glzdn': function (_0x50d23e, _0x1b0ad1, _0x2bbf40) {
                    return _0x50d23e(_0x1b0ad1, _0x2bbf40);
                }
            }, _0x171d0f = this[_0x1af71d(0x138)], _0x31a966 = this[_0x1af71d(0x135)];
        let _0xca75fe = this[_0x1af71d(0x136)];
        while (_0x5d2ca6['FAhqA'](this['pos'], this[_0x1af71d(0x137)])) {
            const _0x260ab6 = _0x31a966[_0x1af71d(0x140)](this['pos']++);
            if (_0x260ab6 === 0x685 * 0x1 + -0x164 * 0x18 + 0x1afd) {
                if (_0x5d2ca6[_0x1af71d(0x141)](_0x31a966[_0x1af71d(0x140)](this['pos']), 0x12a + 0x1204 + 0x35 * -0x5c)) {
                    _0x171d0f['push'](_0x31a966[_0x1af71d(0x139)](_0xca75fe, this['pos']++)), _0xca75fe = this[_0x1af71d(0x136)];
                    continue;
                }
                break;
            }
            if (_0x5d2ca6[_0x1af71d(0x141)](_0x260ab6, 0x1 * 0x3a1 + -0x2243 + 0x2 * 0xf7f)) {
                const _0x198480 = _0x31a966[_0x1af71d(0x142)](this[_0x1af71d(0x136)], this[_0x1af71d(0x136)] + (0x24eb + 0x194 + 0xb * -0x37f))[_0x1af71d(0x13a)](hexPattern);
                if (!_0x198480)
                    continue;
                _0x171d0f[_0x1af71d(0x143)](_0x31a966['slice'](_0xca75fe, _0x5d2ca6[_0x1af71d(0x144)](this['pos'], -0x1b46 * -0x1 + 0x66c + -0x21b1)));
                const _0x21d4f6 = _0x198480[-0x1637 + 0x4 * 0x284 + 0x2 * 0x614];
                if (_0x5d2ca6['usNAM'](_0x21d4f6[_0x1af71d(0x13c)], 0x160f * 0x1 + -0xce9 + -0x2 * 0x491))
                    _0x171d0f[_0x1af71d(0x143)](String[_0x1af71d(0x145)](parseInt(_0x21d4f6, -0x1aa * 0x8 + 0x342 + -0x2 * -0x50f))), _0xca75fe = this[_0x1af71d(0x136)] += 0x1e4f + -0x1 * 0x539 + 0x3 * -0x85b;
                else
                    _0x5d2ca6[_0x1af71d(0x146)](_0x21d4f6[_0x1af71d(0x13c)], 0x3dc + 0x1648 + -0x3 * 0x8b4) ? (_0x171d0f['push'](String[_0x1af71d(0x145)](_0x5d2ca6[_0x1af71d(0x147)](parseInt, _0x21d4f6['slice'](0x8c1 + -0x1 * 0xa2b + -0x16a * -0x1, 0x1a8c + -0x12b0 + -0x7d8 * 0x1), 0x7 * 0x1fa + 0x22eb + -0x30b1))), _0xca75fe = this[_0x1af71d(0x136)] += -0x1 * -0x2357 + -0x14b0 + -0xea2 * 0x1) : (_0x171d0f[_0x1af71d(0x143)](String['fromCharCode'](_0x5d2ca6[_0x1af71d(0x148)](parseInt, _0x21d4f6, 0x8e4 * 0x2 + 0x79f * 0x1 + -0x1957 * 0x1))), _0xca75fe = this[_0x1af71d(0x136)] += -0x2b4 + 0xbe0 + -0x923);
            }
        }
        const _0x3a4902 = _0x31a966[_0x1af71d(0x139)](_0xca75fe, this['pos'] - (-0x3 * 0x635 + -0x1 * 0xa21 + 0x1cc1));
        if (_0x5d2ca6[_0x1af71d(0x149)](_0x171d0f[_0x1af71d(0x13c)], 0x235a + 0xd50 + -0x30aa))
            return new Token(TOKEN[_0x1af71d(0x12c)], _0x3a4902);
        _0x171d0f[_0x1af71d(0x143)](_0x3a4902);
        const _0x3c4b8c = _0x171d0f[_0x1af71d(0x14a)]('');
        return _0x171d0f[_0x1af71d(0x13c)] = -0x2263 + -0x2 * 0xbb5 + 0x39cd, new Token(TOKEN['string'], _0x3c4b8c);
    }
    [_0x311c0d(0x14b)](_0x17dd3b) {
        const _0x2276b1 = _0x311c0d, _0x2cc7d1 = {
                'ygRVL': function (_0x41e68a, _0x9f2bea) {
                    return _0x41e68a - _0x9f2bea;
                },
                'UmUGj': function (_0x3defbb, _0x76eb3a) {
                    return _0x3defbb(_0x76eb3a);
                },
                'mTzOO': function (_0x46ceff, _0x5d8e04) {
                    return _0x46ceff + _0x5d8e04;
                }
            }, _0x414aa0 = this['data'][_0x2276b1(0x142)](this['pos'])[_0x2276b1(0x13a)](numberPattern);
        if (!_0x414aa0)
            return _0x2cc7d1[_0x2276b1(0x14c)](_0x17dd3b, 0x8e0 + -0x1313 + 0xa63);
        const _0x27f053 = _0x2cc7d1[_0x2276b1(0x14d)](parseFloat, this[_0x2276b1(0x135)][_0x2276b1(0x142)](_0x2cc7d1[_0x2276b1(0x14c)](this['pos'], 0x149b + -0xd4 * 0x9 + -0xd26), _0x2cc7d1[_0x2276b1(0x14e)](this[_0x2276b1(0x136)], _0x414aa0[0x61 * 0x5b + -0x709 * -0x5 + -0x18 * 0x2e7][_0x2276b1(0x13c)])));
        return this[_0x2276b1(0x136)] += _0x414aa0[0xe9 * -0x1b + -0x109d * 0x1 + 0x2930]['length'], new Token(TOKEN[_0x2276b1(0x131)], _0x27f053);
    }
    [_0x311c0d(0x14f)](_0x44637f, _0x56332f) {
        const _0xd255b6 = _0x311c0d, _0x2cccf2 = {
                'GxhLd': function (_0xe4586e, _0x4a1352) {
                    return _0xe4586e === _0x4a1352;
                }
            };
        if (_0x2cccf2[_0xd255b6(0x150)](this['data']['charCodeAt'](this[_0xd255b6(0x136)]), 0xa69 + -0x112f + 0x703))
            return this[_0xd255b6(0x136)]++, _0x44637f;
        return _0x56332f;
    }
    [_0x311c0d(0x151)]() {
        const _0x15cd1d = _0x311c0d, _0x496f57 = {
                'sFEbk': function (_0x58de35, _0x964c0a) {
                    return _0x58de35 === _0x964c0a;
                }
            }, _0x4523e9 = this['data'][_0x15cd1d(0x140)](this['pos']);
        if (_0x496f57[_0x15cd1d(0x152)](_0x4523e9, 0x5aa + -0x419 * 0x7 + 0x1742))
            return this[_0x15cd1d(0x136)]++, Singletons['le'];
        if (_0x4523e9 === 0x12e6 + 0x127f + 0x1 * -0x2527)
            return this['pos']++, Singletons['ne'];
        return Singletons['lt'];
    }
    [_0x311c0d(0x153)]() {
        const _0x2e3480 = _0x311c0d, _0x305206 = {
                'rNJwU': function (_0x32cf13, _0x3af836) {
                    return _0x32cf13 === _0x3af836;
                }
            };
        if (_0x305206[_0x2e3480(0x154)](this[_0x2e3480(0x135)][_0x2e3480(0x140)](this[_0x2e3480(0x136)]), 0x18a4 + 0xd6d + -0x25e2))
            return this[_0x2e3480(0x155)](), ![];
        return !![];
    }
    [_0x311c0d(0x156)]() {
        const _0x253211 = _0x311c0d, _0xc5e06 = {
                'iSIYJ': function (_0x200233, _0x559563) {
                    return _0x200233 === _0x559563;
                },
                'sxNfy': function (_0x5a799b, _0x5e4d12) {
                    return _0x5a799b === _0x5e4d12;
                },
                'fEqYB': function (_0x1e6b6c, _0x207d84) {
                    return _0x1e6b6c <= _0x207d84;
                },
                'DDzjW': function (_0xf951b4, _0x5f0b56) {
                    return _0xf951b4 / _0x5f0b56;
                },
                'kyCXp': function (_0x212b3b, _0x3fe75a) {
                    return _0x212b3b - _0x3fe75a;
                },
                'VkBJY': function (_0xa7cce4, _0x3f5622) {
                    return _0xa7cce4 + _0x3f5622;
                },
                'ENpOz': function (_0x110d8b, _0x197e83) {
                    return _0x110d8b(_0x197e83);
                },
                'ouuzL': function (_0x3e6301, _0x196502) {
                    return _0x3e6301 - _0x196502;
                }
            }, _0x1fc44e = this[_0x253211(0x135)][_0x253211(0x140)](this[_0x253211(0x136)]);
        if (_0xc5e06[_0x253211(0x157)](_0x1fc44e, -0x2f * -0x7d + 0xbb1 + -0x322 * 0xb))
            return this[_0x253211(0x136)]++, Singletons[_0x253211(0x158)];
        if (_0xc5e06[_0x253211(0x159)](_0x1fc44e, 0x67 * 0x49 + -0x27 * 0x6a + 0xd0f * -0x1))
            return this[_0x253211(0x136)]++, Singletons['dotStar'];
        if (_0xc5e06[_0x253211(0x159)](_0x1fc44e, -0x1 * -0x5d1 + -0x624 + 0x76))
            return this['pos']++, Singletons['dotHash'];
        if (0xe0c + -0x219a + 0x13be <= _0x1fc44e && _0xc5e06['fEqYB'](_0x1fc44e, -0x1 * -0xdb3 + 0x11dc + -0x1f56)) {
            this[_0x253211(0x136)]++;
            const _0x596d2b = this[_0x253211(0x135)][_0x253211(0x142)](this[_0x253211(0x136)])['match'](dotNumberPattern);
            if (!_0x596d2b)
                return new Token(TOKEN['number'], _0xc5e06[_0x253211(0x15a)](_0xc5e06[_0x253211(0x15b)](_0x1fc44e, -0x16f9 + 0x172 * -0x1a + 0x3cbd), -0x6aa * 0x2 + 0x1 * 0x19c7 + -0xc69));
            const _0x49d7d6 = _0xc5e06[_0x253211(0x15c)](this[_0x253211(0x136)], _0x596d2b[-0x3cb * -0x5 + -0x167 * -0x1a + -0x7 * 0x7eb]['length']), _0x56d8a7 = _0xc5e06['ENpOz'](parseFloat, this[_0x253211(0x135)][_0x253211(0x142)](_0xc5e06[_0x253211(0x15d)](this[_0x253211(0x136)], -0x1384 + -0x155c + 0x1 * 0x28e2), _0x49d7d6));
            return this[_0x253211(0x136)] = _0x49d7d6, new Token(TOKEN[_0x253211(0x131)], _0x56d8a7);
        }
        return Singletons[_0x253211(0x15e)];
    }
    ['next']() {
        const _0x3c4af4 = _0x311c0d, _0x249398 = {
                'PWouC': function (_0x3f8633, _0x46c5bb) {
                    return _0x3f8633 < _0x46c5bb;
                }
            };
        while (_0x249398['PWouC'](this[_0x3c4af4(0x136)], this[_0x3c4af4(0x137)])) {
            const _0x3c6594 = this[_0x3c4af4(0x135)][_0x3c4af4(0x140)](this['pos']++);
            switch (_0x3c6594) {
            case 0x914 + 0xeca + -0x17d5:
            case 0x1 * -0x2563 + 0x24a7 + -0x16 * -0x9:
            case -0xe7a + -0xa * 0x3f + 0x10fb:
            case 0x14c3 + -0x182f + 0x1 * 0x378:
            case 0xe06 * -0x1 + -0x36e * 0x9 + -0x3 * -0xefb:
            case 0x5 * 0x4d + 0xf02 + 0x347 * -0x5:
                break;
            case -0x1ae * -0x9 + -0x24ff + 0x73 * 0x31:
                return this[_0x3c4af4(0x13f)]();
            case -0x15a9 + 0x1fbf + -0x9f0:
                return Singletons[_0x3c4af4(0x118)];
            case -0xc06 + 0x2 * 0x33a + -0x1 * -0x5ba:
                return Singletons[_0x3c4af4(0x15f)];
            case -0x13ec + -0x1b73 * 0x1 + 0x2f88:
                return Singletons[_0x3c4af4(0x160)];
            case -0x1ea9 * -0x1 + -0xe8a * -0x2 + 0x65 * -0x97:
                return Singletons[_0x3c4af4(0x161)];
            case -0xc1f + 0x1cb0 + -0x833 * 0x2:
                return Singletons[_0x3c4af4(0x162)];
            case -0x132e + 0x4 * 0x32d + 0x6a6:
                return Singletons[_0x3c4af4(0x163)];
            case -0x2 * 0x1318 + 0xfaf + 0x16ae:
                return Singletons[_0x3c4af4(0x164)];
            case 0xdb + 0x1c16 + 0x1 * -0x1cc3:
                return this['getDot']();
            case -0x1b3 + -0x10d + 0x2ef * 0x1:
                if (this[_0x3c4af4(0x153)]())
                    return Singletons[_0x3c4af4(0x165)];
                break;
            case -0x497 * -0x2 + -0x1 * -0xdaf + -0xd7 * 0x1b:
            case -0x1ae7 * 0x1 + 0x7 * -0x4ac + 0x3bcc:
            case 0x19ab * 0x1 + 0x1 * -0x1082 + -0x8f7:
            case 0x1354 + -0x242 * 0x1 + -0x10df * 0x1:
            case 0x499 * -0x3 + -0x10d * 0x9 + 0x1774:
            case 0x12a * 0x11 + -0x1cdf * -0x1 + -0x3074:
            case -0x1 * -0x23de + 0xf0a + -0x32b2:
            case -0x1 * -0x1cb5 + -0x1 * -0x135e + -0x2fdc:
            case 0x1 * 0x16a5 + -0x2557 + 0xeea * 0x1:
            case -0xfbf * -0x1 + -0xe0d + 0x179 * -0x1:
                return this[_0x3c4af4(0x14b)](_0x3c6594);
            case 0x39 * -0x6a + -0x15e1 + 0x2db6 * 0x1:
                this[_0x3c4af4(0x155)]();
                break;
            case 0x58d * -0x5 + 0x1d52 * 0x1 + -0x155 * 0x1:
                return this['getLower']();
            case -0xa0 + -0x2a9 * 0x8 + 0x1 * 0x1625:
                return this[_0x3c4af4(0x14f)](Singletons['eq'], Singletons[_0x3c4af4(0x166)]);
            case 0x843 + 0xd * -0x2cd + 0x5c * 0x4f:
                return this[_0x3c4af4(0x14f)](Singletons['ge'], Singletons['gt']);
            case 0x32b * 0x7 + 0x1936 + -0x2f08:
                return Singletons[_0x3c4af4(0x167)];
            case 0x247a + -0x1aa3 + -0x97a:
                return Singletons[_0x3c4af4(0x168)];
            case -0x19fa + -0x2416 + -0xfa3 * -0x4:
                return Singletons['or'];
            default:
                return this[_0x3c4af4(0x13d)]();
            }
        }
        return Singletons['eof'];
    }
}
export {
    Lexer,
    Token,
    TOKEN
};
