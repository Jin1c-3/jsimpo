const _0x4129 = [
    'add',
    'isEmpty',
    'getNeighbors',
    'findEdge',
    'cprvs',
    'weight',
    'hasValue',
    'changePriority',
    '822639zKKdYr',
    '1iWLUqk',
    '1661327imKepG',
    '844187FEorTY',
    '1paMlkM',
    '233652NVKSam',
    '1BpGwRf',
    '680TJszke',
    '541ywduVE',
    '1144379azYQTJ',
    '322868pTfxqg',
    'getAllVertices',
    'forEach',
    'getKey'
];
(function (_0x3f87e6, _0x224285) {
    const _0x5c7f25 = _0x3cf5;
    while (!![]) {
        try {
            const _0x59c1ba = parseInt(_0x5c7f25(0x126)) * -parseInt(_0x5c7f25(0x127)) + parseInt(_0x5c7f25(0x128)) + parseInt(_0x5c7f25(0x129)) * -parseInt(_0x5c7f25(0x12a)) + parseInt(_0x5c7f25(0x12b)) * -parseInt(_0x5c7f25(0x12c)) + -parseInt(_0x5c7f25(0x12d)) * parseInt(_0x5c7f25(0x12e)) + parseInt(_0x5c7f25(0x12f)) + parseInt(_0x5c7f25(0x130));
            if (_0x59c1ba === _0x224285)
                break;
            else
                _0x3f87e6['push'](_0x3f87e6['shift']());
        } catch (_0x2c4b71) {
            _0x3f87e6['push'](_0x3f87e6['shift']());
        }
    }
}(_0x4129, -0x12091 + -0xf826 * 0xb + 0x18ea6b));
function _0x3cf5(_0x1787ab, _0x26f565) {
    return _0x3cf5 = function (_0x3c6e35, _0x1a0d19) {
        _0x3c6e35 = _0x3c6e35 - (0x9 * 0x7c + 0x1 * -0x2406 + 0x20d0);
        let _0x1e2f76 = _0x4129[_0x3c6e35];
        return _0x1e2f76;
    }, _0x3cf5(_0x1787ab, _0x26f565);
}
import _0x2719c8 from '../../../data-structures/priority-queue/PriorityQueue';
export default function dijkstra(_0x21f4eb, _0x18df45) {
    const _0x15adc7 = _0x3cf5, _0x3bc2ab = {
            'cprvs': function (_0x7b0369, _0x4d7a42) {
                return _0x7b0369 + _0x4d7a42;
            }
        }, _0x59c429 = {}, _0x5164be = {}, _0x4e56fd = {}, _0x39cbe7 = new _0x2719c8();
    _0x21f4eb[_0x15adc7(0x131)]()[_0x15adc7(0x132)](_0x3740e6 => {
        const _0x2a25fd = _0x15adc7;
        _0x59c429[_0x3740e6[_0x2a25fd(0x133)]()] = Infinity, _0x4e56fd[_0x3740e6['getKey']()] = null;
    }), _0x59c429[_0x18df45[_0x15adc7(0x133)]()] = -0x19b7 * 0x1 + -0xf * -0x246 + 0x1 * -0x863, _0x39cbe7[_0x15adc7(0x134)](_0x18df45, _0x59c429[_0x18df45[_0x15adc7(0x133)]()]);
    while (!_0x39cbe7[_0x15adc7(0x135)]()) {
        const _0x47c828 = _0x39cbe7['poll']();
        _0x47c828[_0x15adc7(0x136)]()[_0x15adc7(0x132)](_0x1d6580 => {
            const _0x3b1ba0 = _0x15adc7;
            if (!_0x5164be[_0x1d6580[_0x3b1ba0(0x133)]()]) {
                const _0x3c023e = _0x21f4eb[_0x3b1ba0(0x137)](_0x47c828, _0x1d6580), _0x34cbef = _0x59c429[_0x1d6580[_0x3b1ba0(0x133)]()], _0x34cad1 = _0x3bc2ab[_0x3b1ba0(0x138)](_0x59c429[_0x47c828[_0x3b1ba0(0x133)]()], _0x3c023e[_0x3b1ba0(0x139)]);
                _0x34cad1 < _0x34cbef && (_0x59c429[_0x1d6580['getKey']()] = _0x34cad1, _0x39cbe7[_0x3b1ba0(0x13a)](_0x1d6580) && _0x39cbe7[_0x3b1ba0(0x13b)](_0x1d6580, _0x59c429[_0x1d6580[_0x3b1ba0(0x133)]()]), _0x4e56fd[_0x1d6580[_0x3b1ba0(0x133)]()] = _0x47c828), !_0x39cbe7[_0x3b1ba0(0x13a)](_0x1d6580) && _0x39cbe7[_0x3b1ba0(0x134)](_0x1d6580, _0x59c429[_0x1d6580[_0x3b1ba0(0x133)]()]);
            }
        }), _0x5164be[_0x47c828[_0x15adc7(0x133)]()] = _0x47c828;
    }
    return {
        'distances': _0x59c429,
        'previousVertices': _0x4e56fd
    };
}
