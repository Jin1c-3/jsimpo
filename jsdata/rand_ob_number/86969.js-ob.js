var Detector = {};
module['exports'] = Detector;
var SAT = require('./SAT'), Pair = require('./Pair'), Bounds = require('../geometry/Bounds');
(function () {
    Detector['collisions'] = function (_0x415947, _0x595871) {
        var _0x2b2773 = [], _0x122502 = _0x595871['pairs']['table'], _0x4326ac = _0x595871['metrics'];
        for (var _0x3f0c3b = -0x1 * -0x1e6 + 0x4ef * -0x1 + 0x309; _0x3f0c3b < _0x415947['length']; _0x3f0c3b++) {
            var _0x5c34d7 = _0x415947[_0x3f0c3b][0x1f1c + 0x105 * -0xb + -0x1cf * 0xb], _0x2567e2 = _0x415947[_0x3f0c3b][-0x22f4 + -0xbb1 * -0x2 + 0xb93];
            if ((_0x5c34d7['isStatic'] || _0x5c34d7['isSleeping']) && (_0x2567e2['isStatic'] || _0x2567e2['isSleeping']))
                continue;
            if (!Detector['canCollide'](_0x5c34d7['collisionFilter'], _0x2567e2['collisionFilter']))
                continue;
            _0x4326ac['midphaseTests'] += 0x1e9 * -0x3 + 0x22e1 + 0x9b7 * -0x3;
            if (Bounds['overlaps'](_0x5c34d7['bounds'], _0x2567e2['bounds']))
                for (var _0xb1eb2b = _0x5c34d7['parts']['length'] > 0x1 * 0xaf + 0x1df7 + 0x1 * -0x1ea5 ? -0x26a9 * 0x1 + 0x15ec + 0x1 * 0x10be : -0x115c + -0x3b * 0x2f + 0x1c31; _0xb1eb2b < _0x5c34d7['parts']['length']; _0xb1eb2b++) {
                    var _0x2f8ff7 = _0x5c34d7['parts'][_0xb1eb2b];
                    for (var _0x6ccfa9 = _0x2567e2['parts']['length'] > 0x1 * 0x1f35 + -0x304 * 0xc + 0x4fc ? -0x11c5 + 0x1085 + 0x6b * 0x3 : 0x1054 + 0x12f1 + -0x2345; _0x6ccfa9 < _0x2567e2['parts']['length']; _0x6ccfa9++) {
                        var _0x1a05cf = _0x2567e2['parts'][_0x6ccfa9];
                        if (_0x2f8ff7 === _0x5c34d7 && _0x1a05cf === _0x2567e2 || Bounds['overlaps'](_0x2f8ff7['bounds'], _0x1a05cf['bounds'])) {
                            var _0x2a77cf = Pair['id'](_0x2f8ff7, _0x1a05cf), _0x3738c5 = _0x122502[_0x2a77cf], _0x4e73a5;
                            _0x3738c5 && _0x3738c5['isActive'] ? _0x4e73a5 = _0x3738c5['collision'] : _0x4e73a5 = null;
                            var _0x72197a = SAT['collides'](_0x2f8ff7, _0x1a05cf, _0x4e73a5);
                            _0x4326ac['narrowphaseTests'] += 0x1bf5 + -0x329 * 0x7 + -0x5d5;
                            if (_0x72197a['reused'])
                                _0x4326ac['narrowReuseCount'] += 0x36e * 0x9 + -0xc7 * 0x32 + 0x801 * 0x1;
                            _0x72197a['collided'] && (_0x2b2773['push'](_0x72197a), _0x4326ac['narrowDetections'] += -0x1 * 0x191d + -0x266 * 0x4 + 0x22b6);
                        }
                    }
                }
        }
        return _0x2b2773;
    }, Detector['canCollide'] = function (_0x53b36c, _0x3d5fe9) {
        if (_0x53b36c['group'] === _0x3d5fe9['group'] && _0x53b36c['group'] !== -0x10fb + -0x58 + 0x1153)
            return _0x53b36c['group'] > 0x180b + -0x685 + -0x1186;
        return (_0x53b36c['mask'] & _0x3d5fe9['category']) !== 0x2402 * -0x1 + 0x254b + 0x7 * -0x2f && (_0x3d5fe9['mask'] & _0x53b36c['category']) !== -0x95a * -0x3 + 0x2672 + -0x4280;
    };
}());
