import { looseEqual } from 'uni-shared';
function setResult(_0x4cc135, _0xbf63c9, _0x49bceb) {
    _0x4cc135[_0xbf63c9] = _0x49bceb;
}
function diffElmData(_0x40cc08, _0x5cda49) {
    let _0x3b9b9c, _0x555ce5, _0x45fb20, _0x3cce31;
    for (_0x555ce5 in _0x40cc08) {
        _0x45fb20 = _0x40cc08[_0x555ce5], _0x3cce31 = _0x5cda49[_0x555ce5], !looseEqual(_0x3cce31, _0x45fb20) && setResult(_0x3b9b9c || (_0x3b9b9c = Object['create'](null)), _0x555ce5, _0x45fb20);
    }
    return _0x3b9b9c;
}
export function diff(_0x4740f5, _0x1b5a44, _0x588aee) {
    let _0x280f9f, _0x13f5e3, _0x35b549;
    for (_0x280f9f in _0x4740f5) {
        _0x13f5e3 = _0x4740f5[_0x280f9f], _0x35b549 = _0x1b5a44[_0x280f9f];
        if (!_0x35b549) {
            setResult(_0x588aee, _0x280f9f, _0x13f5e3);
            continue;
        }
        const _0x5565c0 = diffElmData(_0x13f5e3, _0x35b549);
        _0x5565c0 && setResult(_0x588aee, _0x280f9f, _0x5565c0);
    }
    return _0x588aee;
}
