"use strict";const{expect}=require("chai");const awsRequest=require("@serverless/test/aws-request");const fixtures=require("../../fixtures/programmatic");const{confirmCloudWatchLogs}=require("../../utils/misc");const{deployService,removeService}=require("../../utils/integration");describe("Function destinations Integration Test",function(){this.timeout(1e3*60*20);let i;let s;const n="dev";before(async()=>{const e=await fixtures.setup("functionDestinations");({servicePath:s}=e);const t=e.serviceConfig.service;i=`${t}-${n}`;await deployService(s)});after(async()=>{if(!s)return;await removeService(s)});it("on async invoke should invoke destination target",async()=>confirmCloudWatchLogs(`/aws/lambda/${i}-target`,async()=>{await awsRequest("Lambda","invoke",{FunctionName:`${i}-trigger`,InvocationType:"Event"})},{checkIsComplete:e=>e.length}).then(e=>{expect(e.length>0).to.equal(true)}))});