const _=require("lodash");module.exports=function(s){const n=s.Model;s.Model=s.Model.extend({sync:function t(){const e=n.prototype.sync.apply(this,arguments);const o=e.update;const i=e.insert;const s=this;e.update=function t(e){e=s.formatOnWrite(_.cloneDeep(e));return o.apply(this,[e])};e.insert=function t(e){e=s.formatOnWrite(_.cloneDeep(e));return i.apply(this,[e])};return e},formatOnWrite:function t(e){return e},format:function t(e){return this.fixDatesWhenSave(e)},parse:function t(e){return this.fixBools(this.fixDatesWhenFetch(e))},toJSON:function t(e){const o=s.Model.filterOptions(e,"toJSON");o.omitPivot=true;_.each(this.relations,(t,e)=>{if(_.isEmpty(t)){delete this.relations[e]}});if(o.previous){const i=_.cloneDeep(this);i.attributes=this._previousAttributes;if(this.relationships){this.relationships.forEach(t=>{if(this._previousRelations&&Object.prototype.hasOwnProperty.call(this._previousRelations,t)){i.related(t).models=this._previousRelations[t].models}})}return n.prototype.toJSON.call(i,o)}return n.prototype.toJSON.call(this,o)}})};