"use strict";class EntryOptionPlugin{apply(e){e.hooks.entryOption.tap("EntryOptionPlugin",(n,i)=>{EntryOptionPlugin.applyEntryOption(e,n,i);return true})}static applyEntryOption(n,i,e){if(typeof e==="function"){const r=require("./DynamicEntryPlugin");new r(i,e).apply(n)}else{const t=require("./EntryPlugin");for(const a of Object.keys(e)){const o=e[a];const l=EntryOptionPlugin.entryDescriptionToOptions(n,a,o);for(const e of o.import){new t(i,e,l).apply(n)}}}}static entryDescriptionToOptions(n,i,e){const r={name:i,filename:e.filename,runtime:e.runtime,layer:e.layer,dependOn:e.dependOn,publicPath:e.publicPath,chunkLoading:e.chunkLoading,wasmLoading:e.wasmLoading,library:e.library};if(e.layer!==undefined&&!n.options.experiments.layers){throw new Error("'entryOptions.layer' is only allowed when 'experiments.layers' is enabled")}if(e.chunkLoading){const t=require("./javascript/EnableChunkLoadingPlugin");t.checkEnabled(n,e.chunkLoading)}if(e.wasmLoading){const a=require("./wasm/EnableWasmLoadingPlugin");a.checkEnabled(n,e.wasmLoading)}if(e.library){const o=require("./library/EnableLibraryPlugin");o.checkEnabled(n,e.library.type)}return r}}module.exports=EntryOptionPlugin;