"use strict";const contentDisposition=require("content-disposition");const getType=require("cache-content-type");const onFinish=require("on-finished");const escape=require("escape-html");const typeis=require("type-is").is;const statuses=require("statuses");const destroy=require("destroy");const assert=require("assert");const extname=require("path").extname;const vary=require("vary");const only=require("only");const util=require("util");const encodeUrl=require("encodeurl");const Stream=require("stream");module.exports={get socket(){return this.res.socket},get header(){const{res:t}=this;return typeof t.getHeaders==="function"?t.getHeaders():t._headers||{}},get headers(){return this.header},get status(){return this.res.statusCode},set status(t){if(this.headerSent)return;assert(Number.isInteger(t),"status code must be a number");assert(t>=100&&t<=999,`invalid status code: ${t}`);this._explicitStatus=true;this.res.statusCode=t;if(this.req.httpVersionMajor<2)this.res.statusMessage=statuses[t];if(this.body&&statuses.empty[t])this.body=null},get message(){return this.res.statusMessage||statuses[this.status]},set message(t){this.res.statusMessage=t},get body(){return this._body},set body(t){const e=this._body;this._body=t;if(t==null){if(!statuses.empty[this.status]){if(this.type==="application/json"){this._body="null";return}this.status=204}if(t===null)this._explicitNullBody=true;this.remove("Content-Type");this.remove("Content-Length");this.remove("Transfer-Encoding");return}if(!this._explicitStatus)this.status=200;const s=!this.has("Content-Type");if(typeof t==="string"){if(s)this.type=/^\s*</.test(t)?"html":"text";this.length=Buffer.byteLength(t);return}if(Buffer.isBuffer(t)){if(s)this.type="bin";this.length=t.length;return}if(t instanceof Stream){onFinish(this.res,destroy.bind(null,t));if(e!==t){t.once("error",t=>this.ctx.onerror(t));if(e!=null)this.remove("Content-Length")}if(s)this.type="bin";return}this.remove("Content-Length");this.type="json"},set length(t){if(!this.has("Transfer-Encoding")){this.set("Content-Length",t)}},get length(){if(this.has("Content-Length")){return parseInt(this.get("Content-Length"),10)||0}const{body:t}=this;if(!t||t instanceof Stream)return undefined;if(typeof t==="string")return Buffer.byteLength(t);if(Buffer.isBuffer(t))return t.length;return Buffer.byteLength(JSON.stringify(t))},get headerSent(){return this.res.headersSent},vary(t){if(this.headerSent)return;vary(this.res,t)},redirect(t,e){if(t==="back")t=this.ctx.get("Referrer")||e||"/";this.set("Location",encodeUrl(t));if(!statuses.redirect[this.status])this.status=302;if(this.ctx.accepts("html")){t=escape(t);this.type="text/html; charset=utf-8";this.body=`Redirecting to <a href="${t}">${t}</a>.`;return}this.type="text/plain; charset=utf-8";this.body=`Redirecting to ${t}.`},attachment(t,e){if(t)this.type=extname(t);this.set("Content-Disposition",contentDisposition(t,e))},set type(t){t=getType(t);if(t){this.set("Content-Type",t)}else{this.remove("Content-Type")}},set lastModified(t){if(typeof t==="string")t=new Date(t);this.set("Last-Modified",t.toUTCString())},get lastModified(){const t=this.get("last-modified");if(t)return new Date(t)},set etag(t){if(!/^(W\/)?"/.test(t))t=`"${t}"`;this.set("ETag",t)},get etag(){return this.get("ETag")},get type(){const t=this.get("Content-Type");if(!t)return"";return t.split(";",1)[0]},is(t,...e){return typeis(this.type,t,...e)},get(t){return this.res.getHeader(t)},has(t){return typeof this.res.hasHeader==="function"?this.res.hasHeader(t):t.toLowerCase()in this.headers},set(t,e){if(this.headerSent)return;if(arguments.length===2){if(Array.isArray(e))e=e.map(t=>typeof t==="string"?t:String(t));else if(typeof e!=="string")e=String(e);this.res.setHeader(t,e)}else{for(const s in t){this.set(s,t[s])}}},append(t,e){const s=this.get(t);if(s){e=Array.isArray(s)?s.concat(e):[s].concat(e)}return this.set(t,e)},remove(t){if(this.headerSent)return;this.res.removeHeader(t)},get writable(){if(this.res.writableEnded||this.res.finished)return false;const t=this.res.socket;if(!t)return true;return t.writable},inspect(){if(!this.res)return;const t=this.toJSON();t.body=this.body;return t},toJSON(){return only(this,["status","message","header"])},flushHeaders(){this.res.flushHeaders()}};if(util.inspect.custom){module.exports[util.inspect.custom]=module.exports.inspect}