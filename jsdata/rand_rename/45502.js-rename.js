var async=require("../../lib");const{expect}=require("chai");const assert=require("assert");module.exports=function(){async function a(n){var e=await Promise.resolve(n);return e}this.retries(3);const t=[1,2,3];const c={a:1,b:2,c:3};it("should asyncify async functions",s=>{async.asyncify(a)(42,(n,e)=>{assert(e===42);s(n)})});it("should handle errors in async functions",e=>{async.asyncify(async()=>{throw new Error("thrown error")})(n=>{assert(n.message="thrown error");e()})});it("should handle async functions in each",n=>{async.each(t,a,n)});it("should handle async functions in eachLimit",n=>{async.eachLimit(t,2,a,n)});it("should handle async functions in eachSeries",n=>{async.eachSeries(t,a,n)});it("should handle async functions in eachOf",n=>{async.eachOf(t,a,n)});it("should handle async functions in eachOfLimit",n=>{async.eachOfLimit(t,2,a,n)});it("should handle async functions in eachOfSeries",n=>{async.eachOfSeries(t,a,n)});it("should handle async functions in map",s=>{async.map(t,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in mapLimit",s=>{async.mapLimit(t,2,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in mapSeries",s=>{async.mapSeries(t,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in mapValues",s=>{async.mapValues(c,a,(n,e)=>{expect(e).to.eql(c);s(n)})});it("should handle async functions in mapValuesLimit",s=>{async.mapValuesLimit(c,2,a,(n,e)=>{expect(e).to.eql(c);s(n)})});it("should handle async functions in mapValuesSeries",s=>{async.mapValuesSeries(c,a,(n,e)=>{expect(e).to.eql(c);s(n)})});it("should handle async functions in filter",s=>{async.filter(t,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in filterLimit",s=>{async.filterLimit(t,2,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in filterSeries",s=>{async.filterSeries(t,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in reject",s=>{async.reject(t,a,(n,e)=>{expect(e).to.eql([]);s(n)})});it("should handle async functions in rejectLimit",s=>{async.rejectLimit(t,2,a,(n,e)=>{expect(e).to.eql([]);s(n)})});it("should handle async functions in rejectSeries",s=>{async.rejectSeries(t,a,(n,e)=>{expect(e).to.eql([]);s(n)})});it("should handle async functions in every",s=>{async.every(t,a,(n,e)=>{expect(e).to.eql(true);s(n)})});it("should handle async functions in everyLimit",s=>{async.everyLimit(t,2,a,(n,e)=>{expect(e).to.eql(true);s(n)})});it("should handle async functions in everySeries",s=>{async.everySeries(t,a,(n,e)=>{expect(e).to.eql(true);s(n)})});it("should handle async functions in some",s=>{async.some(t,a,(n,e)=>{expect(e).to.eql(true);s(n)})});it("should handle async functions in someLimit",s=>{async.someLimit(t,2,a,(n,e)=>{expect(e).to.eql(true);s(n)})});it("should handle async functions in someSeries",s=>{async.someSeries(t,a,(n,e)=>{expect(e).to.eql(true);s(n)})});it("should handle async functions in groupBy",s=>{async.groupBy(t,a,(n,e)=>{expect(e).to.eql({1:[1],2:[2],3:[3]});s(n)})});it("should handle async functions in groupByLimit",s=>{async.groupByLimit(t,2,a,(n,e)=>{expect(e).to.eql({1:[1],2:[2],3:[3]});s(n)})});it("should handle async functions in groupBySeries",s=>{async.groupBySeries(t,a,(n,e)=>{expect(e).to.eql({1:[1],2:[2],3:[3]});s(n)})});it("should handle async functions in concat",s=>{async.concat(t,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in concatLimit",s=>{async.concatLimit(t,2,a,(n,e)=>{expect(n).to.eql(null);expect(e).to.eql(t);s(n)})});it("should handle async functions in concatSeries",s=>{async.concatSeries(t,a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in reduce",s=>{async.reduce(t,0,async(n,e)=>{var s=await Promise.resolve(n+e);return s},(n,e)=>{expect(e).to.eql(6);s(n)})});it("should handle async functions in reduceRight",s=>{async.reduceRight(t,0,async(n,e)=>{var s=await Promise.resolve(n+e);return s},(n,e)=>{expect(e).to.eql(6);s(n)})});it("should handle async functions in sortBy",s=>{async.sortBy([3,2,1],a,(n,e)=>{expect(e).to.eql(t);s(n)})});it("should handle async functions in transform",s=>{async.transform(c,async(n,e,s)=>{n[s]=await Promise.resolve(e)},(n,e)=>{expect(e).to.eql(c);s(n)})});it("should handle async functions in applyEach",s=>{async.applyEach([a,a],t)((n,e)=>{expect(e).to.eql([t,t]);s(n)})});it("should handle async functions in applyEachSeries",s=>{async.applyEachSeries([a,a],t)((n,e)=>{expect(e).to.eql([t,t]);s(n)})});it("should handle async functions in auto",s=>{async.auto({async a(){return await Promise.resolve(1)},async b(){return await Promise.resolve(2)},c:["a","b",async function(n){return await Promise.resolve(n.a+n.b)}]},(n,e)=>{expect(e).to.eql({a:1,b:2,c:3});s(n)})});it("should handle async functions in autoInject",s=>{async.autoInject({z:async function(){return 0},a:async function(){return 1},b:function(n,e){e(null,n+1)},async c(n,e){return await Promise.resolve(n+e)},d:async n=>{return await Promise.resolve(n+1)}},(n,e)=>{expect(e).to.eql({z:0,a:1,b:2,c:3,d:4});s(n)})});it("should handle async functions in autoInject (shorthand)",s=>{async.autoInject({async a(){return await Promise.resolve(1)},async b(n){return await Promise.resolve(n+1)},async c(n,e){return await Promise.resolve(n+e)},async d(n){return await Promise.resolve(n+1)}},(n,e)=>{expect(e).to.eql({a:1,b:2,c:3,d:4});s(n)})});it("should handle async functions in cargo",n=>{var e=[];var s=async.cargo(async n=>{e.push(await Promise.resolve(n))},2);s.drain(()=>{expect(e).to.eql([[1,2],[3]]);n()});s.push(1);s.push(2);s.push(3)});it("should handle async functions in queue",n=>{var e=[];var s=async.queue(async n=>{e.push(await Promise.resolve(n))},2);s.drain(()=>{expect(e).to.eql([1,2,3]);n()});s.push(1);s.push(2);s.push(3)});it("should handle async functions in priorityQueue",n=>{var e=[];var s=async.priorityQueue(async n=>{e.push(await Promise.resolve(n))},2);s.drain(()=>{expect(e).to.eql([1,2,3]);n()});s.push(1);s.push(2);s.push(3)});it("should handle async functions in compose",s=>{async.compose(async n=>n+1,async n=>n+1,async n=>n+1)(0,(n,e)=>{expect(e).to.equal(3);s(n)})});it("should handle async functions in seq",s=>{async.seq(async n=>n+1,async n=>n+1,async n=>n+1)(0,(n,e)=>{expect(e).to.equal(3);s(n)})});it("should handle async functions in whilst",n=>{var e=0;async.whilst(async()=>e<3,async()=>{e+=1;return e},n)});it("should handle async functions in doWhilst",n=>{var e=0;async.doWhilst(async()=>{e+=1;return e},async n=>n<3,n)});it("should handle async functions in until",n=>{var e=0;async.until(async()=>e>3,async()=>{e+=1;return e},n)});it("should handle async functions in doUntil",n=>{var e=0;async.doUntil(async()=>{e+=1;return e},async n=>n>3,n)});it("should handle async functions in forever",e=>{var n=0;async.forever(async()=>{n+=1;if(n>10)throw new Error("too big")},n=>{expect(n.message).to.equal("too big");e()})});it("should handle async functions in parallel",s=>{async.parallel([async()=>1,async()=>2,async()=>3],(n,e)=>{expect(e).to.eql([1,2,3]);s(n)})});it("should handle async functions in parallel (object)",s=>{async.parallel({a:async()=>1,b:async()=>2,c:async()=>3},(n,e)=>{expect(e).to.eql({a:1,b:2,c:3});s(n)})});it("should handle async functions in parallelLimit",s=>{async.parallelLimit([async()=>1,async()=>2,async()=>3],2,(n,e)=>{expect(e).to.eql([1,2,3]);s(n)})});it("should handle async functions in parallelLimit (object)",s=>{async.parallelLimit({a:async()=>1,b:async()=>2,c:async()=>3},2,(n,e)=>{expect(e).to.eql({a:1,b:2,c:3});s(n)})});it("should handle async functions in series",s=>{async.series([async()=>1,async()=>2,async()=>3],(n,e)=>{expect(e).to.eql([1,2,3]);s(n)})});it("should handle async functions in series (object)",s=>{async.series({a:async()=>1,b:async()=>2,c:async()=>3},(n,e)=>{expect(e).to.eql({a:1,b:2,c:3});s(n)})});it("should handle async functions in race",s=>{async.race([async()=>1,async()=>2,async()=>3],(n,e)=>{expect(e).to.eql(1);s(n)})});it("should handle async functions in retry",s=>{var n=0;async.retry(4,async()=>{n+=1;if(n<3)throw new Error("fail");return n},(n,e)=>{expect(e).to.eql(3);s(n)})});it("should handle async functions in retryable",s=>{var n=0;async.retryable(4,async()=>{n+=1;if(n<3)throw new Error("fail");return n})((n,e)=>{expect(e).to.eql(3);s(n)})});it("should handle async functions in times",s=>{var n=0;async.times(4,async()=>{n+=1;return n},(n,e)=>{expect(e).to.eql([1,2,3,4]);s(n)})});it("should handle async functions in timesLimit",s=>{var n=0;async.timesLimit(4,2,async()=>{n+=1;return n},(n,e)=>{expect(e).to.eql([1,2,3,4]);s(n)})});it("should handle async functions in timesSeries",s=>{var n=0;async.timesSeries(4,async()=>{n+=1;return n},(n,e)=>{expect(e).to.eql([1,2,3,4]);s(n)})});it("should handle async functions in waterfall",s=>{async.waterfall([async()=>1,async n=>n+1,async n=>[n,n+1],async([n,e])=>n+e],(n,e)=>{expect(e).to.eql(5);s(n)})});it("should handle async functons in tryEach",s=>{async.tryEach([async()=>{throw new Error("fail1")},async()=>{throw new Error("fail2")},async()=>5,async()=>{throw new Error("shoult not get here")}],(n,e)=>{expect(e).to.eql(5);s()})});it("should handle async functions in dir",n=>{async.dir(async n=>n,"foo");setTimeout(n)});it("should handle async functions in log",n=>{async.log(async n=>n,"foo");setTimeout(n)});it("should handle async functions in ensureAsync",()=>{var n=async.ensureAsync(a);assert(n===a)});it("should handle async functions in memoize",n=>{var e=async.memoize(a);e(1,()=>{e(1,n)})});it("should handle async functions in reflect",s=>{var n=async.reflect(a);n(1,(n,e)=>{expect(e).to.eql({value:1});s(n)})});it("should handle async functions in reflect (error case)",s=>{var a;var n=async.reflect(async()=>{a=new Error("foo");throw a});n(1,(n,e)=>{expect(e).to.eql({error:a,value:undefined});s(n)})});it("should handle async functions in timeout",s=>{var n=async.timeout(a,50);n(1,(n,e)=>{expect(e).to.eql(1);s(n)})});it("should handle async functions in timeout (error case)",e=>{var n=async.timeout(async n=>{await new Promise(n=>setTimeout(n,100));return n},20);n(1,n=>{expect(n.message).to.match(/timed out/);e()})})};