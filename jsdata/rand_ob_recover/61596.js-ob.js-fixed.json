{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x434d"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x344e78"
                },
                {
                    "type": "Identifier",
                    "name": "_0x5765d4"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x434d"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4e61ef"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x51fab1"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x4e61ef"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4e61ef"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Literal",
                                                                            "value": 1405,
                                                                            "raw": "0x57d"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 164,
                                                                            "raw": "0xa4"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 44,
                                                                            "raw": "0x2c"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Literal",
                                                                            "value": 2,
                                                                            "raw": "0x2"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 2710,
                                                                        "raw": "0xa96"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x1ca64b"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x19d6"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4e61ef"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x1ca64b"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x434d"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x344e78"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x5765d4"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "fast_regexp_result"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Literal",
                                "value": {},
                                "raw": "/./g",
                                "regex": {
                                    "pattern": ".",
                                    "flags": "g"
                                }
                            },
                            "property": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x48650a"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 400,
                                        "raw": "0x190"
                                    }
                                ]
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "a",
                                "raw": "'a'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "fast_regexp_result"
                    },
                    "property": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "_0x48650a"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 401,
                                "raw": "0x191"
                            }
                        ]
                    }
                },
                "right": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "*",
                            "left": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 7,
                                    "raw": "0x7"
                                },
                                "prefix": true
                            },
                            "right": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 729,
                                    "raw": "0x2d9"
                                },
                                "prefix": true
                            }
                        },
                        "right": {
                            "type": "BinaryExpression",
                            "operator": "*",
                            "left": {
                                "type": "Literal",
                                "value": 4,
                                "raw": "0x4"
                            },
                            "right": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 568,
                                    "raw": "0x238"
                                },
                                "prefix": true
                            }
                        }
                    },
                    "right": {
                        "type": "BinaryExpression",
                        "operator": "*",
                        "left": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "right": {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                                "type": "Literal",
                                "value": 2831,
                                "raw": "0xb0f"
                            },
                            "prefix": true
                        }
                    }
                }
            }
        },
        {
            "type": "ClassDeclaration",
            "id": {
                "type": "Identifier",
                "name": "RegExpWithFastResult"
            },
            "superClass": {
                "type": "Identifier",
                "name": "RegExp"
            },
            "body": {
                "type": "ClassBody",
                "body": [
                    {
                        "type": "MethodDefinition",
                        "key": {
                            "type": "Identifier",
                            "name": "constructor"
                        },
                        "computed": false,
                        "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "SequenceExpression",
                                            "expressions": [
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Super"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": ".",
                                                            "raw": "'.'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "g",
                                                            "raw": "'g'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "number_of_runs",
                                                            "raw": "'number_of_runs'"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 6,
                                                                        "raw": "0x6"
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 976,
                                                                    "raw": "0x3d0"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 2564,
                                                                "raw": "0xa04"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "*",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": 2,
                                                                "raw": "0x2"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1646,
                                                                "raw": "0x66e"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "kind": "constructor",
                        "static": false
                    },
                    {
                        "type": "MethodDefinition",
                        "key": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x48650a"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 400,
                                    "raw": "0x190"
                                }
                            ]
                        },
                        "computed": true,
                        "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x2e0ee0"
                                }
                            ],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0x59df7e"
                                                },
                                                "init": {
                                                    "type": "Identifier",
                                                    "name": "_0x48650a"
                                                }
                                            }
                                        ],
                                        "kind": "const"
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x59df7e"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 402,
                                                                    "raw": "0x192"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "prefix": false
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": 6124,
                                                            "raw": "0x17ec"
                                                        },
                                                        "right": {
                                                            "type": "UnaryExpression",
                                                            "operator": "-",
                                                            "argument": {
                                                                "type": "Literal",
                                                                "value": 8232,
                                                                "raw": "0x2028"
                                                            },
                                                            "prefix": true
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2108,
                                                        "raw": "0x83c"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "Identifier",
                                                "name": "fast_regexp_result"
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            }
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "kind": "method",
                        "static": false
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "slow_regexp_result"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ClassDeclaration",
            "id": {
                "type": "Identifier",
                "name": "RegExpWithSlowResult"
            },
            "superClass": {
                "type": "Identifier",
                "name": "RegExp"
            },
            "body": {
                "type": "ClassBody",
                "body": [
                    {
                        "type": "MethodDefinition",
                        "key": {
                            "type": "Identifier",
                            "name": "constructor"
                        },
                        "computed": false,
                        "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "SequenceExpression",
                                            "expressions": [
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Super"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": ".",
                                                            "raw": "'.'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "g",
                                                            "raw": "'g'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "number_of_runs",
                                                            "raw": "'number_of_runs'"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 158,
                                                                        "raw": "0x9e"
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 32,
                                                                    "raw": "0x20"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 1912,
                                                                        "raw": "0x778"
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 3,
                                                                    "raw": "0x3"
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 10792,
                                                            "raw": "0x2a28"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "kind": "constructor",
                        "static": false
                    },
                    {
                        "type": "MethodDefinition",
                        "key": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x48650a"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 400,
                                    "raw": "0x190"
                                }
                            ]
                        },
                        "computed": true,
                        "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x16c185"
                                }
                            ],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0xb897be"
                                                },
                                                "init": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "YyxoS",
                                                                "raw": "'YyxoS'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x29e8c1"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x47beaf"
                                                                    }
                                                                ],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "==",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x29e8c1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x47beaf"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "kind": "const"
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0xb897be"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "YyxoS",
                                                        "raw": "'YyxoS'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "number_of_runs",
                                                                "raw": "'number_of_runs'"
                                                            }
                                                        },
                                                        "prefix": false
                                                    },
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": 79,
                                                                    "raw": "0x4f"
                                                                },
                                                                "right": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 13,
                                                                        "raw": "0xd"
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 4147,
                                                                    "raw": "0x1033"
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "*",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 398,
                                                                    "raw": "0x18e"
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 13,
                                                                    "raw": "0xd"
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "consequent": {
                                                "type": "Identifier",
                                                "name": "slow_regexp_result"
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            }
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "kind": "method",
                        "static": false
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Literal",
                                        "value": "undefined",
                                        "raw": "'undefined'"
                                    }
                                ]
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Literal",
                                        "value": "a",
                                        "raw": "'a'"
                                    },
                                    "property": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x48650a"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 403,
                                                "raw": "0x193"
                                            }
                                        ]
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "NewExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "RegExpWithFastResult"
                                        },
                                        "arguments": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x48650a"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 404,
                                                "raw": "0x194"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Literal",
                                        "value": "a",
                                        "raw": "'a'"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "match",
                                        "raw": "'match'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "NewExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "RegExpWithSlowResult"
                                        },
                                        "arguments": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}