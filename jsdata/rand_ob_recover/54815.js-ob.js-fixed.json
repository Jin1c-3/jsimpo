{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "require"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "../common",
                        "raw": "'../common'"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x3061b1"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 177,
                                        "raw": "0xb1"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "fork"
                    },
                    "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "require"
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x3061b1"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 178,
                                            "raw": "0xb2"
                                        }
                                    ]
                                }
                            ]
                        },
                        "property": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x3061b1"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 179,
                                    "raw": "0xb3"
                                }
                            ]
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "process"
                        },
                        "property": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x3061b1"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 180,
                                    "raw": "0xb4"
                                }
                            ]
                        }
                    },
                    "property": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 833,
                                    "raw": "0x341"
                                },
                                "prefix": true
                            },
                            "right": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 8016,
                                    "raw": "0x1f50"
                                },
                                "prefix": true
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 8851,
                            "raw": "0x2293"
                        }
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "_0x3061b1"
                    },
                    "arguments": [
                        {
                            "type": "Literal",
                            "value": 181,
                            "raw": "0xb5"
                        }
                    ]
                }
            },
            "consequent": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "SequenceExpression",
                    "expressions": [
                        {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "process"
                                },
                                "property": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x3061b1"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 182,
                                            "raw": "0xb6"
                                        }
                                    ]
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "1",
                                    "raw": "'1'"
                                }
                            ]
                        },
                        {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "setTimeout"
                            },
                            "arguments": [
                                {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x218ceb"
                                                        },
                                                        "init": {
                                                            "type": "Identifier",
                                                            "name": "_0x3061b1"
                                                        }
                                                    }
                                                ],
                                                "kind": "const"
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "process"
                                                        },
                                                        "property": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x218ceb"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 182,
                                                                    "raw": "0xb6"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "2",
                                                            "raw": "'2'"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                                "type": "Literal",
                                                "value": 15,
                                                "raw": "0xf"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 279,
                                                "raw": "0x117"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 5199,
                                            "raw": "0x144f"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "*",
                                        "left": {
                                            "type": "Literal",
                                            "value": 1148,
                                            "raw": "0x47c"
                                        },
                                        "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Literal",
                                                "value": 8,
                                                "raw": "0x8"
                                            },
                                            "prefix": true
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "process"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "on",
                                    "raw": "'on'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "disconnect",
                                    "raw": "'disconnect'"
                                },
                                {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x27efa"
                                                        },
                                                        "init": {
                                                            "type": "Identifier",
                                                            "name": "_0x3061b1"
                                                        }
                                                    }
                                                ],
                                                "kind": "const"
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "process"
                                                            },
                                                            "property": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x27efa"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 183,
                                                                        "raw": "0xb7"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x27efa"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 184,
                                                                    "raw": "0xb8"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "3",
                                                            "raw": "'3'"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            ]
                        }
                    ]
                }
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "child"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "fork"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "__filename"
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x3061b1"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 181,
                                                            "raw": "0xb5"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "silent",
                                                        "raw": "'silent'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "prefix": true
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "ipc"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "stdout"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            }
                        ],
                        "kind": "let"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "child"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "on",
                                            "raw": "'on'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x3061b1"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 185,
                                                    "raw": "0xb9"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x598c15"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1e53a0"
                                                                },
                                                                "init": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3061b1"
                                                                }
                                                            },
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x313f81"
                                                                },
                                                                "init": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "FkIWT",
                                                                                "raw": "'FkIWT'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "FunctionExpression",
                                                                                "id": null,
                                                                                "params": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x16eadf"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x25de23"
                                                                                    }
                                                                                ],
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x16eadf"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x25de23"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "generator": false,
                                                                                "expression": false,
                                                                                "async": false
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "const"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "ipc"
                                                                },
                                                                "property": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1e53a0"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 186,
                                                                            "raw": "0xba"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x598c15"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x313f81"
                                                                },
                                                                "property": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1e53a0"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 187,
                                                                            "raw": "0xbb"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x598c15"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "2",
                                                                    "raw": "'2'"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "child"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "disconnect",
                                                                        "raw": "'disconnect'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    ]
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "child"
                                            },
                                            "property": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x3061b1"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 183,
                                                        "raw": "0xb7"
                                                    }
                                                ]
                                            }
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "on",
                                            "raw": "'on'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x3061b1"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 188,
                                                    "raw": "0xbc"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x13136f"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "stdout"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x13136f"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    ]
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "child"
                                        },
                                        "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x3061b1"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 189,
                                                    "raw": "0xbd"
                                                }
                                            ]
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x3061b1"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 190,
                                                    "raw": "0xbe"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "SequenceExpression",
                                                            "expressions": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "assert"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "deepStrictEqual",
                                                                            "raw": "'deepStrictEqual'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "ipc"
                                                                        },
                                                                        {
                                                                            "type": "ArrayExpression",
                                                                            "elements": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "1",
                                                                                    "raw": "'1'"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "2",
                                                                                    "raw": "'2'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "assert"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "strictEqual",
                                                                            "raw": "'strictEqual'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "stdout"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "3",
                                                                            "raw": "'3'"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}