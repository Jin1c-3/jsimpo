Debug=debug['Debug'];var break_point_hit_count;function listener(_0x22dccb,_0x5d0880,_0x1985b6,_0x519dfd){var _0x16033c={'YyPPx':function(_0x12066b,_0x48f32d){return _0x12066b==_0x48f32d;}};if(_0x16033c['YyPPx'](_0x22dccb,Debug['DebugEvent']['Break'])){break_point_hit_count++;}};Debug['setListener'](listener);function f(){a=0x1;b=0x2;};function g(){f();}function h(){}break_point_hit_count=0x0;bp1=Debug['setBreakPoint'](f);f();assertEquals(0x1,break_point_hit_count);assertThrows(()=>Debug['setBreakPoint'](f));f();assertEquals(0x2,break_point_hit_count);Debug['clearBreakPoint'](bp1);f();assertEquals(0x2,break_point_hit_count);break_point_hit_count=0x0;bp1=Debug['setBreakPoint'](g);g();assertEquals(0x1,break_point_hit_count);assertThrows(()=>Debug['setBreakPoint'](g));g();assertEquals(0x2,break_point_hit_count);Debug['clearBreakPoint'](bp1);g();assertEquals(0x2,break_point_hit_count);test_count=0xa;break_point_hit_count=0x0;for(var i=0x0;i<test_count;i++){if(i==0x0){Debug['setBreakPoint'](h);}else{assertThrows(()=>Debug['setBreakPoint'](h));}h();}assertEquals(test_count,break_point_hit_count);