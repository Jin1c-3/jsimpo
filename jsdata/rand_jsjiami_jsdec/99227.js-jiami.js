'use strict';const BbPromise=require('bluebird');const config=require('@serverless/utils/config');const ServerlessError=require('../serverless-error');const cliCommandsSchema=require('../cli/commands-schema');const muteConsoleLog=require('../utils/log/muteConsoleLog');const tabtabOptions=require('../utils/tabCompletion/tabtabOptions');const isNpmPackageWritable=require('../utils/npmPackage/isWritable');const isNpmGlobalPackage=require('../utils/npmPackage/isGlobal');const renderCommandHelp=require('../cli/render-help/command');const validProviders=new Set(['aws']);const validShells=new Set(['bash','zsh','fish']);const humanReadableProvidersList='\x22'+Array['from'](validProviders)+'\x22';const isWindows=process['platform']==='win32';const noSupportErrorMessage=isWindows?'Auto update can only be set for "serverless" installed by npm globally':'Auto update can only be set for "serverless" installed by npm globally or '+'standalone\x20installation';class Config{constructor(_0x2636bd,_0x2e8fb0){var _0x3ab615={'erHcd':'0|4|1|3|2','JCBoq':'container','dKErT':'config tabcompletion install','qFCzM':'config tabcompletion uninstall'};var _0x8f399b=_0x3ab615['erHcd']['split']('|'),_0x24a407=0x0;while(!![]){switch(_0x8f399b[_0x24a407++]){case'0':this['serverless']=_0x2636bd;continue;case'1':this['commands']={'config':{...cliCommandsSchema['get']('config'),'commands':{'credentials':{'validProviders':validProviders}}}};continue;case'2':this['hooks']={'config:config':async()=>this['updateConfig'](),'before:config:credentials:config':()=>this['validate'](),'config:tabcompletion:install:install':async()=>this['tabtabCompletionInstall'](),'config:tabcompletion:uninstall:uninstall':async()=>this['tabtabCompletionUninstall']()};continue;case'3':this['commands']['config']['commands']['tabcompletion']={'type':_0x3ab615['JCBoq'],'commands':{'install':{...cliCommandsSchema['get'](_0x3ab615['dKErT'])},'uninstall':{...cliCommandsSchema['get'](_0x3ab615['qFCzM'])}}};continue;case'4':this['options']=_0x2e8fb0;continue;}break;}}['validate'](){var _0x31b372={'IfyXa':function(_0x31abb4,_0x104656){return _0x31abb4(_0x104656);},'KiJXu':function(_0x1e39b2,_0x4fdd58){return _0x1e39b2(_0x4fdd58);},'cJDJP':function(_0x38e7c5,_0x5800fb){return _0x38e7c5!==_0x5800fb;},'CoGUw':'ltCHg'};const _0x17769e=this['options']['provider']['toLowerCase']();if(!validProviders['has'](_0x17769e)){if(_0x31b372['cJDJP']('ltCHg',_0x31b372['CoGUw'])){return BbPromise['try'](()=>{const {uninstall}=_0x31b372['IfyXa'](require,'tabtab/lib/installer');return _0x31b372['KiJXu'](muteConsoleLog,()=>tabtabOptions['reduce']((_0x2a9ef1,_0x500398)=>_0x2a9ef1['then'](()=>uninstall(_0x500398)),BbPromise['resolve']()))['then'](()=>this['serverless']['cli']['log']('Tab autocompletion uninstalled (for all configured shells).'));});}else{const _0x3ba4e8=['Provider\x20\x22'+_0x17769e+'" is not supported.',' Supported providers are: '+humanReadableProvidersList+'.']['join']('');throw new ServerlessError(_0x3ba4e8,'INVALID_PROVIDER');}}}async['updateConfig'](){var _0x10386c={'huCBH':'autoUpdate.enabled','BPdAJ':'Auto\x20update\x20is\x20already\x20turned\x20off','ryxJZ':'config','UMAZX':'container','hdefz':'config tabcompletion install','adhlQ':'config tabcompletion uninstall','cDTRG':function(_0x20792c,_0x5cf9ed){return _0x20792c===_0x5cf9ed;},'BQGtY':'YxcCC','CvUMa':'qkZsI','fLKsm':function(_0x3d3bea,_0x3aa36c){return _0x3d3bea(_0x3aa36c);},'WzdKH':function(_0x2b0a96,_0x3cbd10){return _0x2b0a96===_0x3cbd10;},'XSmKs':'win32','ggRTu':'AUTO_UPDATE_NOT_SUPPORTED','PlXYU':function(_0x5786b4,_0x3357be){return _0x5786b4!==_0x3357be;},'wFTAE':'iLUtM','JAeXC':function(_0x382eb2){return _0x382eb2();},'hFGMW':'Auto update cannot be set, due to missing write access to npm global installation','zSamu':'AUTO_UPDATE_NOT_SET_MISSING_WRITE_ACCESS','jyLVq':'Auto update successfully turned off (Turn on at any time with "serverless config --autoupdate")'};if(this['options']['autoupdate']==null){if(_0x10386c['cDTRG'](_0x10386c['BQGtY'],_0x10386c['CvUMa'])){if(!config['get'](_0x10386c['huCBH'])){this['serverless']['cli']['log'](_0x10386c['BPdAJ']);return;}config['set']('autoUpdate.enabled',![]);this['serverless']['cli']['log']('Auto update successfully turned off (Turn on at any time with "serverless config --autoupdate")');}else{_0x10386c['fLKsm'](renderCommandHelp,this['serverless']['processedInput']['commands']['join']('\x20'));return;}}if(this['options']['autoupdate']){if(config['get'](_0x10386c['huCBH'])){this['serverless']['cli']['log']('Auto update is already turned on');return;}if(this['serverless']['isLocallyInstalled']){throw new ServerlessError(noSupportErrorMessage,'AUTO_UPDATE_NOT_SUPPORTED');}if(this['serverless']['isStandaloneExecutable']){if(_0x10386c['WzdKH'](process['platform'],_0x10386c['XSmKs'])){throw new ServerlessError(noSupportErrorMessage,_0x10386c['ggRTu']);}}else{if(!isNpmGlobalPackage()){if(_0x10386c['PlXYU'](_0x10386c['wFTAE'],'iLUtM')){var _0x576344='2|0|3|4|1'['split']('|'),_0x2de97e=0x0;while(!![]){switch(_0x576344[_0x2de97e++]){case'0':this['options']=options;continue;case'1':this['hooks']={'config:config':async()=>this['updateConfig'](),'before:config:credentials:config':()=>this['validate'](),'config:tabcompletion:install:install':async()=>this['tabtabCompletionInstall'](),'config:tabcompletion:uninstall:uninstall':async()=>this['tabtabCompletionUninstall']()};continue;case'2':this['serverless']=serverless;continue;case'3':this['commands']={'config':{...cliCommandsSchema['get'](_0x10386c['ryxJZ']),'commands':{'credentials':{'validProviders':validProviders}}}};continue;case'4':this['commands']['config']['commands']['tabcompletion']={'type':_0x10386c['UMAZX'],'commands':{'install':{...cliCommandsSchema['get'](_0x10386c['hdefz'])},'uninstall':{...cliCommandsSchema['get'](_0x10386c['adhlQ'])}}};continue;}break;}}else{throw new ServerlessError(noSupportErrorMessage,_0x10386c['ggRTu']);}}if(!(await _0x10386c['JAeXC'](isNpmPackageWritable))){throw new ServerlessError(_0x10386c['hFGMW'],_0x10386c['zSamu']);}}config['set'](_0x10386c['huCBH'],!![]);this['serverless']['cli']['log']('Auto update successfully turned on (Turn off at any time with "serverless config --no-autoupdate")');}else{if(!config['get'](_0x10386c['huCBH'])){this['serverless']['cli']['log'](_0x10386c['BPdAJ']);return;}config['set']('autoUpdate.enabled',![]);this['serverless']['cli']['log'](_0x10386c['jyLVq']);}}async['tabtabCompletionInstall'](){var _0x4ebfcd={'jHCkN':'INVALID_PROVIDER','boZFm':'bash','WqYOL':'zsh','soKNS':'fish','UoOqO':'Unexpected shell choice','ujiLy':function(_0x370693,_0x4ff3e6){return _0x370693===_0x4ff3e6;},'UFbZa':'bAiPB','dcNpZ':function(_0x35e5fc,_0x358a42){return _0x35e5fc(_0x358a42);},'kCIzf':function(_0x25b2bb,_0x3c44b7){return _0x25b2bb!==_0x3c44b7;},'NJtGv':'MQSaZ','pqbdR':'TABCOMPLETION_INVALID_SHELL_ARGUMENT','kQYCs':'tabtab/lib/installer','dxJqB':function(_0x154d7c,_0x29a262){return _0x154d7c(_0x29a262);}};return BbPromise['try'](()=>{var _0x1d9a2a={'hguLh':'tabtab/lib/constants','tWwpi':_0x4ebfcd['boZFm'],'Wauhm':_0x4ebfcd['WqYOL'],'edWAv':_0x4ebfcd['soKNS'],'HAvCA':_0x4ebfcd['UoOqO'],'DoTSX':function(_0x5efa05,_0x12e239){return _0x4ebfcd['ujiLy'](_0x5efa05,_0x12e239);},'ItuNS':_0x4ebfcd['UFbZa'],'MAUyn':function(_0x10fa4c,_0x3e93e0){return _0x4ebfcd['dcNpZ'](_0x10fa4c,_0x3e93e0);}};if(_0x4ebfcd['kCIzf'](_0x4ebfcd['NJtGv'],_0x4ebfcd['NJtGv'])){const _0x380056=['Provider "'+provider+'" is not supported.',' Supported providers are: '+humanReadableProvidersList+'.']['join']('');throw new ServerlessError(_0x380056,_0x4ebfcd['jHCkN']);}else{const _0x138df0=this['serverless']['processedInput']['options']['shell']||_0x4ebfcd['boZFm'];if(!validShells['has'](_0x138df0)){if('OkXkb'!=='OkXkb'){if(this['serverless']['processedInput']['options']['location']){return this['serverless']['processedInput']['options']['location'];}const {BASH_LOCATION,FISH_LOCATION,ZSH_LOCATION}=require(_0x1d9a2a['hguLh']);switch(_0x138df0){case _0x1d9a2a['tWwpi']:return BASH_LOCATION;case _0x1d9a2a['Wauhm']:return ZSH_LOCATION;case _0x1d9a2a['edWAv']:return FISH_LOCATION;default:throw new Error(_0x1d9a2a['HAvCA']);}}else{throw new ServerlessError('Shell "'+_0x138df0+'\x22\x20is\x20not\x20supported.\x20Supported\x20shells:\x20'+Array['from'](validShells)+'.',_0x4ebfcd['pqbdR']);}}const _0xa59ae4=(()=>{if(this['serverless']['processedInput']['options']['location']){if(_0x1d9a2a['DoTSX'](_0x1d9a2a['ItuNS'],_0x1d9a2a['ItuNS'])){return this['serverless']['processedInput']['options']['location'];}else{throw new ServerlessError('Shell\x20\x22'+_0x138df0+'" is not supported. Supported shells: '+Array['from'](validShells)+'.','TABCOMPLETION_INVALID_SHELL_ARGUMENT');}}const {BASH_LOCATION,FISH_LOCATION,ZSH_LOCATION}=_0x1d9a2a['MAUyn'](require,'tabtab/lib/constants');switch(_0x138df0){case _0x1d9a2a['tWwpi']:return BASH_LOCATION;case _0x1d9a2a['Wauhm']:return ZSH_LOCATION;case _0x1d9a2a['edWAv']:return FISH_LOCATION;default:throw new Error('Unexpected shell choice');}})();const {install}=require(_0x4ebfcd['kQYCs']);return _0x4ebfcd['dxJqB'](muteConsoleLog,()=>tabtabOptions['reduce']((_0x3cff4e,_0x1e4561)=>_0x3cff4e['then'](()=>install(Object['assign']({'location':_0xa59ae4},_0x1e4561))),BbPromise['resolve']()))['then'](()=>this['serverless']['cli']['log']('Tab autocompletion setup for '+_0x138df0+'. Make sure to reload your SHELL.'));}});}async['tabtabCompletionUninstall'](){var _0x3254b3={'kOqyD':function(_0x104364,_0x134e13){return _0x104364(_0x134e13);},'GpVzD':'tabtab/lib/installer','dniKw':function(_0x57d369,_0x28e7b8){return _0x57d369(_0x28e7b8);}};return BbPromise['try'](()=>{const {uninstall}=_0x3254b3['kOqyD'](require,_0x3254b3['GpVzD']);return _0x3254b3['dniKw'](muteConsoleLog,()=>tabtabOptions['reduce']((_0x5d58b7,_0x10cf53)=>_0x5d58b7['then'](()=>uninstall(_0x10cf53)),BbPromise['resolve']()))['then'](()=>this['serverless']['cli']['log']('Tab autocompletion uninstalled (for all configured shells).'));});}}module['exports']=Config;