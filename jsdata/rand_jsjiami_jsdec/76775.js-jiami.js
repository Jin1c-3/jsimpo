import{Meteor}from'meteor/meteor';import{check}from'meteor/check';import{Subscriptions}from'../../app/models';import{hasPermission}from'../../app/authorization';import{settings}from'../../app/settings';import{loadMessageHistory}from'../../app/lib/server';Meteor['methods']({'loadHistory'(rid,end,limit=0x14,ls,showThreadMessages=!![]){var cHEjeo={'Nddvh':function(x,y){return x===y;},'KGrgO':'Invalid user','WdEas':'loadHistory','fjrvb':'canAccessRoom','pivRq':'Accounts_AllowAnonymousRead','GLrOW':function(callee,param1,param2){return callee(param1,param2);},'bUBgJ':function(callee,param1){return callee(param1);}};check(rid,String);if(!Meteor['userId']()&&cHEjeo['Nddvh'](settings['get']('Accounts_AllowAnonymousRead'),![])){throw new Meteor[('Error')]('error-invalid-user',cHEjeo['KGrgO'],{'method':cHEjeo['WdEas']});}const fromId=Meteor['userId']();const room=Meteor['call'](cHEjeo['fjrvb'],rid,fromId);if(!room){return![];}const canAnonymous=settings['get'](cHEjeo['pivRq']);const canPreview=cHEjeo['GLrOW'](hasPermission,fromId,'preview-c-room');if(cHEjeo['Nddvh'](room['t'],'c')&&!canAnonymous&&!canPreview&&!Subscriptions['findOneByRoomIdAndUserId'](rid,fromId,{'fields':{'_id':0x1}})){return![];}return cHEjeo['bUBgJ'](loadMessageHistory,{'userId':fromId,'rid':rid,'end':end,'limit':limit,'ls':ls,'showThreadMessages':showThreadMessages});}});