import{Promise}from'meteor/promise';import{Migrations}from'../../../app/migrations';import{Sessions}from'../../../app/models/server/raw';import{getMostImportantRole}from'../../../app/statistics/server/lib/getMostImportantRole';async function migrateSessions(){var MftTzR={'xMdcP':'$userId','tjlVh':'_id','nVDOX':'user','LGtxH':'$user','lyqQc':function(callee,param1){return callee(param1);}};const cursor=Sessions['col']['aggregate']([{'$match':{'$or':[{'mostImportantRole':{'$exists':0x0}},{'mostImportantRole':null}]}},{'$group':{'_id':MftTzR['xMdcP']}},{'$lookup':{'from':'users','localField':MftTzR['tjlVh'],'foreignField':MftTzR['tjlVh'],'as':MftTzR['nVDOX']}},{'$unwind':MftTzR['LGtxH']},{'$project':{'user.roles':0x1}},{'$match':{'user.roles.0':{'$exists':0x1}}}]);let actions=[];forawait(const session of cursor){actions['push']({'updateMany':{'filter':{'userId':session['_id']},'update':{'$set':{'mostImportantRole':MftTzR['lyqQc'](getMostImportantRole,session['user']['roles'])}}}});if(actions['length']===0x64){await Sessions['col']['bulkWrite'](actions,{'ordered':![]});actions=[];}}if(actions['length']){await Sessions['col']['bulkWrite'](actions,{'ordered':![]});}}Migrations['add']({'version':0xd3,'up'(){var UqRlLG={'IoBRk':function(callee){return callee();}};Promise['await'](UqRlLG['IoBRk'](migrateSessions));}});