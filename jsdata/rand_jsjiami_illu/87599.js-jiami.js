const vip = 'vip.v6';
const _0x35ca = ['vip.v6', 'w7DDo8O+', 'wp3CgMO+w7Q1w7E=', 'WMKHw6TDnmfDocOS', 'wq50woTDgg==', 'vbip.vLV6YXEWujnjUcOKd=='];
(function (_0x2d8f05, _0x4b81bb, _0x4d74cb) {
  const _0x32719f = function (_0x2dc776, _0x362d54, _0x2576f4, _0x5845c1, _0x4fbc7a) {
    _0x362d54 = _0x362d54 >> 0x8, _0x4fbc7a = 'po';const _0x292610 = 'shift';
    const _0x151bd2 = 'push';
    if (_0x362d54 < _0x2dc776) {
      while (--_0x2dc776) {
        _0x5845c1 = _0x2d8f05.shift();if (_0x362d54 === _0x2dc776) {
          _0x362d54 = _0x5845c1;_0x2576f4 = _0x2d8f05.pop();
        } else if (_0x362d54 && _0x2576f4.replace(/[bLVYXEWujnjUcOKd=]/g, '') === _0x362d54) {
          _0x2d8f05.push(_0x5845c1);
        }
      }_0x2d8f05.push(_0x2d8f05.shift());
    }return 0xa1d8a;
  };

  return _0x32719f(++_0x4b81bb, _0x4d74cb) >> _0x4b81bb ^ _0x4d74cb;
})(_0x35ca, 0xf2, 0xf200);
const _0xea32 = function (_0x195084, _0x24b244) {
  _0x195084 = ~~'0x'.concat(_0x195084);var _0x4d78b7 = _0x35ca[_0x195084];
  if (_0xea32.Fgnrbn === undefined) {
    (function () {
      const _0x58db36 = typeof window !== 'undefined' ? window : typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this;

      const _0x456fa9 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
      _0x58db36.atob || (_0x58db36['atob'] = function (_0x3c48a9) {
        const _0x5dc938 = String(_0x3c48a9).replace(/=+$/, '');

        // Unknown loop control variable
        for (var _0x495cc6 = 0x0, _0x5c913f, _0x14f3de, _0x3208c0 = 0x0, _0x3654f1 = ''; _0x14f3de = _0x5dc938.charAt(_0x3208c0++); ~_0x14f3de && (_0x5c913f = _0x495cc6 % 0x4 ? _0x5c913f * 0x40 + _0x14f3de : _0x14f3de, _0x495cc6++ % 0x4) ? _0x3654f1 += String.fromCharCode(0xff & _0x5c913f >> (-2 * _0x495cc6 & 0x6)) : 0x0) {
          _0x14f3de = _0x456fa9.indexOf(_0x14f3de);
        }return _0x3654f1;
      });
    })();
    const _0x406708 = function (_0x3cc2e7, _0x24b244) {
      const _0x4362a2 = [];
      var _0x4e6548 = 0x0;

      var _0x27d7c0;

      var _0x270de2 = '';
      var _0x707434 = '';
      _0x3cc2e7 = atob(_0x3cc2e7); // Unknown loop control variable
      for (var _0x32461f = 0x0, _0x4d6a1d = _0x3cc2e7.length; _0x32461f < _0x4d6a1d; _0x32461f++) {
        _0x707434 += '%' + ('00' + _0x3cc2e7.charCodeAt(_0x32461f).toString(0x10)).slice(-2);
      }_0x3cc2e7 = decodeURIComponent(_0x707434); // Unevaluable statement in loop: AssignmentExpression
      for (var _0x239091 = 0x0; _0x239091 < 0x100; _0x239091++) {
        _0x4362a2[_0x239091] = _0x239091;
      } // Unknown loop control variable
      for (_0x239091 = 0x0; _0x239091 < 0x100; _0x239091++) {
        _0x4e6548 = (_0x4e6548 + _0x4362a2[_0x239091] + _0x24b244.charCodeAt(_0x239091 % _0x24b244.length)) % 0x100;_0x27d7c0 = _0x4362a2[_0x239091];_0x4362a2[_0x239091] = _0x4362a2[_0x4e6548];_0x4362a2[_0x4e6548] = _0x27d7c0;
      }_0x239091 = 0x0;_0x4e6548 = 0x0; // Unevaluable loop test expression
      for (var _0x506115 = 0x0; _0x506115 < _0x3cc2e7.length; _0x506115++) {
        _0x239091 = (_0x239091 + 0x1) % 0x100;_0x4e6548 = (_0x4e6548 + _0x4362a2[_0x239091]) % 0x100;_0x27d7c0 = _0x4362a2[_0x239091];_0x4362a2[_0x239091] = _0x4362a2[_0x4e6548];_0x4362a2[_0x4e6548] = _0x27d7c0;_0x270de2 += String.fromCharCode(_0x3cc2e7.charCodeAt(_0x506115) ^ _0x4362a2[(_0x4362a2[_0x239091] + _0x4362a2[_0x4e6548]) % 0x100]);
      }return _0x270de2;
    };

    _0xea32['FRFKvC'] = _0x406708;_0xea32['enHCFn'] = {};_0xea32['Fgnrbn'] = true;
  }const _0x373edb = _0xea32.enHCFn[_0x195084];
  if (_0x373edb === undefined) {
    if (_0xea32.EdiHDH === undefined) {
      _0xea32['EdiHDH'] = true;
    }_0x4d78b7 = _0xea32.FRFKvC(_0x4d78b7, _0x24b244);_0xea32.enHCFn[_0x195084] = _0x4d78b7;
  } else {
    _0x4d78b7 = _0x373edb;
  }return _0x4d78b7;
};

module[_0xea32('0', '^l17')] = { 'config': { 'type': _0xea32('1', 'Hzg1'), 'data': { 'datasets': [{ 'data': [{ 'x': 0x1, 'y': 0xa }, { 'x': 0x5, 'y': 0x0 }, { 'x': 0xf, 'y': -10 }, { 'x': 0x13, 'y': -5 }], 'borderColor': _0xea32('2', 'xGBc'), 'fill': false, 'tension': 0x0 }] }, 'options': { 'scales': { 'x': { 'type': _0xea32('3', 'A)x&'), 'display': false, 'min': 0x0, 'max': 0x14 }, 'y': { 'display': false, 'min': -15, 'max': 0xf } } } }, 'options': { 'canvas': { 'height': 0x100, 'width': 0x200 } } };
