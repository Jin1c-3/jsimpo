{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "compact"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x45a13c"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x51a0e7"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "let"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x4a977e"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x45a13c"
                            },
                            "right": {
                                "type": "Literal",
                                "value": null,
                                "raw": "null"
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x4a977e"
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "ForOfStatement",
                        "left": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "_0x2c29e8"
                                    },
                                    "init": null
                                }
                            ],
                            "kind": "const"
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "_0x45a13c"
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2c29e8"
                                        },
                                        "right": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x4a977e"
                                                },
                                                "property": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x51a0e7"
                                                    },
                                                    "prefix": false
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x2c29e8"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Identifier",
                            "name": "_0x4a977e"
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}