{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "hasUnicodeWord"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "RegExp"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "prototype",
                                        "raw": "'prototype'"
                                    }
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "test",
                                    "raw": "'test'"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": "bind",
                                "raw": "'bind'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": {},
                                "raw": "/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/",
                                "regex": {
                                    "pattern": "[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]",
                                    "flags": ""
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "reAsciiWord"
                    },
                    "init": {
                        "type": "Literal",
                        "value": {},
                        "raw": "/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g",
                        "regex": {
                            "pattern": "[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+",
                            "flags": "g"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "asciiWords"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x2cd49a"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x2cd49a"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "match",
                                    "raw": "'match'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "reAsciiWord"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "words"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x449449"
                },
                {
                    "type": "Identifier",
                    "name": "_0x363bee"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x363bee"
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "undefined"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x2b884e"
                                            },
                                            "init": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "hasUnicodeWord"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x449449"
                                                        }
                                                    ]
                                                },
                                                "consequent": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x1d94a4"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x449449"
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "asciiWords"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x449449"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "const"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2b884e"
                                        },
                                        "right": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        }
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x449449"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "match",
                                        "raw": "'match'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x363bee"
                                    }
                                ]
                            },
                            "right": {
                                "type": "ArrayExpression",
                                "elements": []
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}