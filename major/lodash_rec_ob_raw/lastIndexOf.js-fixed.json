{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "lastIndexOf"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x4b9739"
                },
                {
                    "type": "Identifier",
                    "name": "_0x3298db"
                },
                {
                    "type": "Identifier",
                    "name": "_0x4b24ab"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x76d8c3"
                                },
                                "init": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x4b9739"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": null,
                                            "raw": "null"
                                        }
                                    },
                                    "consequent": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    },
                                    "alternate": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x4b9739"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "length",
                                            "raw": "'length'"
                                        }
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x76d8c3"
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                },
                                "prefix": true
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2c28ef"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0x76d8c3"
                                }
                            }
                        ],
                        "kind": "let"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x4b24ab"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                        }
                                    },
                                    "right": {
                                        "type": "SequenceExpression",
                                        "expressions": [
                                            {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x2c28ef"
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x276b8c"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4b24ab"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x2c28ef"
                                                },
                                                "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x2c28ef"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Math"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "max",
                                                                "raw": "'max'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x76d8c3"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2c28ef"
                                                                }
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        ]
                                                    },
                                                    "alternate": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Math"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "min",
                                                                "raw": "'min'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x2c28ef"
                                                            },
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x76d8c3"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "0x1"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x3298db"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x3298db"
                                        }
                                    },
                                    "consequent": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x122efb"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4b9739"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x3298db"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2c28ef"
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x48a809"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4b9739"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x36bdfb"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2c28ef"
                                            },
                                            {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    },
                                                    "prefix": true
                                                },
                                                "prefix": true
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}