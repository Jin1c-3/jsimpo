{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "maxBy"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x127212"
                },
                {
                    "type": "Identifier",
                    "name": "_0x3b9c89"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x1ecca2"
                                },
                                "init": null
                            }
                        ],
                        "kind": "let"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x127212"
                            },
                            "right": {
                                "type": "Literal",
                                "value": null,
                                "raw": "null"
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x1ecca2"
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x189c2a"
                                },
                                "init": null
                            }
                        ],
                        "kind": "let"
                    },
                    {
                        "type": "ForOfStatement",
                        "left": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "_0x10fa0d"
                                    },
                                    "init": null
                                }
                            ],
                            "kind": "const"
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "_0x127212"
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x1e1dbf"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x3b9c89"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x10fa0d"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "const"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "!=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x1e1dbf"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            },
                                            "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x189c2a"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "undefined"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x1e1dbf"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_0x1e1dbf"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x24c047"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1e1dbf"
                                                                }
                                                            ]
                                                        },
                                                        "prefix": true
                                                    }
                                                },
                                                "alternate": {
                                                    "type": "BinaryExpression",
                                                    "operator": ">",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x1e1dbf"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x189c2a"
                                                    }
                                                }
                                            }
                                        },
                                        "right": {
                                            "type": "SequenceExpression",
                                            "expressions": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x189c2a"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x1e1dbf"
                                                    }
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x1ecca2"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x10fa0d"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Identifier",
                            "name": "_0x1ecca2"
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}