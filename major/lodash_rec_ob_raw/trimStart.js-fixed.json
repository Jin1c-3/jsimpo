{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "methodName"
                    },
                    "init": {
                        "type": "ConditionalExpression",
                        "test": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "trimLeft",
                                "raw": "'trimLeft'"
                            }
                        },
                        "consequent": {
                            "type": "Literal",
                            "value": "trimLeft",
                            "raw": "'trimLeft'"
                        },
                        "alternate": {
                            "type": "Literal",
                            "value": "trimStart",
                            "raw": "'trimStart'"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "trimStart"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x4d62b8"
                },
                {
                    "type": "Identifier",
                    "name": "_0x41a6fa"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x4d62b8"
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x41a6fa"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "undefined"
                                }
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x4d62b8"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "methodName"
                                    }
                                },
                                "arguments": []
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x4d62b8"
                                },
                                "prefix": true
                            },
                            "right": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x41a6fa"
                                },
                                "prefix": true
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x4d62b8"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x45efd6"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x2b0fc0"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x4d62b8"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x5ca147"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x15c0c3"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x45efd6"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x2b0fc0"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x41a6fa"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x5a76a4"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x45efd6"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x5ca147"
                                        }
                                    ]
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "join",
                                    "raw": "'join'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}