{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "mapTag"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "[object Map]",
                        "raw": "'[object Map]'"
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "setTag"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "[object Set]",
                        "raw": "'[object\\x20Set]'"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "size"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0xacd841"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "left": {
                                "type": "Identifier",
                                "name": "_0xacd841"
                            },
                            "right": {
                                "type": "Literal",
                                "value": null,
                                "raw": "null"
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x388252"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0xacd841"
                                }
                            ]
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "ConditionalExpression",
                                "test": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x46519f"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0xacd841"
                                        }
                                    ]
                                },
                                "consequent": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x1aa694"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0xacd841"
                                        }
                                    ]
                                },
                                "alternate": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0xacd841"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "length",
                                        "raw": "'length'"
                                    }
                                }
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x292a14"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x36673a"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0xacd841"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x292a14"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "mapTag"
                                }
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x292a14"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "setTag"
                                }
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0xacd841"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "size",
                                    "raw": "'size'"
                                }
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Object"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "keys",
                                        "raw": "'keys'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0xacd841"
                                    }
                                ]
                            },
                            "property": {
                                "type": "Literal",
                                "value": "length",
                                "raw": "'length'"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}