{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "padStart"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0xdaaf1e"
                },
                {
                    "type": "Identifier",
                    "name": "_0x512050"
                },
                {
                    "type": "Identifier",
                    "name": "_0x481218"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x170fcb"
                                },
                                "init": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "Identifier",
                                        "name": "_0x512050"
                                    },
                                    "consequent": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x22ff20"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0xdaaf1e"
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x512050"
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x170fcb"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x512050"
                                    }
                                }
                            },
                            "consequent": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x17fb37"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0x512050"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x170fcb"
                                            }
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x481218"
                                        }
                                    ]
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0xdaaf1e"
                                }
                            },
                            "alternate": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0xdaaf1e"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        }
    ],
    "sourceType": "script"
}