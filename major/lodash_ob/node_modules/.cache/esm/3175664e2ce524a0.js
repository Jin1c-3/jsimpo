let assert,slice,defer;_2ce‍.w("assert",[["default",["assert"],function(v){assert=v}]]);_2ce‍.w("./utils.js",[["slice",["slice"],function(v){slice=v}]]);_2ce‍.w("../defer.js",[["default",["defer"],function(v){defer=v}]]);



describe('defer', function() {
  it('should defer `func` execution', function(done) {
    var pass = false;
    defer(function() { pass = true; });

    setTimeout(function() {
      assert.ok(pass);
      done();
    }, 32);
  });

  it('should provide additional arguments to `func`', function(done) {
    var args;

    defer(function() {
      args = slice.call(arguments);
    }, 1, 2);

    setTimeout(function() {
      assert.deepStrictEqual(args, [1, 2]);
      done();
    }, 32);
  });

  it('should be cancelable', function(done) {
    var pass = true,
        timerId = defer(function() { pass = false; });

    clearTimeout(timerId);

    setTimeout(function() {
      assert.ok(pass);
      done();
    }, 32);
  });
});
