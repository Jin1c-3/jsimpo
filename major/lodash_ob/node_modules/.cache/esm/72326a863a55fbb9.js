let assert,lodashStable,empties,stubNaN,mean;_3a5‍.w("assert",[["default",["assert"],function(v){assert=v}]]);_3a5‍.w("lodash",[["default",["lodashStable"],function(v){lodashStable=v}]]);_3a5‍.w("./utils.js",[["empties",["empties"],function(v){empties=v}],["stubNaN",["stubNaN"],function(v){stubNaN=v}]]);_3a5‍.w("../mean.js",[["default",["mean"],function(v){mean=v}]]);




describe('mean', function() {
  it('should return the mean of an array of numbers', function() {
    var array = [4, 2, 8, 6];
    assert.strictEqual(mean(array), 5);
  });

  it('should return `NaN` when passing empty `array` values', function() {
    var expected = lodashStable.map(empties, stubNaN),
        actual = lodashStable.map(empties, mean);

    assert.deepStrictEqual(actual, expected);
  });
});
