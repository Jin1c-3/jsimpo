let assert,lodashStable,falsey,defaultTo;_2ce‍.w("assert",[["default",["assert"],function(v){assert=v}]]);_2ce‍.w("lodash",[["default",["lodashStable"],function(v){lodashStable=v}]]);_2ce‍.w("./utils.js",[["falsey",["falsey"],function(v){falsey=v}]]);_2ce‍.w("../defaultTo.js",[["default",["defaultTo"],function(v){defaultTo=v}]]);




describe('defaultTo', function() {
  it('should return a default value if `value` is `NaN` or nullish', function() {
    var expected = lodashStable.map(falsey, function(value) {
      return (value == null || value !== value) ? 1 : value;
    });

    var actual = lodashStable.map(falsey, function(value) {
      return defaultTo(value, 1);
    });

    assert.deepStrictEqual(actual, expected);
  });
});
