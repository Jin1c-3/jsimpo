let baseFindIndex,baseIsNaN,strictIndexOf;_0a3‍.x([["default",()=>_0a3‍.o]]);_0a3‍.w("./baseFindIndex.js",[["default",["baseFindIndex"],function(v){baseFindIndex=v}]]);_0a3‍.w("./baseIsNaN.js",[["default",["baseIsNaN"],function(v){baseIsNaN=v}]]);_0a3‍.w("./strictIndexOf.js",[["default",["strictIndexOf"],function(v){strictIndexOf=v}]]);



/**
 * The base implementation of `indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex)
}

_0a3‍.d(baseIndexOf);
