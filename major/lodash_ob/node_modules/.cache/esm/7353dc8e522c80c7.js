let assert,lodashStable,stubB,result;_522‍.w("assert",[["default",["assert"],function(v){assert=v}]]);_522‍.w("lodash",[["default",["lodashStable"],function(v){lodashStable=v}]]);_522‍.w("./utils.js",[["stubB",["stubB"],function(v){stubB=v}]]);_522‍.w("../result.js",[["default",["result"],function(v){result=v}]]);




describe('result', function() {
  var object = { 'a': 1, 'b': stubB };

  it('should invoke function values', function() {
    assert.strictEqual(result(object, 'b'), 'b');
  });

  it('should invoke default function values', function() {
    var actual = result(object, 'c', object.b);
    assert.strictEqual(actual, 'b');
  });

  it('should invoke nested function values', function() {
    var value = { 'a': lodashStable.constant({ 'b': stubB }) };

    lodashStable.each(['a.b', ['a', 'b']], function(path) {
      assert.strictEqual(result(value, path), 'b');
    });
  });

  it('should invoke deep property methods with the correct `this` binding', function() {
    var value = { 'a': { 'b': function() { return this.c; }, 'c': 1 } };

    lodashStable.each(['a.b', ['a', 'b']], function(path) {
      assert.strictEqual(result(value, path), 1);
    });
  });
});
