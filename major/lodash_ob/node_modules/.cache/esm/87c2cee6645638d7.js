let assert,lodashStable,escape,unescape;_645‍.w("assert",[["default",["assert"],function(v){assert=v}]]);_645‍.w("lodash",[["default",["lodashStable"],function(v){lodashStable=v}]]);_645‍.w("../escape.js",[["default",["escape"],function(v){escape=v}]]);_645‍.w("../unescape.js",[["default",["unescape"],function(v){unescape=v}]]);




describe('escape', function() {
  var escaped = '&amp;&lt;&gt;&quot;&#39;/',
      unescaped = '&<>"\'/';

  escaped += escaped;
  unescaped += unescaped;

  it('should escape values', function() {
    assert.strictEqual(escape(unescaped), escaped);
  });

  it('should handle strings with nothing to escape', function() {
    assert.strictEqual(escape('abc'), 'abc');
  });

  it('should escape the same characters unescaped by `_.unescape`', function() {
    assert.strictEqual(escape(unescape(escaped)), escaped);
  });

  lodashStable.each(['`', '/'], function(chr) {
    it('should not escape the "' + chr + '" character', function() {
      assert.strictEqual(escape(chr), chr);
    });
  });
});
