let castPath,toKey;_b06‍.x([["default",()=>_b06‍.o]]);_b06‍.w("./castPath.js",[["default",["castPath"],function(v){castPath=v}]]);_b06‍.w("./toKey.js",[["default",["toKey"],function(v){toKey=v}]]);


/**
 * The base implementation of `get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object)

  let index = 0
  const length = path.length

  while (object != null && index < length) {
    object = object[toKey(path[index++])]
  }
  return (index && index == length) ? object : undefined
}

_b06‍.d(baseGet);
