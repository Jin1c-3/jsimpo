{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "ObjectExpression",
                    "properties": [
                        {
                            "type": "Property",
                            "key": {
                                "type": "Literal",
                                "value": "findBundle",
                                "raw": "'findBundle'"
                            },
                            "computed": false,
                            "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0xf3c9af"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_0x1a2a4b"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "b.js",
                                                        "raw": "'b.js'"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "deep/path/a.js",
                                                        "raw": "'deep/path/a.js'"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "somewhere/c.js",
                                                        "raw": "'somewhere/c.js'"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                        }
                    ]
                }
            }
        }
    ],
    "sourceType": "script"
}