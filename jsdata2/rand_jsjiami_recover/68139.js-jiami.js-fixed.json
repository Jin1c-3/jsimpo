{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "it"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "should handle var injection in require.ensure with error callback",
                        "raw": "'should handle var injection in require.ensure with error callback'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x5e6ae9"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "require"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "ensure",
                                                "raw": "'ensure'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "ArrayExpression",
                                                "elements": []
                                            },
                                            {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x38d40a"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x38d40a"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "./empty",
                                                                        "raw": "'./empty'"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4b0395"
                                                                    },
                                                                    "init": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "module"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "x",
                                                                            "raw": "'x'"
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5e6ae9"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x123770"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": []
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "chunk-with-var-inject",
                                                "raw": "'chunk-with-var-inject'"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}