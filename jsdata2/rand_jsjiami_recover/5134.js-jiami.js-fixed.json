{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "assert",
                                "raw": "'assert'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "path"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".",
                                "raw": "'.'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "isWindows"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "process"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "platform",
                                "raw": "'platform'"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": "win32",
                            "raw": "'win32'"
                        }
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "f"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "Identifier",
                            "name": "__dirname"
                        },
                        "right": {
                            "type": "Literal",
                            "value": "/simple/test-path.js",
                            "raw": "'/simple/test-path.js'"
                        }
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "f"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "test-path.js",
                        "raw": "'test-path.js'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "f"
                            },
                            {
                                "type": "Literal",
                                "value": ".js",
                                "raw": "'.js'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "test-path",
                        "raw": "'test-path'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/dir/basename.ext",
                                "raw": "'/dir/basename.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "basename.ext",
                        "raw": "'basename.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/basename.ext",
                                "raw": "'/basename.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "basename.ext",
                        "raw": "'basename.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "basename.ext",
                                "raw": "'basename.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "basename.ext",
                        "raw": "'basename.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "basename.ext/",
                                "raw": "'basename.ext/'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "basename.ext",
                        "raw": "'basename.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "basename",
                                "raw": "'basename'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "basename.ext//",
                                "raw": "'basename.ext//'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "basename.ext",
                        "raw": "'basename.ext'"
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "EMihKv"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Literal",
                                            "value": "3|4|2|0|1",
                                            "raw": "'3|4|2|0|1'"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "FmOOLS"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "EMihKv"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "FmOOLS"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "basename.ext\\",
                                                                        "raw": "'basename.ext\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext",
                                                                "raw": "'basename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "basename.ext\\\\",
                                                                        "raw": "'basename.ext\\\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext",
                                                                "raw": "'basename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "basename.ext",
                                                                        "raw": "'basename.ext'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext",
                                                                "raw": "'basename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\dir\\basename.ext",
                                                                        "raw": "'\\dir\\basename.ext'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext",
                                                                "raw": "'basename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\basename.ext",
                                                                        "raw": "'\\x5cbasename.ext'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext",
                                                                "raw": "'basename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "tXltCX"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Literal",
                                            "value": "3|1|2|0|4",
                                            "raw": "'3|1|2|0|4'"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "gHtaep"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "tXltCX"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "gHtaep"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "basename.ext\\",
                                                                        "raw": "'basename.ext\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext\\",
                                                                "raw": "'basename.ext\\'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\basename.ext",
                                                                        "raw": "'\\basename.ext'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\basename.ext",
                                                                "raw": "'\\x5cbasename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "basename.ext",
                                                                        "raw": "'basename.ext'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext",
                                                                "raw": "'basename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\dir\\basename.ext",
                                                                        "raw": "'\\dir\\basename.ext'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\dir\\basename.ext",
                                                                "raw": "'\\dir\\basename.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "basename",
                                                                        "raw": "'basename'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "basename.ext\\\\",
                                                                        "raw": "'basename.ext\\x5c\\x5c'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "basename.ext\\\\",
                                                                "raw": "'basename.ext\\\\'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "UnaryExpression",
                "operator": "!",
                "argument": {
                    "type": "Identifier",
                    "name": "isWindows"
                },
                "prefix": true
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "controlCharFilename"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "Icon",
                                        "raw": "'Icon'"
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "String"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "fromCharCode",
                                                "raw": "'fromCharCode'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 13,
                                                "raw": "0xd"
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "basename",
                                            "raw": "'basename'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": "/a/b/",
                                                "raw": "'/a/b/'"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "controlCharFilename"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "type": "Identifier",
                                    "name": "controlCharFilename"
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": null
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "f"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".js",
                        "raw": "'.js'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "path"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "dirname",
                                        "raw": "'dirname'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "f"
                                    }
                                ]
                            },
                            "property": {
                                "type": "Literal",
                                "value": "substr",
                                "raw": "'substr'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 11,
                                    "raw": "0xb"
                                },
                                "prefix": true
                            }
                        ]
                    },
                    {
                        "type": "ConditionalExpression",
                        "test": {
                            "type": "Identifier",
                            "name": "isWindows"
                        },
                        "consequent": {
                            "type": "Literal",
                            "value": "test\\simple",
                            "raw": "'test\\simple'"
                        },
                        "alternate": {
                            "type": "Literal",
                            "value": "test/simple",
                            "raw": "'test/simple'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "dirname",
                                "raw": "'dirname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/a/b/",
                                "raw": "'/a/b/'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "/a",
                        "raw": "'/a'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "dirname",
                                "raw": "'dirname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/a/b",
                                "raw": "'/a/b'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "/a",
                        "raw": "'/a'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "dirname",
                                "raw": "'dirname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/a",
                                "raw": "'/a'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "/",
                        "raw": "'/'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "dirname",
                                "raw": "'dirname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "dirname",
                                "raw": "'dirname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/",
                                "raw": "'/'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "/",
                        "raw": "'/'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "dirname",
                                "raw": "'dirname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "////",
                                "raw": "'////'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "/",
                        "raw": "'/'"
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "Cgcfps"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Literal",
                                            "value": "10|5|23|13|14|12|19|1|21|9|16|11|20|7|2|18|0|8|3|22|17|4|15|6",
                                            "raw": "'10|5|23|13|14|12|19|1|21|9|16|11|20|7|2|18|0|8|3|22|17|4|15|6'"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "EysdLc"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Cgcfps"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "EysdLc"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:foo\\bar\\",
                                                                        "raw": "'c:foo\\bar\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:foo",
                                                                "raw": "'c:foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\foo",
                                                                        "raw": "'\\x5cfoo'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\",
                                                                "raw": "'\\x5c'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:foo\\",
                                                                        "raw": "'c:foo\\x5c'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\\\unc\\share",
                                                                        "raw": "'\\\\unc\\share'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\unc\\share",
                                                                "raw": "'\\\\unc\\share'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\\\unc\\share\\foo\\bar",
                                                                        "raw": "'\\\\unc\\share\\foo\\bar'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\unc\\share\\foo",
                                                                "raw": "'\\\\unc\\share\\foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "5",
                                                "raw": "'5'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:\\foo",
                                                                        "raw": "'c:\\foo'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:\\",
                                                                "raw": "'c:\\'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "6",
                                                "raw": "'6'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\\\unc\\share\\foo\\bar\\baz",
                                                                        "raw": "'\\\\unc\\share\\foo\\bar\\baz'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\unc\\share\\foo\\bar",
                                                                "raw": "'\\x5c\\x5cunc\\x5cshare\\x5cfoo\\x5cbar'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "7",
                                                "raw": "'7'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:foo",
                                                                        "raw": "'c:foo'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "8",
                                                "raw": "'8'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:foo\\bar\\baz",
                                                                        "raw": "'c:foo\\bar\\baz'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:foo\\bar",
                                                                "raw": "'c:foo\\bar'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "9",
                                                "raw": "'9'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\foo\\bar",
                                                                        "raw": "'\\x5cfoo\\x5cbar'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\foo",
                                                                "raw": "'\\foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "10",
                                                "raw": "'10'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:\\",
                                                                        "raw": "'c:\\x5c'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:\\",
                                                                "raw": "'c:\\'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "11",
                                                "raw": "'11'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\foo\\bar\\baz",
                                                                        "raw": "'\\foo\\bar\\baz'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\foo\\bar",
                                                                "raw": "'\\x5cfoo\\x5cbar'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "12",
                                                "raw": "'12'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:\\foo\\bar\\baz",
                                                                        "raw": "'c:\\foo\\bar\\baz'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:\\foo\\bar",
                                                                "raw": "'c:\\foo\\bar'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "13",
                                                "raw": "'13'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:\\foo\\bar",
                                                                        "raw": "'c:\\foo\\bar'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:\\foo",
                                                                "raw": "'c:\\foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "14",
                                                "raw": "'14'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:\\foo\\bar\\",
                                                                        "raw": "'c:\\foo\\bar\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:\\foo",
                                                                "raw": "'c:\\foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "15",
                                                "raw": "'15'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\\\unc\\share\\foo\\bar\\",
                                                                        "raw": "'\\\\unc\\share\\foo\\bar\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\unc\\share\\foo",
                                                                "raw": "'\\\\unc\\share\\foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "16",
                                                "raw": "'16'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\foo\\bar\\",
                                                                        "raw": "'\\foo\\bar\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\foo",
                                                                "raw": "'\\foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "17",
                                                "raw": "'17'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\\\unc\\share\\foo\\",
                                                                        "raw": "'\\x5c\\x5cunc\\x5cshare\\x5cfoo\\x5c'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\unc\\share\\",
                                                                "raw": "'\\x5c\\x5cunc\\x5cshare\\x5c'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "18",
                                                "raw": "'18'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:foo\\bar",
                                                                        "raw": "'c:foo\\bar'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:foo",
                                                                "raw": "'c:foo'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "19",
                                                "raw": "'19'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\",
                                                                        "raw": "'\\x5c'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\",
                                                                "raw": "'\\x5c'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "20",
                                                "raw": "'20'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:",
                                                                        "raw": "'c:'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "21",
                                                "raw": "'21'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\foo\\",
                                                                        "raw": "'\\foo\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\",
                                                                "raw": "'\\x5c'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "22",
                                                "raw": "'22'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\\\unc\\share\\foo",
                                                                        "raw": "'\\x5c\\x5cunc\\x5cshare\\x5cfoo'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\unc\\share\\",
                                                                "raw": "'\\\\unc\\share\\'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "23",
                                                "raw": "'23'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "dirname",
                                                                        "raw": "'dirname'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "c:\\foo\\",
                                                                        "raw": "'c:\\foo\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:\\",
                                                                "raw": "'c:\\x5c'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": null
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path/to/file",
                                "raw": "'/path/to/file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path/to/file.ext",
                                "raw": "'/path/to/file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path.to/file.ext",
                                "raw": "'/path.to/file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path.to/file",
                                "raw": "'/path.to/file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path.to/.file",
                                "raw": "'/path.to/.file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path.to/.file.ext",
                                "raw": "'/path.to/.file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path/to/f.ext",
                                "raw": "'/path/to/f.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/path/to/..ext",
                                "raw": "'/path/to/..ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file",
                                "raw": "'file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file.ext",
                                "raw": "'file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".file",
                                "raw": "'.file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".file.ext",
                                "raw": "'.file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/file",
                                "raw": "'/file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/file.ext",
                                "raw": "'/file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/.file",
                                "raw": "'/.file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "/.file.ext",
                                "raw": "'/.file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".path/file.ext",
                                "raw": "'.path/file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file.ext.ext",
                                "raw": "'file.ext.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file.",
                                "raw": "'file.'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".",
                                "raw": "'.'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./",
                                "raw": "'./'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".file.ext",
                                "raw": "'.file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".file",
                                "raw": "'.file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".file.",
                                "raw": "'.file.'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": ".file..",
                                "raw": "'.file..'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "..",
                                "raw": "'..'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../",
                                "raw": "'../'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "..file.ext",
                                "raw": "'..file.ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "..file",
                                "raw": "'..file'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".file",
                        "raw": "'.file'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "..file.",
                                "raw": "'..file.'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "..file..",
                                "raw": "'..file..'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "...",
                                "raw": "'...'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "...ext",
                                "raw": "'...ext'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "....",
                                "raw": "'....'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file.ext/",
                                "raw": "'file.ext/'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file.ext//",
                                "raw": "'file.ext//'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".ext",
                        "raw": "'.ext'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file/",
                                "raw": "'file/'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file//",
                                "raw": "'file//'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file./",
                                "raw": "'file./'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "path"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "extname",
                                "raw": "'extname'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "file.//",
                                "raw": "'file.//'"
                            }
                        ]
                    },
                    {
                        "type": "Literal",
                        "value": ".",
                        "raw": "'.'"
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": ".\\",
                                            "raw": "'.\\x5c'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "..\\",
                                            "raw": "'..\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.ext\\",
                                            "raw": "'file.ext\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".ext",
                                    "raw": "'.ext'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.ext\\\\",
                                            "raw": "'file.ext\\\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".ext",
                                    "raw": "'.ext'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file\\",
                                            "raw": "'file\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file\\\\",
                                            "raw": "'file\\x5c\\x5c'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.\\",
                                            "raw": "'file.\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".",
                                    "raw": "'.'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.\\\\",
                                            "raw": "'file.\\\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".",
                                    "raw": "'.'"
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": ".\\",
                                            "raw": "'.\\x5c'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "..\\",
                                            "raw": "'..\\x5c'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".\\",
                                    "raw": "'.\\x5c'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.ext\\",
                                            "raw": "'file.ext\\x5c'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".ext\\",
                                    "raw": "'.ext\\'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.ext\\\\",
                                            "raw": "'file.ext\\\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".ext\\\\",
                                    "raw": "'.ext\\\\'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file\\",
                                            "raw": "'file\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file\\\\",
                                            "raw": "'file\\x5c\\x5c'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": "",
                                    "raw": "''"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.\\",
                                            "raw": "'file.\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".\\",
                                    "raw": "'.\\x5c'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "extname",
                                            "raw": "'extname'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "file.\\\\",
                                            "raw": "'file.\\\\'"
                                        }
                                    ]
                                },
                                {
                                    "type": "Literal",
                                    "value": ".\\\\",
                                    "raw": "'.\\\\'"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "failures"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "joinTests"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "x/b",
                                                "raw": "'x/b'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/b/c.js",
                                                "raw": "'/b/c.js'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "x/b/c.js",
                                        "raw": "'x/b/c.js'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/.",
                                                "raw": "'/.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "x/b",
                                                "raw": "'x/b'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/b/c.js",
                                                "raw": "'/b/c.js'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/x/b/c.js",
                                        "raw": "'/x/b/c.js'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "../../../bar",
                                                "raw": "'../../../bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/bar",
                                        "raw": "'/bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "../../../bar",
                                                "raw": "'../../../bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "../../bar",
                                        "raw": "'../../bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo/",
                                                "raw": "'foo/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "../../../bar",
                                                "raw": "'../../../bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "../../bar",
                                        "raw": "'../../bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo/x",
                                                "raw": "'foo/x'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "../../../bar",
                                                "raw": "'../../../bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "../bar",
                                        "raw": "'../bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo/x",
                                                "raw": "'foo/x'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "./bar",
                                                "raw": "'./bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo/x/bar",
                                        "raw": "'foo/x/bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo/x/",
                                                "raw": "'foo/x/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "./bar",
                                                "raw": "'./bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo/x/bar",
                                        "raw": "'foo/x/bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo/x/",
                                                "raw": "'foo/x/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "bar",
                                                "raw": "'bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo/x/bar",
                                        "raw": "'foo/x/bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "./",
                                                "raw": "'./'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "./",
                                        "raw": "'./'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "./",
                                                "raw": "'./'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "./",
                                        "raw": "'./'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "./",
                                                "raw": "'./'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/./",
                                                "raw": "'/./'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/////./",
                                                "raw": "'/////./'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo",
                                        "raw": "'foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/bar",
                                                "raw": "'/bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo/bar",
                                        "raw": "'foo/bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo",
                                        "raw": "'foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo",
                                        "raw": "'foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo/",
                                                "raw": "'foo/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo/",
                                        "raw": "'foo/'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/bar",
                                                "raw": "'/bar'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "foo/bar",
                                        "raw": "'foo/bar'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "./",
                                                "raw": "'./'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "../foo",
                                        "raw": "'../foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "./",
                                                "raw": "'./'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "../../foo",
                                        "raw": "'../../foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "../../foo",
                                        "raw": "'../../foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "../../foo",
                                        "raw": "'../../foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/",
                                        "raw": "'/'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/",
                                        "raw": "'/'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/",
                                        "raw": "'/'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "..",
                                                "raw": "'..'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/",
                                        "raw": "'/'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": ".",
                                        "raw": "'.'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": " /foo",
                                                "raw": "'\\x20/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": " /foo",
                                        "raw": "' /foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": " ",
                                                "raw": "'\\x20'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": " /foo",
                                        "raw": "' /foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": " ",
                                                "raw": "'\\x20'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": ".",
                                                "raw": "'.'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": " ",
                                        "raw": "'\\x20'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": " ",
                                                "raw": "'\\x20'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": " /",
                                        "raw": "'\\x20/'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": " ",
                                                "raw": "'\\x20'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": " ",
                                        "raw": "'\\x20'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "//foo",
                                                "raw": "'//foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "foo",
                                                "raw": "'foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/",
                                                "raw": "'/'"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": "/foo",
                                                "raw": "'/foo'"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Literal",
                                        "value": "/foo",
                                        "raw": "'/foo'"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "Identifier",
                                "name": "joinTests"
                            },
                            "right": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "joinTests"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "concat",
                                        "raw": "'concat'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "ArrayExpression",
                                        "elements": [
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo/bar",
                                                                "raw": "'//foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\/foo/bar",
                                                                "raw": "'\\/foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\foo/bar",
                                                                "raw": "'\\x5c\\x5cfoo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo",
                                                                "raw": "'//foo'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "bar",
                                                                "raw": "'bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo/",
                                                                "raw": "'//foo/'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "bar",
                                                                "raw": "'bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo",
                                                                "raw": "'//foo'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/bar",
                                                                "raw": "'/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo",
                                                                "raw": "'//foo'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "bar",
                                                                "raw": "'bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo/",
                                                                "raw": "'//foo/'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "bar",
                                                                "raw": "'bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo/",
                                                                "raw": "'//foo/'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/bar",
                                                                "raw": "'/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo",
                                                                "raw": "'//foo'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "bar",
                                                                "raw": "'bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo/",
                                                                "raw": "'//foo/'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "bar",
                                                                "raw": "'bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo/",
                                                                "raw": "'//foo/'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/bar",
                                                                "raw": "'/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "//foo/bar/",
                                                        "raw": "'//foo/bar/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\",
                                                                "raw": "'\\x5c'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "foo/bar",
                                                                "raw": "'foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\",
                                                                "raw": "'\\x5c'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/foo/bar",
                                                                "raw": "'/foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/",
                                                                "raw": "'/'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/foo/bar",
                                                                "raw": "'/foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//",
                                                                "raw": "'//'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "foo/bar",
                                                                "raw": "'foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//",
                                                                "raw": "'//'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/foo/bar",
                                                                "raw": "'/foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\",
                                                                "raw": "'\\x5c\\x5c'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/",
                                                                "raw": "'/'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/foo/bar",
                                                                "raw": "'/foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//",
                                                                "raw": "'//'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/",
                                                        "raw": "'/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo",
                                                                "raw": "'//foo'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo",
                                                        "raw": "'/foo'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo/",
                                                                "raw": "'//foo/'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/",
                                                        "raw": "'/foo/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo",
                                                                "raw": "'//foo'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/",
                                                                "raw": "'/'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/",
                                                        "raw": "'/foo/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "//foo",
                                                                "raw": "'//foo'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/",
                                                                "raw": "'/'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/",
                                                        "raw": "'/foo/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "///foo/bar",
                                                                "raw": "'///foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "////foo",
                                                                "raw": "'////foo'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "bar",
                                                                "raw": "'bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\\\/foo/bar",
                                                                "raw": "'\\\\\\/foo/bar'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "/foo/bar",
                                                        "raw": "'/foo/bar'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:.",
                                                        "raw": "'c:.'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:.",
                                                                "raw": "'c:.'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:.",
                                                        "raw": "'c:.'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:.",
                                                        "raw": "'c:.'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:.",
                                                        "raw": "'c:.'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:.",
                                                                "raw": "'c:.'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/",
                                                                "raw": "'/'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:./",
                                                        "raw": "'c:./'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:.",
                                                                "raw": "'c:.'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "file",
                                                                "raw": "'file'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:file",
                                                        "raw": "'c:file'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/",
                                                                "raw": "'/'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:/",
                                                        "raw": "'c:/'"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "c:",
                                                                "raw": "'c:'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "file",
                                                                "raw": "'file'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": "c:/file",
                                                        "raw": "'c:/file'"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "alternate": null
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "joinTests"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "forEach",
                        "raw": "'forEach'"
                    }
                },
                "arguments": [
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x54e23e"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x274c4e"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "path"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "join",
                                                            "raw": "'join'"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "apply",
                                                        "raw": "'apply'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "path"
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x54e23e"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x259a04"
                                            },
                                            "init": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                    "type": "Identifier",
                                                    "name": "isWindows"
                                                },
                                                "consequent": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x54e23e"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "replace",
                                                            "raw": "'replace'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": {},
                                                            "raw": "/\\//g",
                                                            "regex": {
                                                                "pattern": "\\/",
                                                                "flags": "g"
                                                            }
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "\\",
                                                            "raw": "'\\x5c'"
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x54e23e"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "0x1"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x1f0d6b"
                                            },
                                            "init": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x6f9f7d"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "oTTXv",
                                                                "raw": "'oTTXv'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x6f9f7d"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "ZztXI",
                                                                            "raw": "'ZztXI'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x6f9f7d"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "ZztXI",
                                                                                    "raw": "'ZztXI'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "path.join(",
                                                                                    "raw": "'path.join('"
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x54e23e"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "map",
                                                                                                    "raw": "'map'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "JSON"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "stringify",
                                                                                                        "raw": "'stringify'"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "join",
                                                                                            "raw": "'join'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": ",",
                                                                                            "raw": "','"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": ")",
                                                                            "raw": "')'"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "\n  expect=",
                                                                    "raw": "'\n  expect='"
                                                                }
                                                            },
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "JSON"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "stringify",
                                                                        "raw": "'stringify'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x259a04"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "\n  actual=",
                                                        "raw": "'\n  actual='"
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "JSON"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "stringify",
                                                            "raw": "'stringify'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x274c4e"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x274c4e"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x259a04"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "failures"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "push",
                                                    "raw": "'push'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "\n",
                                                        "raw": "'\\x0a'"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x1f0d6b"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "failures"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "failures"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "join",
                                "raw": "'join'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "joinThrowTests"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                },
                                "prefix": true
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            {
                                "type": "Literal",
                                "value": 7,
                                "raw": "0x7"
                            },
                            {
                                "type": "Literal",
                                "value": null,
                                "raw": "null"
                            },
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "undefined"
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": []
                            },
                            {
                                "type": "Identifier",
                                "name": "NaN"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "joinThrowTests"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "forEach",
                        "raw": "'forEach'"
                    }
                },
                "arguments": [
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x1d03ce"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "assert"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "throws",
                                                "raw": "'throws'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "join",
                                                                        "raw": "'join'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1d03ce"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "TypeError"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "assert"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "throws",
                                                "raw": "'throws'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "resolve",
                                                                        "raw": "'resolve'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1d03ce"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "TypeError"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "WlonUB"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Literal",
                                            "value": "3|2|4|0|1|5",
                                            "raw": "'3|2|4|0|1|5'"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "HFBOhq"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "WlonUB"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "HFBOhq"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "a//b//./c",
                                                                        "raw": "'a//b//./c'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "a\\b\\c",
                                                                "raw": "'a\\b\\c'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "a//b//.",
                                                                        "raw": "'a//b//.'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "a\\b",
                                                                "raw": "'a\\x5cb'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "/foo/../../../bar",
                                                                        "raw": "'/foo/../../../bar'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\bar",
                                                                "raw": "'\\x5cbar'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "./fixtures///b/../b/c.js",
                                                                        "raw": "'./fixtures///b/../b/c.js'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "fixtures\\b\\c.js",
                                                                "raw": "'fixtures\\x5cb\\x5cc.js'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "a//b//../b",
                                                                        "raw": "'a//b//../b'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "a\\b",
                                                                "raw": "'a\\b'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "5",
                                                "raw": "'5'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "//server/share/dir/file.ext",
                                                                        "raw": "'//server/share/dir/file.ext'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "\\\\server\\share\\dir\\file.ext",
                                                                "raw": "'\\\\server\\share\\dir\\file.ext'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "dWcrVo"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Literal",
                                            "value": "4|0|3|2|1",
                                            "raw": "'4|0|3|2|1'"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "msDCXT"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "dWcrVo"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "msDCXT"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "/foo/../../../bar",
                                                                        "raw": "'/foo/../../../bar'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "/bar",
                                                                "raw": "'/bar'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "a//b//.",
                                                                        "raw": "'a//b//.'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "a/b",
                                                                "raw": "'a/b'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "a//b//./c",
                                                                        "raw": "'a//b//./c'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "a/b/c",
                                                                "raw": "'a/b/c'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "a//b//../b",
                                                                        "raw": "'a//b//../b'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "a/b",
                                                                "raw": "'a/b'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "normalize",
                                                                        "raw": "'normalize'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "./fixtures///b/../b/c.js",
                                                                        "raw": "'./fixtures///b/../b/c.js'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "fixtures/b/c.js",
                                                                "raw": "'fixtures/b/c.js'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "resolveTests"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/blah\\blah",
                                                            "raw": "'c:/blah\\blah'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "d:/games",
                                                            "raw": "'d:/games'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:../a",
                                                            "raw": "'c:../a'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:\\blah\\a",
                                                    "raw": "'c:\\x5cblah\\x5ca'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/ignore",
                                                            "raw": "'c:/ignore'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "d:\\a/b\\c/d",
                                                            "raw": "'d:\\a/b\\c/d'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "\\e.exe",
                                                            "raw": "'\\e.exe'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "d:\\e.exe",
                                                    "raw": "'d:\\x5ce.exe'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/ignore",
                                                            "raw": "'c:/ignore'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/some/file",
                                                            "raw": "'c:/some/file'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:\\some\\file",
                                                    "raw": "'c:\\some\\file'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "d:/ignore",
                                                            "raw": "'d:/ignore'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "d:some/dir//",
                                                            "raw": "'d:some/dir//'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "d:\\ignore\\some\\dir",
                                                    "raw": "'d:\\ignore\\some\\dir'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": ".",
                                                            "raw": "'.'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "process"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "cwd",
                                                            "raw": "'cwd'"
                                                        }
                                                    },
                                                    "arguments": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "//server/share",
                                                            "raw": "'//server/share'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "..",
                                                            "raw": "'..'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "relative\\",
                                                            "raw": "'relative\\'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "\\\\server\\share\\relative",
                                                    "raw": "'\\x5c\\x5cserver\\x5cshare\\x5crelative'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/",
                                                            "raw": "'c:/'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "//",
                                                            "raw": "'//'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:\\",
                                                    "raw": "'c:\\'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/",
                                                            "raw": "'c:/'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "//dir",
                                                            "raw": "'//dir'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:\\dir",
                                                    "raw": "'c:\\dir'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/",
                                                            "raw": "'c:/'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "//server/share",
                                                            "raw": "'//server/share'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "\\\\server\\share\\",
                                                    "raw": "'\\\\server\\share\\'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/",
                                                            "raw": "'c:/'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "//server//share",
                                                            "raw": "'//server//share'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "\\\\server\\share\\",
                                                    "raw": "'\\\\server\\share\\'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "c:/",
                                                            "raw": "'c:/'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "///some//dir",
                                                            "raw": "'///some//dir'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:\\some\\dir",
                                                    "raw": "'c:\\some\\dir'"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "resolveTests"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/var/lib",
                                                            "raw": "'/var/lib'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "../",
                                                            "raw": "'../'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "file/",
                                                            "raw": "'file/'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/file",
                                                    "raw": "'/var/file'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/var/lib",
                                                            "raw": "'/var/lib'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "/../",
                                                            "raw": "'/../'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "file/",
                                                            "raw": "'file/'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/file",
                                                    "raw": "'/file'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "a/b/c/",
                                                            "raw": "'a/b/c/'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "../../..",
                                                            "raw": "'../../..'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "process"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "cwd",
                                                            "raw": "'cwd'"
                                                        }
                                                    },
                                                    "arguments": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": ".",
                                                            "raw": "'.'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "process"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "cwd",
                                                            "raw": "'cwd'"
                                                        }
                                                    },
                                                    "arguments": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/some/dir",
                                                            "raw": "'/some/dir'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": ".",
                                                            "raw": "'.'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "/absolute/",
                                                            "raw": "'/absolute/'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/absolute",
                                                    "raw": "'/absolute'"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "failures"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "resolveTests"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "forEach",
                        "raw": "'forEach'"
                    }
                },
                "arguments": [
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x2e7ddf"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x35d315"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "path"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "resolve",
                                                            "raw": "'resolve'"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "apply",
                                                        "raw": "'apply'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "path"
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x2e7ddf"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x2120d9"
                                            },
                                            "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x2e7ddf"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": 1,
                                                    "raw": "0x1"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x417bc6"
                                            },
                                            "init": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x23257e"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "cZWRe",
                                                                "raw": "'cZWRe'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x23257e"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "cZWRe",
                                                                        "raw": "'cZWRe'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "path.resolve(",
                                                                                "raw": "'path.resolve('"
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x2e7ddf"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 0,
                                                                                                    "raw": "0x0"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "map",
                                                                                                "raw": "'map'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "JSON"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "stringify",
                                                                                                    "raw": "'stringify'"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "join",
                                                                                        "raw": "'join'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": ",",
                                                                                        "raw": "','"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": ")",
                                                                            "raw": "')'"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\n  expect=",
                                                                        "raw": "'\\x0a\\x20\\x20expect='"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "JSON"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "stringify",
                                                                        "raw": "'stringify'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2120d9"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "\n  actual=",
                                                        "raw": "'\n  actual='"
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "JSON"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "stringify",
                                                            "raw": "'stringify'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x35d315"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x35d315"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x2120d9"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "failures"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "push",
                                                    "raw": "'push'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "\n",
                                                        "raw": "'\\x0a'"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x417bc6"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "failures"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "failures"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "join",
                                "raw": "'join'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "KTlOby"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Literal",
                                            "value": "4|1|3|0|7|6|2|5",
                                            "raw": "'4|1|3|0|7|6|2|5'"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "|",
                                            "raw": "'|'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "PJnsEN"
                                },
                                "init": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "SwitchStatement",
                                    "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "KTlOby"
                                        },
                                        "property": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "PJnsEN"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    "cases": [
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "0",
                                                "raw": "'0'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "C:\\Users\\",
                                                                        "raw": "'C:\\Users\\'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "1",
                                                "raw": "'1'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "\\\\server\\file",
                                                                        "raw": "'\\\\server\\file'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "2",
                                                "raw": "'2'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "directory/directory",
                                                                        "raw": "'directory/directory'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "3",
                                                "raw": "'3'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "C:/Users/",
                                                                        "raw": "'C:/Users/'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "4",
                                                "raw": "'4'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "//server/file",
                                                                        "raw": "'//server/file'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "5",
                                                "raw": "'5'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "directory\\directory",
                                                                        "raw": "'directory\\x5cdirectory'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "6",
                                                "raw": "'6'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "C:cwd\\another",
                                                                        "raw": "'C:cwd\\x5canother'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SwitchCase",
                                            "test": {
                                                "type": "Literal",
                                                "value": "7",
                                                "raw": "'7'"
                                            },
                                            "consequent": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "assert"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "equal",
                                                                "raw": "'equal'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "path"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isAbsolute",
                                                                        "raw": "'isAbsolute'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "C:cwd/another",
                                                                        "raw": "'C:cwd/another'"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContinueStatement",
                                                    "label": null
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "BreakStatement",
                                    "label": null
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "isAbsolute",
                                            "raw": "'isAbsolute'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "/home/foo",
                                            "raw": "'/home/foo'"
                                        }
                                    ]
                                },
                                {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "isAbsolute",
                                            "raw": "'isAbsolute'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "/home/foo/..",
                                            "raw": "'/home/foo/..'"
                                        }
                                    ]
                                },
                                {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "isAbsolute",
                                            "raw": "'isAbsolute'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "bar/",
                                            "raw": "'bar/'"
                                        }
                                    ]
                                },
                                {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "path"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "isAbsolute",
                                            "raw": "'isAbsolute'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "./baz",
                                            "raw": "'./baz'"
                                        }
                                    ]
                                },
                                {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "relativeTests"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/blah\\blah",
                                                    "raw": "'c:/blah\\x5cblah'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "d:/games",
                                                    "raw": "'d:/games'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "d:\\games",
                                                    "raw": "'d:\\games'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/bbbb",
                                                    "raw": "'c:/aaaa/bbbb'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa",
                                                    "raw": "'c:/aaaa'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "..",
                                                    "raw": "'..'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/bbbb",
                                                    "raw": "'c:/aaaa/bbbb'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/cccc",
                                                    "raw": "'c:/cccc'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "..\\..\\cccc",
                                                    "raw": "'..\\x5c..\\x5ccccc'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/bbbb",
                                                    "raw": "'c:/aaaa/bbbb'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/bbbb",
                                                    "raw": "'c:/aaaa/bbbb'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "''"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/bbbb",
                                                    "raw": "'c:/aaaa/bbbb'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/cccc",
                                                    "raw": "'c:/aaaa/cccc'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "..\\cccc",
                                                    "raw": "'..\\x5ccccc'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/",
                                                    "raw": "'c:/aaaa/'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/cccc",
                                                    "raw": "'c:/aaaa/cccc'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "cccc",
                                                    "raw": "'cccc'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/",
                                                    "raw": "'c:/'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "c:\\aaaa\\bbbb",
                                                    "raw": "'c:\\aaaa\\bbbb'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "aaaa\\bbbb",
                                                    "raw": "'aaaa\\x5cbbbb'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "c:/aaaa/bbbb",
                                                    "raw": "'c:/aaaa/bbbb'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "d:\\",
                                                    "raw": "'d:\\x5c'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "d:\\",
                                                    "raw": "'d:\\'"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "relativeTests"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/lib",
                                                    "raw": "'/var/lib'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/var",
                                                    "raw": "'/var'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "..",
                                                    "raw": "'..'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/lib",
                                                    "raw": "'/var/lib'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/bin",
                                                    "raw": "'/bin'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "../../bin",
                                                    "raw": "'../../bin'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/lib",
                                                    "raw": "'/var/lib'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/lib",
                                                    "raw": "'/var/lib'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "",
                                                    "raw": "''"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/lib",
                                                    "raw": "'/var/lib'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/apache",
                                                    "raw": "'/var/apache'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "../apache",
                                                    "raw": "'../apache'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/",
                                                    "raw": "'/var/'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/lib",
                                                    "raw": "'/var/lib'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "lib",
                                                    "raw": "'lib'"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "/",
                                                    "raw": "'/'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "/var/lib",
                                                    "raw": "'/var/lib'"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "var/lib",
                                                    "raw": "'var/lib'"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "failures"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "relativeTests"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "forEach",
                        "raw": "'forEach'"
                    }
                },
                "arguments": [
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x2b0ab4"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x3392ad"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "path"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "relative",
                                                        "raw": "'relative'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x2b0ab4"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x2b0ab4"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x331ec6"
                                            },
                                            "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x2b0ab4"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": 2,
                                                    "raw": "0x2"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x8483d5"
                                            },
                                            "init": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x2b2237"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "MRdkh",
                                                                "raw": "'MRdkh'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2b2237"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "fslcb",
                                                                                "raw": "'fslcb'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "path.relative(",
                                                                                "raw": "'path.relative('"
                                                                            },
                                                                            {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2b0ab4"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "slice",
                                                                                                        "raw": "'slice'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": 2,
                                                                                                        "raw": "0x2"
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "map",
                                                                                                "raw": "'map'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "JSON"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "stringify",
                                                                                                    "raw": "'stringify'"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "join",
                                                                                        "raw": "'join'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": ",",
                                                                                        "raw": "','"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": ")",
                                                                        "raw": "')'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "\n  expect=",
                                                                    "raw": "'\\x0a\\x20\\x20expect='"
                                                                }
                                                            },
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "JSON"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "stringify",
                                                                        "raw": "'stringify'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x331ec6"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "\n  actual=",
                                                        "raw": "'\n  actual='"
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "JSON"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "stringify",
                                                            "raw": "'stringify'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x3392ad"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x3392ad"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x331ec6"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "failures"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "push",
                                                    "raw": "'push'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "\n",
                                                        "raw": "'\\x0a'"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x8483d5"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "equal",
                        "raw": "'equal'"
                    }
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "failures"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "failures"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "join",
                                "raw": "'join'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "path"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "sep",
                                        "raw": "'sep'"
                                    }
                                },
                                {
                                    "type": "Literal",
                                    "value": "\\",
                                    "raw": "'\\x5c'"
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "path"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "sep",
                                        "raw": "'sep'"
                                    }
                                },
                                {
                                    "type": "Literal",
                                    "value": "/",
                                    "raw": "'/'"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "Identifier",
                "name": "isWindows"
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "path"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "delimiter",
                                        "raw": "'delimiter'"
                                    }
                                },
                                {
                                    "type": "Literal",
                                    "value": ";",
                                    "raw": "';'"
                                }
                            ]
                        }
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "equal",
                                    "raw": "'equal'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "path"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "delimiter",
                                        "raw": "'delimiter'"
                                    }
                                },
                                {
                                    "type": "Literal",
                                    "value": ":",
                                    "raw": "':'"
                                }
                            ]
                        }
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}