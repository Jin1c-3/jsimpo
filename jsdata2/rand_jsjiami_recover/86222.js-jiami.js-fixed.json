{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Class"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../../utils/Class",
                                "raw": "'../../../utils/Class'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Clamp"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../../math/Clamp",
                                "raw": "'../../../math/Clamp'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Components"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../components",
                                "raw": "'../../components'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "GameObject"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../GameObject",
                                "raw": "'../../GameObject'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "GetBitmapTextSize"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../GetBitmapTextSize",
                                "raw": "'../GetBitmapTextSize'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ParseFromAtlas"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../ParseFromAtlas",
                                "raw": "'../ParseFromAtlas'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ParseXMLBitmapFont"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../ParseXMLBitmapFont",
                                "raw": "'../ParseXMLBitmapFont'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Rectangle"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../../geom/rectangle/Rectangle",
                                "raw": "'../../../geom/rectangle/Rectangle'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Render"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./BitmapTextRender",
                                "raw": "'./BitmapTextRender'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "BitmapText"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Class"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "Extends",
                                            "raw": "'Extends'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "GameObject"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "Mixins",
                                            "raw": "'Mixins'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Alpha",
                                                        "raw": "'Alpha'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "BlendMode",
                                                        "raw": "'BlendMode'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Depth",
                                                        "raw": "'Depth'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Mask",
                                                        "raw": "'Mask'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Origin",
                                                        "raw": "'Origin'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Pipeline",
                                                        "raw": "'Pipeline'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "ScrollFactor",
                                                        "raw": "'ScrollFactor'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Texture",
                                                        "raw": "'Texture'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Tint",
                                                        "raw": "'Tint'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Transform",
                                                        "raw": "'Transform'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Visible",
                                                        "raw": "'Visible'"
                                                    }
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "Render"
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "initialize",
                                            "raw": "'initialize'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "BitmapText"
                                            },
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3d0cb7"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xbca3f4"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4a963b"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x19d6d8"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2eb674"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2efbfa"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x244e0e"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x2eb674"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "VjTtt",
                                                                            "raw": "'VjTtt'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "VjTtt",
                                                                            "raw": "'VjTtt'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xbca3f4"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2eb674"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "",
                                                                                        "raw": "''"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x244e0e"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "bXprh",
                                                                            "raw": "'bXprh'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "bXprh",
                                                                            "raw": "'bXprh'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_fontSize",
                                                                                            "raw": "'_fontSize'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_dirty",
                                                                                            "raw": "'_dirty'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x244e0e"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "GameObject"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "call",
                                                                    "raw": "'call'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ThisExpression"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3d0cb7"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "BitmapText",
                                                                    "raw": "'BitmapText'"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "font",
                                                                    "raw": "'font'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x19d6d8"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2e6704"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "scene",
                                                                                            "raw": "'scene'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "sys",
                                                                                        "raw": "'sys'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "cache",
                                                                                    "raw": "'cache'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "bitmapFont",
                                                                                "raw": "'bitmapFont'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "get",
                                                                            "raw": "'get'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x19d6d8"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x2e6704"
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "iaATc",
                                                                            "raw": "'iaATc'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "iaATc",
                                                                            "raw": "'iaATc'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xb60a75"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "6|1|4|5|3|0|2",
                                                                                                    "raw": "'6|1|4|5|3|0|2'"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "split",
                                                                                                    "raw": "'split'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "value": "|",
                                                                                                    "raw": "'|'"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3e0743"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "WhileStatement",
                                                                                "test": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "SwitchStatement",
                                                                                            "discriminant": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0xb60a75"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "UpdateExpression",
                                                                                                    "operator": "++",
                                                                                                    "argument": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x3e0743"
                                                                                                    },
                                                                                                    "prefix": false
                                                                                                }
                                                                                            },
                                                                                            "cases": [
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "0",
                                                                                                        "raw": "'0'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "setTexture",
                                                                                                                        "raw": "'setTexture'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x2e6704"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "texture",
                                                                                                                            "raw": "'texture'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x2e6704"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "frame",
                                                                                                                            "raw": "'frame'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "1",
                                                                                                        "raw": "'1'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "fontData",
                                                                                                                        "raw": "'fontData'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x2e6704"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "data",
                                                                                                                        "raw": "'data'"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "2",
                                                                                                        "raw": "'2'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "GetBitmapTextSize"
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "ArrayExpression",
                                                                                                                            "elements": []
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "UnaryExpression",
                                                                                                                            "operator": "!",
                                                                                                                            "argument": {
                                                                                                                                "type": "ArrayExpression",
                                                                                                                                "elements": []
                                                                                                                            },
                                                                                                                            "prefix": true
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "ThisExpression"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "_bounds",
                                                                                                                            "raw": "'_bounds'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "3",
                                                                                                        "raw": "'3'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "fromAtlas",
                                                                                                                        "raw": "'fromAtlas'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "===",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x2e6704"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "fromAtlas",
                                                                                                                            "raw": "'fromAtlas'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "UnaryExpression",
                                                                                                                            "operator": "!",
                                                                                                                            "argument": {
                                                                                                                                "type": "ArrayExpression",
                                                                                                                                "elements": []
                                                                                                                            },
                                                                                                                            "prefix": true
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "4",
                                                                                                        "raw": "'4'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "_fontSize",
                                                                                                                        "raw": "'_fontSize'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2efbfa"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "5",
                                                                                                        "raw": "'5'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "_align",
                                                                                                                        "raw": "'_align'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x244e0e"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "6",
                                                                                                        "raw": "'6'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "font",
                                                                                                                        "raw": "'font'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "key"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "BreakStatement",
                                                                                            "label": null
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "console"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "warn",
                                                                                            "raw": "'warn'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Literal",
                                                                                                "value": "Invalid BitmapText key: ",
                                                                                                "raw": "'Invalid\\x20BitmapText\\x20key:\\x20'"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x19d6d8"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fontData",
                                                                    "raw": "'fontData'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2e6704"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "data",
                                                                    "raw": "'data'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_text",
                                                                    "raw": "'_text'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "",
                                                                "raw": "''"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_fontSize",
                                                                    "raw": "'_fontSize'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2efbfa"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "fontData",
                                                                            "raw": "'fontData'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "size",
                                                                        "raw": "'size'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_letterSpacing",
                                                                    "raw": "'_letterSpacing'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_align",
                                                                    "raw": "'_align'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x244e0e"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_bounds",
                                                                    "raw": "'_bounds'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetBitmapTextSize"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_maxWidth",
                                                                    "raw": "'_maxWidth'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "wordWrapCharCode",
                                                                    "raw": "'wordWrapCharCode'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 32,
                                                                "raw": "0x20"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "charColors",
                                                                    "raw": "'charColors'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowX",
                                                                    "raw": "'dropShadowX'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowY",
                                                                    "raw": "'dropShadowY'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowColor",
                                                                    "raw": "'dropShadowColor'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowAlpha",
                                                                    "raw": "'dropShadowAlpha'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0.5,
                                                                "raw": "0.5"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fromAtlas",
                                                                    "raw": "'fromAtlas'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2e6704"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fromAtlas",
                                                                    "raw": "'fromAtlas'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "setTexture",
                                                                    "raw": "'setTexture'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2e6704"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "texture",
                                                                        "raw": "'texture'"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2e6704"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "frame",
                                                                        "raw": "'frame'"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "setPosition",
                                                                    "raw": "'setPosition'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0xbca3f4"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4a963b"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "setOrigin",
                                                                    "raw": "'setOrigin'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "initPipeline",
                                                                    "raw": "'initPipeline'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "setText",
                                                                    "raw": "'setText'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2eb674"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setLeftAlign",
                                            "raw": "'setLeftAlign'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_align",
                                                                    "raw": "'_align'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "BitmapText"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "ALIGN_LEFT",
                                                                    "raw": "'ALIGN_LEFT'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setCenterAlign",
                                            "raw": "'setCenterAlign'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_align",
                                                                    "raw": "'_align'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "BitmapText"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "ALIGN_CENTER",
                                                                    "raw": "'ALIGN_CENTER'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setRightAlign",
                                            "raw": "'setRightAlign'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_align",
                                                                    "raw": "'_align'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "BitmapText"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "ALIGN_RIGHT",
                                                                    "raw": "'ALIGN_RIGHT'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setFontSize",
                                            "raw": "'setFontSize'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3feeb5"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_fontSize",
                                                                    "raw": "'_fontSize'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x3feeb5"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setLetterSpacing",
                                            "raw": "'setLetterSpacing'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x59900f"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x59900f"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "RkDnu",
                                                                            "raw": "'RkDnu'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "UBuWi",
                                                                            "raw": "'UBuWi'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "align"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_align",
                                                                                            "raw": "'_align'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x59900f"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_letterSpacing",
                                                                    "raw": "'_letterSpacing'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x59900f"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setText",
                                            "raw": "'setText'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5e37b7"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5e37b7"
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5e37b7"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5e37b7"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "",
                                                                            "raw": "''"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Array"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isArray",
                                                                    "raw": "'isArray'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5e37b7"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5e37b7"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x5e37b7"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "join",
                                                                                    "raw": "'join'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "\n",
                                                                                    "raw": "'\\x0a'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5e37b7"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "text",
                                                                    "raw": "'text'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_text",
                                                                                "raw": "'_text'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x5e37b7"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "toString",
                                                                                    "raw": "'toString'"
                                                                                }
                                                                            },
                                                                            "arguments": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_dirty",
                                                                                "raw": "'_dirty'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "updateDisplayOrigin",
                                                                                "raw": "'updateDisplayOrigin'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setDropShadow",
                                            "raw": "'setDropShadow'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x220dfb"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x57a095"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3c908d"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x21c273"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x220dfb"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x220dfb"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x57a095"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "VAivg",
                                                                            "raw": "'VAivg'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "IYQeF",
                                                                            "raw": "'IYQeF'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "start"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x57a095"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3c908d"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "fARsO",
                                                                            "raw": "'fARsO'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "WraGf",
                                                                            "raw": "'WraGf'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "topLeft"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "-",
                                                                                        "argument": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "0x1"
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3c908d"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x21c273"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x21c273"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0.5,
                                                                            "raw": "0.5"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowX",
                                                                    "raw": "'dropShadowX'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x220dfb"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowY",
                                                                    "raw": "'dropShadowY'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x57a095"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowColor",
                                                                    "raw": "'dropShadowColor'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x3c908d"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "dropShadowAlpha",
                                                                    "raw": "'dropShadowAlpha'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x21c273"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setCharacterTint",
                                            "raw": "'setCharacterTint'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x110c01"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4f89b6"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x208374"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x25b266"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x10760b"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x551ae7"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xa5b11"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x110c01"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "aPpXq",
                                                                            "raw": "'aPpXq'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "PmsOW",
                                                                            "raw": "'PmsOW'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x10760b"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x25b266"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x551ae7"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x25b266"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xa5b11"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x25b266"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x110c01"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4f89b6"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4f89b6"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 1,
                                                                            "raw": "0x1"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x208374"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x208374"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "ArrayExpression",
                                                                                "elements": []
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x25b266"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x25b266"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "0x1"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x10760b"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x10760b"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x25b266"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x551ae7"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x25b266"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xa5b11"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x25b266"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2d4e36"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "text",
                                                                            "raw": "'text'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4f89b6"
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "0x1"
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4f89b6"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2d4e36"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x110c01"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x110c01"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2d4e36"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x110c01"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x110c01"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Clamp"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x110c01"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2d4e36"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 1,
                                                                            "raw": "0x1"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4ca60b"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "Clamp"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x110c01"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4f89b6"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x110c01"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2d4e36"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x417787"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "charColors",
                                                                        "raw": "'charColors'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x32d3f1"
                                                                    },
                                                                    "init": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x110c01"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x32d3f1"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x4ca60b"
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x32d3f1"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4b7599"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x417787"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x32d3f1"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x25b266"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "0x1"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x417787"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x32d3f1"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x55569b"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x208374"
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "0x1"
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x4b7599"
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "oADkJ",
                                                                                                    "raw": "'oADkJ'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "wbPMe",
                                                                                                    "raw": "'wbPMe'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "VariableDeclaration",
                                                                                                        "declarations": [
                                                                                                            {
                                                                                                                "type": "VariableDeclarator",
                                                                                                                "id": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5b452d"
                                                                                                                },
                                                                                                                "init": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "2|3|0|4|1",
                                                                                                                            "raw": "'2|3|0|4|1'"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "split",
                                                                                                                            "raw": "'split'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "|",
                                                                                                                            "raw": "'|'"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "VariableDeclarator",
                                                                                                                "id": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x307f23"
                                                                                                                },
                                                                                                                "init": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0x0"
                                                                                                                }
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "var"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "WhileStatement",
                                                                                                        "test": {
                                                                                                            "type": "UnaryExpression",
                                                                                                            "operator": "!",
                                                                                                            "argument": {
                                                                                                                "type": "UnaryExpression",
                                                                                                                "operator": "!",
                                                                                                                "argument": {
                                                                                                                    "type": "ArrayExpression",
                                                                                                                    "elements": []
                                                                                                                },
                                                                                                                "prefix": true
                                                                                                            },
                                                                                                            "prefix": true
                                                                                                        },
                                                                                                        "body": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "SwitchStatement",
                                                                                                                    "discriminant": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x5b452d"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "UpdateExpression",
                                                                                                                            "operator": "++",
                                                                                                                            "argument": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x307f23"
                                                                                                                            },
                                                                                                                            "prefix": false
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "cases": [
                                                                                                                        {
                                                                                                                            "type": "SwitchCase",
                                                                                                                            "test": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "0",
                                                                                                                                "raw": "'0'"
                                                                                                                            },
                                                                                                                            "consequent": [
                                                                                                                                {
                                                                                                                                    "type": "ExpressionStatement",
                                                                                                                                    "expression": {
                                                                                                                                        "type": "AssignmentExpression",
                                                                                                                                        "operator": "=",
                                                                                                                                        "left": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x4b7599"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "tintTR",
                                                                                                                                                "raw": "'tintTR'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "right": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x10760b"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "ContinueStatement",
                                                                                                                                    "label": null
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "SwitchCase",
                                                                                                                            "test": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "1",
                                                                                                                                "raw": "'1'"
                                                                                                                            },
                                                                                                                            "consequent": [
                                                                                                                                {
                                                                                                                                    "type": "ExpressionStatement",
                                                                                                                                    "expression": {
                                                                                                                                        "type": "AssignmentExpression",
                                                                                                                                        "operator": "=",
                                                                                                                                        "left": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x4b7599"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "tintBR",
                                                                                                                                                "raw": "'tintBR'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "right": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0xa5b11"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "ContinueStatement",
                                                                                                                                    "label": null
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "SwitchCase",
                                                                                                                            "test": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "2",
                                                                                                                                "raw": "'2'"
                                                                                                                            },
                                                                                                                            "consequent": [
                                                                                                                                {
                                                                                                                                    "type": "ExpressionStatement",
                                                                                                                                    "expression": {
                                                                                                                                        "type": "AssignmentExpression",
                                                                                                                                        "operator": "=",
                                                                                                                                        "left": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x4b7599"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "tintEffect",
                                                                                                                                                "raw": "'tintEffect'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "right": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x55569b"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "ContinueStatement",
                                                                                                                                    "label": null
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "SwitchCase",
                                                                                                                            "test": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "3",
                                                                                                                                "raw": "'3'"
                                                                                                                            },
                                                                                                                            "consequent": [
                                                                                                                                {
                                                                                                                                    "type": "ExpressionStatement",
                                                                                                                                    "expression": {
                                                                                                                                        "type": "AssignmentExpression",
                                                                                                                                        "operator": "=",
                                                                                                                                        "left": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x4b7599"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "tintTL",
                                                                                                                                                "raw": "'tintTL'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "right": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x25b266"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "ContinueStatement",
                                                                                                                                    "label": null
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "SwitchCase",
                                                                                                                            "test": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "4",
                                                                                                                                "raw": "'4'"
                                                                                                                            },
                                                                                                                            "consequent": [
                                                                                                                                {
                                                                                                                                    "type": "ExpressionStatement",
                                                                                                                                    "expression": {
                                                                                                                                        "type": "AssignmentExpression",
                                                                                                                                        "operator": "=",
                                                                                                                                        "left": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x4b7599"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "tintBL",
                                                                                                                                                "raw": "'tintBL'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "right": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x551ae7"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "ContinueStatement",
                                                                                                                                    "label": null
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "BreakStatement",
                                                                                                                    "label": null
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ReturnStatement",
                                                                                                        "argument": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "_maxWidth",
                                                                                                                "raw": "'_maxWidth'"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x417787"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x32d3f1"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "ObjectExpression",
                                                                                                    "properties": [
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "key": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "tintEffect",
                                                                                                                "raw": "'tintEffect'"
                                                                                                            },
                                                                                                            "computed": false,
                                                                                                            "value": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x55569b"
                                                                                                            },
                                                                                                            "kind": "init",
                                                                                                            "method": false,
                                                                                                            "shorthand": false
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "key": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "tintTL",
                                                                                                                "raw": "'tintTL'"
                                                                                                            },
                                                                                                            "computed": false,
                                                                                                            "value": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x25b266"
                                                                                                            },
                                                                                                            "kind": "init",
                                                                                                            "method": false,
                                                                                                            "shorthand": false
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "key": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "tintTR",
                                                                                                                "raw": "'tintTR'"
                                                                                                            },
                                                                                                            "computed": false,
                                                                                                            "value": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x10760b"
                                                                                                            },
                                                                                                            "kind": "init",
                                                                                                            "method": false,
                                                                                                            "shorthand": false
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "key": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "tintBL",
                                                                                                                "raw": "'tintBL'"
                                                                                                            },
                                                                                                            "computed": false,
                                                                                                            "value": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x551ae7"
                                                                                                            },
                                                                                                            "kind": "init",
                                                                                                            "method": false,
                                                                                                            "shorthand": false
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "key": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "tintBR",
                                                                                                                "raw": "'tintBR'"
                                                                                                            },
                                                                                                            "computed": false,
                                                                                                            "value": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0xa5b11"
                                                                                                            },
                                                                                                            "kind": "init",
                                                                                                            "method": false,
                                                                                                            "shorthand": false
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setWordTint",
                                            "raw": "'setWordTint'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2ec82c"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4e0415"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1351e5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x446dfb"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1c4baa"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x67050"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4eab24"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4e0415"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "pNUCt",
                                                                            "raw": "'pNUCt'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "pNUCt",
                                                                            "raw": "'pNUCt'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4e0415"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "0x1"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_maxWidth",
                                                                                            "raw": "'_maxWidth'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_dirty",
                                                                                            "raw": "'_dirty'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "!==",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "wordWrapCharCode"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "undefined"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "wordWrapCharCode",
                                                                                                        "raw": "'wordWrapCharCode'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "wordWrapCharCode"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "ThisExpression"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x43344b"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getTextBounds",
                                                                            "raw": "'getTextBounds'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x121873"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x43344b"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "words",
                                                                        "raw": "'words'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5bf6bf"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "typeof",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2ec82c"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "number",
                                                                        "raw": "'number'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3422db"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x536c28"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x536c28"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x121873"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x536c28"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x417381"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x121873"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x536c28"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5bf6bf"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x536c28"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x2ec82c"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x5bf6bf"
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x417381"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "word",
                                                                                        "raw": "'word'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x2ec82c"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "setCharacterTint",
                                                                                            "raw": "'setCharacterTint'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x417381"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "i",
                                                                                                "raw": "'i'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x417381"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "word",
                                                                                                    "raw": "'word'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1351e5"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x446dfb"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1c4baa"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x67050"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4eab24"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3422db"
                                                                                    },
                                                                                    "prefix": false
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3422db"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4e0415"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "ThisExpression"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getTextBounds",
                                            "raw": "'getTextBounds'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x49c6b6"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x215fc0"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "_bounds",
                                                                        "raw": "'_bounds'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_dirty",
                                                                            "raw": "'_dirty'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x49c6b6"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "!==",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "scaleX",
                                                                            "raw": "'scaleX'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x215fc0"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "scaleX",
                                                                            "raw": "'scaleX'"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "scaleY",
                                                                        "raw": "'scaleY'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x215fc0"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "scaleY",
                                                                        "raw": "'scaleY'"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "Lzivk",
                                                                            "raw": "'Lzivk'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "HeHcj",
                                                                            "raw": "'HeHcj'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GetBitmapTextSize"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x49c6b6"
                                                                                        },
                                                                                        {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": []
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x215fc0"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_dirty",
                                                                                            "raw": "'_dirty'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3d4d6d"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "scene",
                                                                                                                    "raw": "'scene'"
                                                                                                                }
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "sys",
                                                                                                                "raw": "'sys'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "cache",
                                                                                                            "raw": "'cache'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "bitmapFont",
                                                                                                        "raw": "'bitmapFont'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "get",
                                                                                                    "raw": "'get'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "key"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3d4d6d"
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x386e2c"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "1|0|5|3|6|2|4",
                                                                                                                "raw": "'1|0|5|3|6|2|4'"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "split",
                                                                                                                "raw": "'split'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Literal",
                                                                                                                "value": "|",
                                                                                                                "raw": "'|'"
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2b38bd"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "WhileStatement",
                                                                                            "test": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "ArrayExpression",
                                                                                                        "elements": []
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "SwitchStatement",
                                                                                                        "discriminant": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x386e2c"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "UpdateExpression",
                                                                                                                "operator": "++",
                                                                                                                "argument": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2b38bd"
                                                                                                                },
                                                                                                                "prefix": false
                                                                                                            }
                                                                                                        },
                                                                                                        "cases": [
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "0",
                                                                                                                    "raw": "'0'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "fontData",
                                                                                                                                    "raw": "'fontData'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x3d4d6d"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "data",
                                                                                                                                    "raw": "'data'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "1",
                                                                                                                    "raw": "'1'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "font",
                                                                                                                                    "raw": "'font'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "key"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "2",
                                                                                                                    "raw": "'2'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "setTexture",
                                                                                                                                    "raw": "'setTexture'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x3d4d6d"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "texture",
                                                                                                                                        "raw": "'texture'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x3d4d6d"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "frame",
                                                                                                                                        "raw": "'frame'"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "3",
                                                                                                                    "raw": "'3'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "_align",
                                                                                                                                    "raw": "'_align'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "align"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "4",
                                                                                                                    "raw": "'4'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "GetBitmapTextSize"
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                    "operator": "!",
                                                                                                                                    "argument": {
                                                                                                                                        "type": "ArrayExpression",
                                                                                                                                        "elements": []
                                                                                                                                    },
                                                                                                                                    "prefix": true
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                    "operator": "!",
                                                                                                                                    "argument": {
                                                                                                                                        "type": "UnaryExpression",
                                                                                                                                        "operator": "!",
                                                                                                                                        "argument": {
                                                                                                                                            "type": "ArrayExpression",
                                                                                                                                            "elements": []
                                                                                                                                        },
                                                                                                                                        "prefix": true
                                                                                                                                    },
                                                                                                                                    "prefix": true
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "ThisExpression"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "_bounds",
                                                                                                                                        "raw": "'_bounds'"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "5",
                                                                                                                    "raw": "'5'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "_fontSize",
                                                                                                                                    "raw": "'_fontSize'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "size"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "6",
                                                                                                                    "raw": "'6'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "fromAtlas",
                                                                                                                                    "raw": "'fromAtlas'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "BinaryExpression",
                                                                                                                                "operator": "===",
                                                                                                                                "left": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x3d4d6d"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "fromAtlas",
                                                                                                                                        "raw": "'fromAtlas'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                    "operator": "!",
                                                                                                                                    "argument": {
                                                                                                                                        "type": "UnaryExpression",
                                                                                                                                        "operator": "!",
                                                                                                                                        "argument": {
                                                                                                                                            "type": "ArrayExpression",
                                                                                                                                            "elements": []
                                                                                                                                        },
                                                                                                                                        "prefix": true
                                                                                                                                    },
                                                                                                                                    "prefix": true
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "BreakStatement",
                                                                                                        "label": null
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x215fc0"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getCharacterAt",
                                            "raw": "'getCharacterAt'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3041d9"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x56c9b4"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x24c874"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x17faa4"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getLocalPoint",
                                                                            "raw": "'getLocalPoint'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3041d9"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x56c9b4"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x24c874"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4ca8ca"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getTextBounds",
                                                                            "raw": "'getTextBounds'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4a0192"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4ca8ca"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "characters",
                                                                        "raw": "'characters'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3df91e"
                                                                },
                                                                "init": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "Rectangle"
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x28e2c9"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x28e2c9"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4a0192"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x28e2c9"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "blXvC",
                                                                            "raw": "'blXvC'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "blXvC",
                                                                            "raw": "'blXvC'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1d2df6"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4a0192"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x28e2c9"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3df91e"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "setTo",
                                                                                            "raw": "'setTo'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1d2df6"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1d2df6"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "t",
                                                                                                "raw": "'t'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "-",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x1d2df6"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "r",
                                                                                                    "raw": "'r'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x1d2df6"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1d2df6"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "b",
                                                                                                "raw": "'b'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3df91e"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "contains",
                                                                                            "raw": "'contains'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x17faa4"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x17faa4"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1d2df6"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_maxWidth",
                                                                                            "raw": "'_maxWidth'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "value"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_dirty",
                                                                                            "raw": "'_dirty'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "updateDisplayOrigin",
                                            "raw": "'updateDisplayOrigin'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "getTextBounds",
                                                                    "raw": "'getTextBounds'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setFont",
                                            "raw": "'setFont'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x50468b"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1191ea"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3da71a"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x1191ea"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1191ea"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_fontSize",
                                                                                "raw": "'_fontSize'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3da71a"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "fUUUM",
                                                                            "raw": "'fUUUM'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "bgadm",
                                                                            "raw": "'bgadm'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "alpha"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0.5,
                                                                                        "raw": "0.5"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3da71a"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_align",
                                                                                            "raw": "'_align'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x50468b"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "font",
                                                                    "raw": "'font'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x24dabf"
                                                                            },
                                                                            "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "scene",
                                                                                                        "raw": "'scene'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "sys",
                                                                                                    "raw": "'sys'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "cache",
                                                                                                "raw": "'cache'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "bitmapFont",
                                                                                            "raw": "'bitmapFont'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "get",
                                                                                        "raw": "'get'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x50468b"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x24dabf"
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "font",
                                                                                            "raw": "'font'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x50468b"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "fontData",
                                                                                            "raw": "'fontData'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x24dabf"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "data",
                                                                                            "raw": "'data'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_fontSize",
                                                                                            "raw": "'_fontSize'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1191ea"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_align",
                                                                                            "raw": "'_align'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3da71a"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "fromAtlas",
                                                                                            "raw": "'fromAtlas'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x24dabf"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "fromAtlas",
                                                                                                "raw": "'fromAtlas'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": []
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "setTexture",
                                                                                            "raw": "'setTexture'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x24dabf"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "texture",
                                                                                                "raw": "'texture'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x24dabf"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "frame",
                                                                                                "raw": "'frame'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "GetBitmapTextSize"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": []
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "_bounds",
                                                                                                "raw": "'_bounds'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setMaxWidth",
                                            "raw": "'setMaxWidth'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x12fb1b"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5cb7d1"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_maxWidth",
                                                                    "raw": "'_maxWidth'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x12fb1b"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_dirty",
                                                                    "raw": "'_dirty'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5cb7d1"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "wordWrapCharCode",
                                                                                "raw": "'wordWrapCharCode'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5cb7d1"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "align",
                                            "raw": "'align'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "set",
                                                        "raw": "'set'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x1538f4"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_align",
                                                                                "raw": "'_align'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1538f4"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_dirty",
                                                                                "raw": "'_dirty'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_align",
                                                                            "raw": "'_align'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "text",
                                            "raw": "'text'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "set",
                                                        "raw": "'set'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x4233a4"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "setText",
                                                                                "raw": "'setText'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4233a4"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_text",
                                                                            "raw": "'_text'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "fontSize",
                                            "raw": "'fontSize'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "set",
                                                        "raw": "'set'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x17e077"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_fontSize",
                                                                                "raw": "'_fontSize'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x17e077"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_dirty",
                                                                                "raw": "'_dirty'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_fontSize",
                                                                            "raw": "'_fontSize'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "letterSpacing",
                                            "raw": "'letterSpacing'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "set",
                                                        "raw": "'set'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x33710d"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_letterSpacing",
                                                                                "raw": "'_letterSpacing'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x33710d"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_dirty",
                                                                                "raw": "'_dirty'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_letterSpacing",
                                                                            "raw": "'_letterSpacing'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "maxWidth",
                                            "raw": "'maxWidth'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "set",
                                                        "raw": "'set'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x3eaf24"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_maxWidth",
                                                                                "raw": "'_maxWidth'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3eaf24"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_dirty",
                                                                                "raw": "'_dirty'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_maxWidth",
                                                                            "raw": "'_maxWidth'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "width",
                                            "raw": "'width'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "getTextBounds",
                                                                                "raw": "'getTextBounds'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "_bounds",
                                                                                    "raw": "'_bounds'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "global",
                                                                                "raw": "'global'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "width",
                                                                            "raw": "'width'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "height",
                                            "raw": "'height'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "getTextBounds",
                                                                                "raw": "'getTextBounds'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "_bounds",
                                                                                    "raw": "'_bounds'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "global",
                                                                                "raw": "'global'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "height",
                                                                            "raw": "'height'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "toJSON",
                                            "raw": "'toJSON'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x771eea"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Components"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "ToJSON",
                                                                            "raw": "'ToJSON'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ThisExpression"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x7e970"
                                                                },
                                                                "init": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "font",
                                                                                "raw": "'font'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "font",
                                                                                    "raw": "'font'"
                                                                                }
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "text",
                                                                                "raw": "'text'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "text",
                                                                                    "raw": "'text'"
                                                                                }
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "fontSize",
                                                                                "raw": "'fontSize'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "fontSize",
                                                                                    "raw": "'fontSize'"
                                                                                }
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "letterSpacing",
                                                                                "raw": "'letterSpacing'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "letterSpacing",
                                                                                    "raw": "'letterSpacing'"
                                                                                }
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "align",
                                                                                "raw": "'align'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "align",
                                                                                    "raw": "'align'"
                                                                                }
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x771eea"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "data",
                                                                    "raw": "'data'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x7e970"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x771eea"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "preDestroy",
                                            "raw": "'preDestroy'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "charColors",
                                                                        "raw": "'charColors'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_bounds",
                                                                    "raw": "'_bounds'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fontData",
                                                                    "raw": "'fontData'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "BitmapText"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "ALIGN_LEFT",
                        "raw": "'ALIGN_LEFT'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "BitmapText"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "ALIGN_CENTER",
                        "raw": "'ALIGN_CENTER'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "0x1"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "BitmapText"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "ALIGN_RIGHT",
                        "raw": "'ALIGN_RIGHT'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "0x2"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "BitmapText"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "ParseFromAtlas",
                        "raw": "'ParseFromAtlas'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "ParseFromAtlas"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "BitmapText"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "ParseXMLBitmapFont",
                        "raw": "'ParseXMLBitmapFont'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "ParseXMLBitmapFont"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "BitmapText"
                }
            }
        }
    ],
    "sourceType": "script"
}