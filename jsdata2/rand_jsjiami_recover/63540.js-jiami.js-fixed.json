{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "testStringify"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x3e2a3e"
                },
                {
                    "type": "Identifier",
                    "name": "_0x1b7543"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertEquals"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x3e2a3e"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSON"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "stringify",
                                            "raw": "'stringify'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1b7543"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertEquals"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x3e2a3e"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSON"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "stringify",
                                            "raw": "'stringify'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1b7543"
                                        },
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x38f8ac"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x9acdc2"
                                                }
                                            ],
                                            "body": {
                                                "type": "Identifier",
                                                "name": "_0x9acdc2"
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertEquals"
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSON"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "stringify",
                                            "raw": "'stringify'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1b7543"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": null,
                                            "raw": "null"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "=",
                                            "raw": "'='"
                                        }
                                    ]
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "JSON"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "stringify",
                                            "raw": "'stringify'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1b7543"
                                        },
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1b0e3a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3c63db"
                                                }
                                            ],
                                            "body": {
                                                "type": "Identifier",
                                                "name": "_0x3c63db"
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "=",
                                            "raw": "'='"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler1"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy1"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "handler1"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}",
                        "raw": "'{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}'"
                    },
                    {
                        "type": "Identifier",
                        "name": "proxy1"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy_fun"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": []
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "handler1"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                                "type": "Identifier",
                                "name": "proxy_fun"
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "Literal",
                            "value": "function",
                            "raw": "'function'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "undefined"
                    },
                    {
                        "type": "Identifier",
                        "name": "proxy_fun"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[1,null]",
                        "raw": "'[1,null]'"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy_fun"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "handler1"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "apply",
                        "raw": "'apply'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "Literal",
                                    "value": 666,
                                    "raw": "0x29a"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "undefined"
                    },
                    {
                        "type": "Identifier",
                        "name": "proxy_fun"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[1,null]",
                        "raw": "'[1,null]'"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy_fun"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "parent1a"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "b",
                                    "raw": "'b'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy1"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}}",
                        "raw": "'{\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}}'"
                    },
                    {
                        "type": "Identifier",
                        "name": "parent1a"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}}",
                        "raw": "'{\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}}'"
                    },
                    {
                        "type": "Identifier",
                        "name": "parent1a"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "parent1b"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "b",
                                    "raw": "'b'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy1"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "c",
                                    "raw": "'c'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"a\":123,\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},\"c\":true}",
                        "raw": "'{\"a\":123,\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},\"c\":true}'"
                    },
                    {
                        "type": "Identifier",
                        "name": "parent1b"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "parent1c"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 123,
                                "raw": "0x7b"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy1"
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                },
                                "prefix": true
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[123,{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},true]",
                        "raw": "'[123,{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},true]'"
                    },
                    {
                        "type": "Identifier",
                        "name": "parent1c"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler2"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "get",
                                    "raw": "'get'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x2cded2"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x373158"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "UnaryExpression",
                                                    "operator": "delete",
                                                    "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "parent2"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "c",
                                                            "raw": "'c'"
                                                        }
                                                    },
                                                    "prefix": true
                                                }
                                            },
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x373158"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "toUpperCase",
                                                            "raw": "'toUpperCase'"
                                                        }
                                                    },
                                                    "arguments": []
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy2"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "handler2"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "parent2"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "b",
                                    "raw": "'b'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy2"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "expected2"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "{\"a\":\"delete\",\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}}",
                        "raw": "'{\"a\":\"delete\",\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"}}'"
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "expected2"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "parent2"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "parent2"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "c",
                        "raw": "'c'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": "remove",
                    "raw": "'remove'"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "expected2"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "parent2"
                            },
                            {
                                "type": "Identifier",
                                "name": "undefined"
                            },
                            {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler3"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "get",
                                    "raw": "'get'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0xf30fcd"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0xffd7e0"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x675383"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0xffd7e0"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "valueOf",
                                                            "raw": "'valueOf'"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0xffd7e0"
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Symbol"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "toPrimitive",
                                                                "raw": "'toPrimitive'"
                                                            }
                                                        }
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "EpStK",
                                                                                    "raw": "'EpStK'"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "zHZDz",
                                                                                    "raw": "'zHZDz'"
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "Literal",
                                                                                            "value": 3,
                                                                                            "raw": "0x3"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "Literal",
                                                                                            "value": "proxy",
                                                                                            "raw": "'proxy'"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": null
                                            },
                                            {
                                                "type": "EmptyStatement"
                                            },
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "!==",
                                                    "left": {
                                                        "type": "UnaryExpression",
                                                        "operator": "typeof",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0xffd7e0"
                                                        },
                                                        "prefix": true
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "symbol",
                                                        "raw": "'symbol'"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x253897"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "UXsxn",
                                                                    "raw": "'UXsxn'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0xffd7e0"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "(",
                                                                        "raw": "'('"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x675383"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": ")",
                                                            "raw": "')'"
                                                        }
                                                    }
                                                },
                                                "alternate": null
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy3"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "handler3"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "parent3"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "y",
                                    "raw": "'y'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy3"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"x\":123,\"y\":{\"a\":\"a(proxy)\",\"b\":\"b(proxy)\",\"c\":\"c(proxy)\"}}",
                        "raw": "'{\"x\":123,\"y\":{\"a\":\"a(proxy)\",\"b\":\"b(proxy)\",\"c\":\"c(proxy)\"}}'"
                    },
                    {
                        "type": "Identifier",
                        "name": "parent3"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler4"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy4"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "handler4"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{}",
                        "raw": "'{}'"
                    },
                    {
                        "type": "Identifier",
                        "name": "proxy4"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"a\":{}}",
                        "raw": "'{\"a\":{}}'"
                    },
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "a",
                                    "raw": "'a'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy4"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler5"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "get",
                                    "raw": "'get'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x14063e"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x54f89f"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x54f89f"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "z",
                                                        "raw": "'z'"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 97000,
                                                        "raw": "0x17ae8"
                                                    }
                                                },
                                                "alternate": null
                                            },
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4baa9e"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4baa9e"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "charCodeAt",
                                                                                "raw": "'charCodeAt'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "z",
                                                                            "raw": "'z'"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": false,
                                                    "async": false
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "ownKeys",
                                    "raw": "'ownKeys'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x4aeec1"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "toJSON",
                                                            "raw": "'toJSON'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "z",
                                                            "raw": "'z'"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy5"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "handler5"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"a\":97097}",
                        "raw": "'{\"a\":97097}'"
                    },
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "a",
                                    "raw": "'a'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy5"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler6"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "ownKeys",
                                    "raw": "'ownKeys'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0xca3104"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "toJSON",
                                                            "raw": "'toJSON'"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy6"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "handler6"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[1,null,true]",
                        "raw": "'[1,null,true]'"
                    },
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy6"
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                },
                                "prefix": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testStringify"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"a\":1,\"c\":true}",
                        "raw": "'{\\x22a\\x22:1,\\x22c\\x22:true}'"
                    },
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "a",
                                    "raw": "'a'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "b",
                                    "raw": "'b'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy6"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "c",
                                    "raw": "'c'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler7"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "get",
                                    "raw": "'get'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x448e06"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x50d2bf"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "UnaryExpression",
                                                    "operator": "delete",
                                                    "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "parent7"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "a",
                                                            "raw": "'a'"
                                                        }
                                                    },
                                                    "prefix": true
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "UnaryExpression",
                                                    "operator": "delete",
                                                    "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "parent7"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "c",
                                                            "raw": "'c'"
                                                        }
                                                    },
                                                    "prefix": true
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "parent7"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "e",
                                                            "raw": "'e'"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "5",
                                                        "raw": "'5'"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x50d2bf"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "toUpperCase",
                                                            "raw": "'toUpperCase'"
                                                        }
                                                    },
                                                    "arguments": []
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy7"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "handler7"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "parent7"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "b",
                                    "raw": "'b'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy7"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"a\":\"1\",\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},\"d\":\"4\"}",
                        "raw": "'{\"a\":\"1\",\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},\"d\":\"4\"}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "parent7"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},\"d\":\"4\",\"e\":\"5\"}",
                        "raw": "'{\"b\":{\"a\":\"A\",\"b\":\"B\",\"c\":\"C\"},\"d\":\"4\",\"e\":\"5\"}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "parent7"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "logger"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "handler"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": []
                            },
                            {
                                "type": "Identifier",
                                "name": "logger"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "logger"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "get",
                        "raw": "'get'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x686cf2"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x38ef1e"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x1a6af6"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "log"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "push",
                                                            "raw": "'push'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x38ef1e"
                                                                },
                                                                {
                                                                    "type": "SpreadElement",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "arguments"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Reflect"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_0x38ef1e"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "SpreadElement",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "arguments"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "Literal",
                            "value": 42,
                            "raw": "0x2a"
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "Literal",
                            "value": "function",
                            "raw": "'function'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "undefined"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "0x1"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "toJSON",
                                "raw": "'toJSON'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertFalse"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Array"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isArray",
                                "raw": "'isArray'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"foo\":42}",
                        "raw": "'{\"foo\":42}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "toJSON",
                                "raw": "'toJSON'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "ownKeys",
                                "raw": "'ownKeys'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "getOwnPropertyDescriptor",
                                "raw": "'getOwnPropertyDescriptor'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "foo",
                                "raw": "'foo'"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "0x2"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "foo",
                                "raw": "'foo'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 42,
                                "raw": "0x2a"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Array"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isArray",
                                "raw": "'isArray'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[42]",
                        "raw": "'[42]'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 3,
                        "raw": "0x3"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "toJSON",
                                "raw": "'toJSON'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "length",
                                "raw": "'length'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "0x2"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x421373"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x22e99a"
                            }
                        ],
                        "body": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x421373"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "1",
                                    "raw": "'1'"
                                }
                            },
                            "consequent": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x22e99a"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": 42,
                                    "raw": "0x2a"
                                }
                            },
                            "alternate": {
                                "type": "Identifier",
                                "name": "_0x22e99a"
                            }
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "Literal",
                            "value": "function",
                            "raw": "'function'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"0\":\"foo\",\"1\":708}",
                        "raw": "'{\\x220\\x22:\\x22foo\\x22,\\x221\\x22:708}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "object"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 3,
                        "raw": "0x3"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "apply",
                        "raw": "'apply'"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "",
                        "raw": "''"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 3,
                                "raw": "0x3"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "1"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Literal",
                                    "value": 666,
                                    "raw": "0x29a"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 3,
                                "raw": "0x3"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "apply",
                        "raw": "'apply'"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            },
                            {
                                "type": "Literal",
                                "value": "foo",
                                "raw": "'foo'"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "apply",
                        "raw": "'apply'"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "1",
                                "raw": "'1'"
                            },
                            {
                                "type": "Literal",
                                "value": 666,
                                "raw": "0x29a"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Array"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isArray",
                                "raw": "'isArray'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"0\":\"foo\"}",
                        "raw": "'{\"0\":\"foo\"}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "object"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 2,
                        "raw": "0x2"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "length",
                                "raw": "'length'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "foo",
                                "raw": "'foo'"
                            },
                            {
                                "type": "Literal",
                                "value": 42,
                                "raw": "0x2a"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Array"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isArray",
                                "raw": "'isArray'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[\"foo\",42]",
                        "raw": "'[\"foo\",42]'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "object"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 2,
                        "raw": "0x2"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "length",
                                "raw": "'length'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "getTrap"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0xb874f7"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x335bba"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x335bba"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "length",
                                            "raw": "'length'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Symbol"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "toPrimitive",
                                                            "raw": "'toPrimitive'"
                                                        }
                                                    },
                                                    "computed": true,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 42,
                                                                        "raw": "0x2a"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": true,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x335bba"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "41",
                                            "raw": "'41'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "foo",
                                            "raw": "'foo'"
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x335bba"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "42",
                                            "raw": "'42'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "bar",
                                            "raw": "'bar'"
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "get",
                                            "raw": "'get'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "getTrap"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Array"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isArray",
                                "raw": "'isArray'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"foo\":true}",
                        "raw": "'{\\x22foo\\x22:true}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "object"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "getTrap"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x44ab0d"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0xa527cd"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0xa527cd"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "length",
                                            "raw": "'length'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "Symbol"
                                            },
                                            "arguments": []
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0xa527cd"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "41",
                                            "raw": "'41'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "foo",
                                            "raw": "'foo'"
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0xa527cd"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "42",
                                            "raw": "'42'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "bar",
                                            "raw": "'bar'"
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "get",
                                            "raw": "'get'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "getTrap"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Array"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isArray",
                                "raw": "'isArray'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertThrows"
                },
                "arguments": [
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "JSON"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "stringify",
                                    "raw": "'stringify'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "object"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "proxy"
                                }
                            ]
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    },
                    {
                        "type": "Identifier",
                        "name": "TypeError"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "foo",
                                "raw": "'foo'"
                            },
                            {
                                "type": "Literal",
                                "value": 42,
                                "raw": "0x2a"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "replacer"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x3f7e74"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x26a8b4"
                            }
                        ],
                        "body": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x3f7e74"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "1",
                                    "raw": "'1'"
                                }
                            },
                            "consequent": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "alternate": {
                                "type": "Identifier",
                                "name": "_0x26a8b4"
                            }
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[\"foo\",{\"baz\":5}]",
                        "raw": "'[\"foo\",{\"baz\":5}]'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "object"
                            },
                            {
                                "type": "Identifier",
                                "name": "replacer"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 3,
                        "raw": "0x3"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "ownKeys",
                                "raw": "'ownKeys'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "getOwnPropertyDescriptor",
                                "raw": "'getOwnPropertyDescriptor'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "baz",
                                "raw": "'baz'"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "foo",
                                "raw": "'foo'"
                            },
                            {
                                "type": "Literal",
                                "value": 42,
                                "raw": "0x2a"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "bar",
                                "raw": "'bar'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "replacer"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x37c97b"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x3b555f"
                            }
                        ],
                        "body": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x37c97b"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "1",
                                    "raw": "'1'"
                                }
                            },
                            "consequent": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "alternate": {
                                "type": "Identifier",
                                "name": "_0x3b555f"
                            }
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[\"foo\",[\"bar\"]]",
                        "raw": "'[\"foo\",[\"bar\"]]'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "object"
                            },
                            {
                                "type": "Identifier",
                                "name": "replacer"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 2,
                        "raw": "0x2"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "length",
                                "raw": "'length'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "getTrap"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x477629"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x1ab6aa"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x1ab6aa"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "length",
                                            "raw": "'length'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Symbol"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "toPrimitive",
                                                            "raw": "'toPrimitive'"
                                                        }
                                                    },
                                                    "computed": true,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 3,
                                                                        "raw": "0x3"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": true,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x1ab6aa"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "2",
                                            "raw": "'2'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "baz",
                                            "raw": "'baz'"
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x1ab6aa"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "3",
                                            "raw": "'3'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "bar",
                                            "raw": "'bar'"
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "get",
                                            "raw": "'get'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "getTrap"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "replacer"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0xcee17e"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x5496ea"
                            }
                        ],
                        "body": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0xcee17e"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "goo",
                                    "raw": "'goo'"
                                }
                            },
                            "consequent": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "alternate": {
                                "type": "Identifier",
                                "name": "_0x5496ea"
                            }
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "goo",
                                    "raw": "'goo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"foo\":true,\"goo\":[null,null,\"baz\"]}",
                        "raw": "'{\"foo\":true,\"goo\":[null,null,\"baz\"]}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "object"
                            },
                            {
                                "type": "Identifier",
                                "name": "replacer"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "getTrap"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x5545f1"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x4c45c3"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x4c45c3"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "length",
                                            "raw": "'length'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "Symbol"
                                            },
                                            "arguments": []
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x4c45c3"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "2",
                                            "raw": "'2'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "baz",
                                            "raw": "'baz'"
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x4c45c3"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "3",
                                            "raw": "'3'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": "bar",
                                            "raw": "'bar'"
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "get",
                                            "raw": "'get'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "getTrap"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "replacer"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x5d63a7"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x55f2c6"
                            }
                        ],
                        "body": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x5d63a7"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "goo",
                                    "raw": "'goo'"
                                }
                            },
                            "consequent": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "alternate": {
                                "type": "Identifier",
                                "name": "_0x55f2c6"
                            }
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "object"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "goo",
                                    "raw": "'goo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertThrows"
                },
                "arguments": [
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "JSON"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "stringify",
                                    "raw": "'stringify'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "object"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "replacer"
                                }
                            ]
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    },
                    {
                        "type": "Identifier",
                        "name": "TypeError"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "Literal",
                            "value": 666,
                            "raw": "0x29a"
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "replacer"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x19bbda"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0xf14717"
                            }
                        ],
                        "body": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x19bbda"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "1",
                                    "raw": "'1'"
                                }
                            },
                            "consequent": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "alternate": {
                                "type": "Identifier",
                                "name": "_0xf14717"
                            }
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[\"foo\",null]",
                        "raw": "'[\\x22foo\\x22,null]'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Literal",
                                        "value": "foo",
                                        "raw": "'foo'"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 42,
                                        "raw": "0x2a"
                                    }
                                ]
                            },
                            {
                                "type": "Identifier",
                                "name": "replacer"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "{\"0\":\"foo\"}",
                        "raw": "'{\"0\":\"foo\"}'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": "foo",
                                            "raw": "'foo'"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "1"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": 42,
                                            "raw": "0x2a"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            },
                            {
                                "type": "Identifier",
                                "name": "replacer"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "Literal",
                            "value": 42,
                            "raw": "0x2a"
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                                "type": "Identifier",
                                "name": "proxy"
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "Literal",
                            "value": "function",
                            "raw": "'function'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 42,
                        "raw": "0x2a"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "parse",
                                "raw": "'parse'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "[true, false]",
                                "raw": "'[true, false]'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 3,
                        "raw": "0x3"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "apply",
                        "raw": "'apply'"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                    },
                                    "prefix": true
                                },
                                "prefix": true
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "apply",
                        "raw": "'apply'"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "1",
                                "raw": "'1'"
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "apply",
                        "raw": "'apply'"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Literal",
                                        "value": 42,
                                        "raw": "0x2a"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 42,
                                        "raw": "0x2a"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log"
                            },
                            "property": {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "reviver"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x4952b7"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x334d9a"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x4952b7"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "baz",
                                            "raw": "'baz'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 5,
                                            "raw": "0x5"
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x4952b7"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "foo",
                                            "raw": "'foo'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "ThisExpression"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "bar",
                                                    "raw": "'bar'"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "proxy"
                                            }
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x334d9a"
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "bar",
                                    "raw": "'bar'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "parse",
                                "raw": "'parse'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "{\"foo\":0,\"bar\":1}",
                                "raw": "'{\\x22foo\\x22:0,\\x22bar\\x22:1}'"
                            },
                            {
                                "type": "Identifier",
                                "name": "reviver"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4,
                        "raw": "0x4"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "ownKeys",
                                "raw": "'ownKeys'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "getOwnPropertyDescriptor",
                                "raw": "'getOwnPropertyDescriptor'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "baz",
                                "raw": "'baz'"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "baz",
                                "raw": "'baz'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "0x2"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "defineProperty",
                                "raw": "'defineProperty'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "baz",
                                "raw": "'baz'"
                            },
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "value",
                                            "raw": "'value'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Literal",
                                            "value": 5,
                                            "raw": "0x5"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "configurable",
                                            "raw": "'configurable'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": []
                                                },
                                                "prefix": true
                                            },
                                            "prefix": true
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "writable",
                                            "raw": "'writable'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": []
                                                },
                                                "prefix": true
                                            },
                                            "prefix": true
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "enumerable",
                                            "raw": "'enumerable'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": []
                                                },
                                                "prefix": true
                                            },
                                            "prefix": true
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "log"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "length",
                        "raw": "'length'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0x0"
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "target"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": 42,
                                "raw": "0x2a"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "proxy"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Proxy"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Identifier",
                                "name": "handler"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Array"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isArray",
                                "raw": "'isArray'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "reviver"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x2187c8"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x1ef47a"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2187c8"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "0",
                                            "raw": "'0'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2187c8"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "foo",
                                            "raw": "'foo'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "ThisExpression"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "bar",
                                                    "raw": "'bar'"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "proxy"
                                            }
                                        }
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x1ef47a"
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "result"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "parse",
                                "raw": "'parse'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "{\"foo\":0,\"bar\":1}",
                                "raw": "'{\"foo\":0,\"bar\":1}'"
                            },
                            {
                                "type": "Identifier",
                                "name": "reviver"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "bar",
                                    "raw": "'bar'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "proxy"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    },
                    {
                        "type": "Identifier",
                        "name": "result"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertSame"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "result"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "bar",
                            "raw": "'bar'"
                        }
                    },
                    {
                        "type": "Identifier",
                        "name": "proxy"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 3,
                        "raw": "0x3"
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "length",
                            "raw": "'length'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "log"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "assertSame"
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "target"
                        },
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "log"
                                },
                                "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    ]
                }
            },
            "each": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "length",
                                "raw": "'length'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get",
                                "raw": "'get'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            },
                            {
                                "type": "Identifier",
                                "name": "proxy"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "deleteProperty",
                                "raw": "'deleteProperty'"
                            },
                            {
                                "type": "Identifier",
                                "name": "target"
                            },
                            {
                                "type": "Literal",
                                "value": "0",
                                "raw": "'0'"
                            }
                        ]
                    },
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "property": {
                            "type": "Literal",
                            "value": 2,
                            "raw": "0x2"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "proxy"
                },
                "right": {
                    "type": "NewExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "Proxy"
                    },
                    "arguments": [
                        {
                            "type": "ArrayExpression",
                            "elements": []
                        },
                        {
                            "type": "ObjectExpression",
                            "properties": [
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "get",
                                        "raw": "'get'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4a13c"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x24b304"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x24b304"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "length",
                                                            "raw": "'length'"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": 7,
                                                            "raw": "0x7"
                                                        }
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[[0,0,0,0,0,0,0]]",
                        "raw": "'[[0,0,0,0,0,0,0]]'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Identifier",
                                        "name": "proxy"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "proxy"
                },
                "right": {
                    "type": "NewExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "Proxy"
                    },
                    "arguments": [
                        {
                            "type": "ArrayExpression",
                            "elements": []
                        },
                        {
                            "type": "ObjectExpression",
                            "properties": [
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "get",
                                        "raw": "'get'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x18b3a0"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x481a6f"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x481a6f"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "length",
                                                            "raw": "'length'"
                                                        }
                                                    },
                                                    "consequent": {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": 1e+40,
                                                            "raw": "0x1d6329f1c35ca500000000000000000000"
                                                        }
                                                    },
                                                    "alternate": null
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertThrows"
                },
                "arguments": [
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "JSON"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "stringify",
                                    "raw": "'stringify'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Identifier",
                                            "name": "proxy"
                                        }
                                    ]
                                }
                            ]
                        },
                        "generator": false,
                        "expression": true,
                        "async": false
                    },
                    {
                        "type": "Identifier",
                        "name": "RangeError"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "log"
                },
                "right": {
                    "type": "ArrayExpression",
                    "elements": []
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "Identifier",
                    "name": "proxy"
                },
                "right": {
                    "type": "NewExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "Proxy"
                    },
                    "arguments": [
                        {
                            "type": "ObjectExpression",
                            "properties": []
                        },
                        {
                            "type": "ObjectExpression",
                            "properties": [
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "ownKeys",
                                        "raw": "'ownKeys'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "push",
                                                                "raw": "'push'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "ownKeys",
                                                                "raw": "'ownKeys'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "0",
                                                                "raw": "'0'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "a",
                                                                "raw": "'a'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "b",
                                                                "raw": "'b'"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "get",
                                        "raw": "'get'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x154708"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x18c29b"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "push",
                                                                "raw": "'push'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "get ",
                                                                    "raw": "'get '"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x18c29b"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x18c29b"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "toUpperCase",
                                                                "raw": "'toUpperCase'"
                                                            }
                                                        },
                                                        "arguments": []
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "getOwnPropertyDescriptor",
                                        "raw": "'getOwnPropertyDescriptor'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x18bece"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4b8635"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "log"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "push",
                                                                "raw": "'push'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "descriptor ",
                                                                    "raw": "'descriptor\\x20'"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4b8635"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "enumerable",
                                                                    "raw": "'enumerable'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            },
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "configurable",
                                                                    "raw": "'configurable'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "isExtensible",
                                        "raw": "'isExtensible'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "has",
                                        "raw": "'has'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "getPrototypeOf",
                                        "raw": "'getPrototypeOf'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "setPrototypeOf",
                                        "raw": "'setPrototypeOf'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "preventExtensions",
                                        "raw": "'preventExtensions'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "setPrototypeOf",
                                        "raw": "'setPrototypeOf'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "defineProperty",
                                        "raw": "'defineProperty'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "set",
                                        "raw": "'set'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "deleteProperty",
                                        "raw": "'deleteProperty'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "apply",
                                        "raw": "'apply'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                },
                                {
                                    "type": "Property",
                                    "key": {
                                        "type": "Literal",
                                        "value": "construct",
                                        "raw": "'construct'"
                                    },
                                    "computed": false,
                                    "value": {
                                        "type": "Identifier",
                                        "name": "assertUnreachable"
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "[{\"0\":\"0\",\"a\":\"A\",\"b\":\"B\"}]",
                        "raw": "'[{\"0\":\"0\",\"a\":\"A\",\"b\":\"B\"}]'"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "JSON"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "stringify",
                                "raw": "'stringify'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrayExpression",
                                "elements": [
                                    {
                                        "type": "Identifier",
                                        "name": "proxy"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "Literal",
                                "value": "get toJSON",
                                "raw": "'get toJSON'"
                            },
                            {
                                "type": "Literal",
                                "value": "ownKeys",
                                "raw": "'ownKeys'"
                            },
                            {
                                "type": "Literal",
                                "value": "descriptor 0",
                                "raw": "'descriptor 0'"
                            },
                            {
                                "type": "Literal",
                                "value": "descriptor a",
                                "raw": "'descriptor a'"
                            },
                            {
                                "type": "Literal",
                                "value": "descriptor b",
                                "raw": "'descriptor b'"
                            },
                            {
                                "type": "Literal",
                                "value": "get 0",
                                "raw": "'get 0'"
                            },
                            {
                                "type": "Literal",
                                "value": "get a",
                                "raw": "'get\\x20a'"
                            },
                            {
                                "type": "Literal",
                                "value": "get b",
                                "raw": "'get\\x20b'"
                            }
                        ]
                    },
                    {
                        "type": "Identifier",
                        "name": "log"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}