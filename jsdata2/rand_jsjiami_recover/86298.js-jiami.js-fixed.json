{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "CanvasPool"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../display/canvas/CanvasPool",
                                "raw": "'../../display/canvas/CanvasPool'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "MeasureText"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x393b3c"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x5b13ce"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "CanvasPool"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "create",
                                                        "raw": "'create'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "ThisExpression"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x5b13ce"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "getContext",
                                                        "raw": "'getContext'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "2d",
                                                        "raw": "'2d'"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x393b3c"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "syncFont",
                                                "raw": "'syncFont'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x5b13ce"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x8ad308"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x547f67"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "measureText",
                                                        "raw": "'measureText'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x393b3c"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "testString",
                                                            "raw": "'testString'"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "in",
                                        "left": {
                                            "type": "Literal",
                                            "value": "actualBoundingBoxAscent",
                                            "raw": "'actualBoundingBoxAscent'"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x8ad308"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x252ecf"
                                                        },
                                                        "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x8ad308"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "actualBoundingBoxAscent",
                                                                "raw": "'actualBoundingBoxAscent'"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x29fc83"
                                                        },
                                                        "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x8ad308"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "actualBoundingBoxDescent",
                                                                "raw": "'actualBoundingBoxDescent'"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "CanvasPool"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "remove",
                                                            "raw": "'remove'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x5b13ce"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "ascent",
                                                                "raw": "'ascent'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "Identifier",
                                                                "name": "_0x252ecf"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "descent",
                                                                "raw": "'descent'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "Identifier",
                                                                "name": "_0x29fc83"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "fontSize",
                                                                "raw": "'fontSize'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x252ecf"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x29fc83"
                                                                }
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x31861a"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "ceil",
                                                        "raw": "'ceil'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x8ad308"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "width",
                                                                "raw": "'width'"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x393b3c"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "baselineX",
                                                                "raw": "'baselineX'"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x22be78"
                                            },
                                            "init": {
                                                "type": "Identifier",
                                                "name": "_0x31861a"
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x210d0f"
                                            },
                                            "init": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": 2,
                                                    "raw": "0x2"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x22be78"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x22be78"
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "|",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x22be78"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x393b3c"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "baselineY",
                                                        "raw": "'baselineY'"
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5b13ce"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "width",
                                                "raw": "'width'"
                                            }
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x31861a"
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5b13ce"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "height",
                                                "raw": "'height'"
                                            }
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x210d0f"
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "fillStyle",
                                                "raw": "'fillStyle'"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "#f00",
                                            "raw": "'#f00'"
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "fillRect",
                                                "raw": "'fillRect'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            },
                                            {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x31861a"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x210d0f"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "font",
                                                "raw": "'font'"
                                            }
                                        },
                                        "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x393b3c"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "_font",
                                                "raw": "'_font'"
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "textBaseline",
                                                "raw": "'textBaseline'"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "alphabetic",
                                            "raw": "'alphabetic'"
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "fillStyle",
                                                "raw": "'fillStyle'"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "#000",
                                            "raw": "'#000'"
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x547f67"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "fillText",
                                                "raw": "'fillText'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x393b3c"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "testString",
                                                    "raw": "'testString'"
                                                }
                                            },
                                            {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x22be78"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x8c955f"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x547f67"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "getImageData",
                                                        "raw": "'getImageData'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x31861a"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x210d0f"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x8c955f"
                                        },
                                        "prefix": true
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x9d5bf"
                                                        },
                                                        "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Literal",
                                                                    "value": "1|2|0|4|3",
                                                                    "raw": "'1|2|0|4|3'"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "split",
                                                                    "raw": "'split'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "|",
                                                                    "raw": "'|'"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x2e3551"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "WhileStatement",
                                                "test": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "SwitchStatement",
                                                            "discriminant": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x9d5bf"
                                                                },
                                                                "property": {
                                                                    "type": "UpdateExpression",
                                                                    "operator": "++",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2e3551"
                                                                    },
                                                                    "prefix": false
                                                                }
                                                            },
                                                            "cases": [
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "0",
                                                                        "raw": "'0'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0x0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "1",
                                                                        "raw": "'1'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0x0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x22be78"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "2",
                                                                        "raw": "'2'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0x0"
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x22be78"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 6,
                                                                                        "raw": "0x6"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "3",
                                                                        "raw": "'3'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x358a54"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "4",
                                                                        "raw": "'4'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "CanvasPool"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "remove",
                                                                                        "raw": "'remove'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x5b13ce"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x523d02"
                                            },
                                            "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x8c955f"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "data",
                                                    "raw": "'data'"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x5753b4"
                                            },
                                            "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x523d02"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "length",
                                                    "raw": "'length'"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x44f7a3"
                                            },
                                            "init": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x31861a"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 4,
                                                    "raw": "0x4"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x2fb7c9"
                                            },
                                            "init": null
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x295a31"
                                            },
                                            "init": null
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x541e5b"
                                            },
                                            "init": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x522e62"
                                            },
                                            "init": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "ArrayExpression",
                                                    "elements": []
                                                },
                                                "prefix": true
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "ForStatement",
                                    "init": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2fb7c9"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        }
                                    },
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "<",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2fb7c9"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x22be78"
                                        }
                                    },
                                    "update": {
                                        "type": "UpdateExpression",
                                        "operator": "++",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x2fb7c9"
                                        },
                                        "prefix": false
                                    },
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ForStatement",
                                                "init": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x295a31"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    }
                                                },
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x295a31"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x44f7a3"
                                                    }
                                                },
                                                "update": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "+=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x295a31"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "0x4"
                                                    }
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x523d02"
                                                                    },
                                                                    "property": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x541e5b"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x295a31"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 255,
                                                                    "raw": "0xff"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x522e62"
                                                                            },
                                                                            "right": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BreakStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": null
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x522e62"
                                                    },
                                                    "prefix": true
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "+=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x541e5b"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x44f7a3"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0x22be78"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x2fb7c9"
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x541e5b"
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0x5753b4"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x44f7a3"
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x522e62"
                                        },
                                        "right": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "ArrayExpression",
                                                "elements": []
                                            },
                                            "prefix": true
                                        }
                                    }
                                },
                                {
                                    "type": "ForStatement",
                                    "init": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2fb7c9"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x210d0f"
                                        }
                                    },
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": ">",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x2fb7c9"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x22be78"
                                        }
                                    },
                                    "update": {
                                        "type": "UpdateExpression",
                                        "operator": "--",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x2fb7c9"
                                        },
                                        "prefix": false
                                    },
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ForStatement",
                                                "init": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x295a31"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    }
                                                },
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x295a31"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x44f7a3"
                                                    }
                                                },
                                                "update": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "+=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x295a31"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 4,
                                                        "raw": "0x4"
                                                    }
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x523d02"
                                                                    },
                                                                    "property": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x541e5b"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x295a31"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 255,
                                                                    "raw": "0xff"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x522e62"
                                                                            },
                                                                            "right": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BreakStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": null
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x522e62"
                                                    },
                                                    "prefix": true
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "-=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x541e5b"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x44f7a3"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0x2fb7c9"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x22be78"
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "CanvasPool"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "remove",
                                                "raw": "'remove'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x5b13ce"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x358a54"
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "MeasureText"
                }
            }
        }
    ],
    "sourceType": "script"
}