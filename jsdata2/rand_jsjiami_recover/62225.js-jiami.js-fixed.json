{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "sloppyPackedArguments"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x135ae3"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x35b0e9"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0xe52041"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0xe52041"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 2,
                                                    "raw": "0x2"
                                                }
                                            },
                                            "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "_0xe52041"
                                                },
                                                "prefix": false
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x35b0e9"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xe52041"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x4d7fdc"
                                        },
                                        "init": null
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x35ff6e"
                                },
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x486c6d"
                                                    },
                                                    "init": {
                                                        "type": "Identifier",
                                                        "name": "arguments"
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x135ae3"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x486c6d"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x4d7fdc"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x486c6d"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": 5,
                                                        "raw": "0x5"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "assertEquals"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "undefined"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x4d7fdc"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x135ae3"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x35ff6e"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                },
                "arguments": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "strictPackedArguments"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Literal",
                                    "value": "use strict",
                                    "raw": "'use strict'"
                                }
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x1512e6"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x464332"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ForStatement",
                                            "init": {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x27793f"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x27793f"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 2,
                                                    "raw": "0x2"
                                                }
                                            },
                                            "update": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "_0x27793f"
                                                },
                                                "prefix": false
                                            },
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x464332"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x27793f"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x386b49"
                                        },
                                        "init": null
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x316fdc"
                                },
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "XhhLx",
                                                    "raw": "'XhhLx'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "JAJKe",
                                                    "raw": "'JAJKe'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1afca3"
                                                                },
                                                                "init": {
                                                                    "type": "Identifier",
                                                                    "name": "arguments"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x1512e6"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1afca3"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x386b49"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1afca3"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": 5,
                                                                    "raw": "0x5"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "assertEquals"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x386b49"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x16b618"
                                                                },
                                                                "init": {
                                                                    "type": "Identifier",
                                                                    "name": "arguments"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x1512e6"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x16b618"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x386b49"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x16b618"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": 5,
                                                                    "raw": "0x5"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "assertEquals"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x386b49"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x1512e6"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x316fdc"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                },
                "arguments": []
            }
        }
    ],
    "sourceType": "script"
}