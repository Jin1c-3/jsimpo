{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "printWarning"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": []
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "BinaryExpression",
                "operator": "!==",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "process"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "env",
                            "raw": "'env'"
                        }
                    },
                    "property": {
                        "type": "Literal",
                        "value": "NODE_ENV",
                        "raw": "'NODE_ENV'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": "production",
                    "raw": "'production'"
                }
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "Identifier",
                                "name": "printWarning"
                            },
                            "right": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x3f24b6"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_0x5467ff"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x198a1c"
                                                    },
                                                    "init": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x72e284"
                                                    },
                                                    "init": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": "Warning: ",
                                                            "raw": "'Warning: '"
                                                        },
                                                        "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x5467ff"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3f24b6"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "replace",
                                                                        "raw": "'replace'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": {},
                                                                        "raw": "/%s/g",
                                                                        "regex": {
                                                                            "pattern": "%s",
                                                                            "flags": "g"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [],
                                                                        "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5467ff"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "UpdateExpression",
                                                                                            "operator": "++",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x198a1c"
                                                                                            },
                                                                                            "prefix": false
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "generator": false,
                                                                        "expression": false,
                                                                        "async": false
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "Identifier",
                                                                "name": "_0x3f24b6"
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "var"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "console"
                                                    },
                                                    "prefix": true
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "undefined",
                                                    "raw": "'undefined'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "console"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "error",
                                                                    "raw": "'error'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x72e284"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "TryStatement",
                                            "block": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x72e284"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "handler": {
                                                "type": "CatchClause",
                                                "param": {
                                                    "type": "Identifier",
                                                    "name": "_0x17e614"
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": []
                                                }
                                            },
                                            "finalizer": null
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        }
                    }
                ]
            },
            "alternate": null
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x3084fd"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "printWarning"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": "Please use `require(\"react-router-dom\").%s` instead of `require(\"react-router-dom/%s\")`. ",
                                                "raw": "'Please use `require(\"react-router-dom\").%s` instead of `require(\"react-router-dom/%s\")`. '"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "Support for the latter will be removed in the next major release.",
                                                "raw": "'Support for the latter will be removed in the next major release.'"
                                            }
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3084fd"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3084fd"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        }
    ],
    "sourceType": "script"
}