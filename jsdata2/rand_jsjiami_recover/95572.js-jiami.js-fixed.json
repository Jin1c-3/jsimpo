{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "responseTime"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1ef94d"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1251a7"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x267df8"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x2a951e"
                                                        },
                                                        "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Literal",
                                                                    "value": "3|4|2|0|1",
                                                                    "raw": "'3|4|2|0|1'"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "split",
                                                                    "raw": "'split'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "|",
                                                                    "raw": "'|'"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x982e4"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "WhileStatement",
                                                "test": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "SwitchStatement",
                                                            "discriminant": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2a951e"
                                                                },
                                                                "property": {
                                                                    "type": "UpdateExpression",
                                                                    "operator": "++",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x982e4"
                                                                    },
                                                                    "prefix": false
                                                                }
                                                            },
                                                            "cases": [
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "0",
                                                                        "raw": "'0'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1251a7"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "on",
                                                                                        "raw": "'on'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": "header",
                                                                                        "raw": "'header'"
                                                                                    },
                                                                                    {
                                                                                        "type": "FunctionExpression",
                                                                                        "id": null,
                                                                                        "params": [],
                                                                                        "body": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "VariableDeclaration",
                                                                                                    "declarations": [
                                                                                                        {
                                                                                                            "type": "VariableDeclarator",
                                                                                                            "id": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x41eb7b"
                                                                                                            },
                                                                                                            "init": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "-",
                                                                                                                "left": {
                                                                                                                    "type": "NewExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "Date"
                                                                                                                    },
                                                                                                                    "arguments": []
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x12e6d8"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "kind": "var"
                                                                                                },
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x1251a7"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "setHeader",
                                                                                                                "raw": "'setHeader'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Literal",
                                                                                                                "value": "X-Response-Time",
                                                                                                                "raw": "'X-Response-Time'"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "+",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x41eb7b"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "ms",
                                                                                                                    "raw": "'ms'"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "generator": false,
                                                                                        "expression": false,
                                                                                        "async": false
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "1",
                                                                        "raw": "'1'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x267df8"
                                                                                },
                                                                                "arguments": []
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "2",
                                                                        "raw": "'2'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1251a7"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "_responseTime",
                                                                                        "raw": "'_responseTime'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "3",
                                                                        "raw": "'3'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "declarations": [
                                                                                {
                                                                                    "type": "VariableDeclarator",
                                                                                    "id": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x12e6d8"
                                                                                    },
                                                                                    "init": {
                                                                                        "type": "NewExpression",
                                                                                        "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Date"
                                                                                        },
                                                                                        "arguments": []
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "kind": "var"
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "4",
                                                                        "raw": "'4'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1251a7"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "_responseTime",
                                                                                    "raw": "'_responseTime'"
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x267df8"
                                                                                    },
                                                                                    "arguments": []
                                                                                }
                                                                            },
                                                                            "alternate": null
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        }
    ],
    "sourceType": "script"
}