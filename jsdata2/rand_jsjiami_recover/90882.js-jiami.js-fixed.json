{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "log4js"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "log4js",
                                "raw": "'log4js'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "shell"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "shelljs",
                                "raw": "'shelljs'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "ObjectPattern",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "graphql"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "baseGraphql"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "@octokit/graphql",
                                "raw": "'@octokit/graphql'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "logger"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "log4js"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "getLogger",
                                "raw": "'getLogger'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "sync",
                                "raw": "'sync'"
                            }
                        ]
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "dotenv",
                                "raw": "'dotenv'"
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "config",
                        "raw": "'config'"
                    }
                },
                "arguments": []
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "token"
                    },
                    "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "process"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "env",
                                "raw": "'env'"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "GITHUB_API_TOKEN",
                            "raw": "'GITHUB_API_TOKEN'"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "host"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "Literal",
                                "value": "https://",
                                "raw": "'https://'"
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "token"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": "@github.com",
                            "raw": "'@github.com'"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "cacheDir"
                    },
                    "init": {
                        "type": "Literal",
                        "value": ".cache",
                        "raw": "'.cache'"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "owner"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "gatsbyjs",
                        "raw": "'gatsbyjs'"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "repoBase"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "gatsby",
                        "raw": "'gatsby'"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "sourceRepo"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "gatsby-i18n-source",
                        "raw": "'gatsby-i18n-source'"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "sourceRepoUrl"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "host"
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "/",
                                        "raw": "'/'"
                                    }
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "owner"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": "/",
                                "raw": "'/'"
                            }
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "sourceRepo"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "sourceRepoGitUrl"
                    },
                    "init": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "Identifier",
                            "name": "sourceRepoUrl"
                        },
                        "right": {
                            "type": "Literal",
                            "value": ".git",
                            "raw": "'.git'"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "syncLabelName"
                    },
                    "init": {
                        "type": "Literal",
                        "value": "sync",
                        "raw": "'sync'"
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "getShortHash"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x10d701"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x10d701"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "substr",
                                    "raw": "'substr'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                },
                                {
                                    "type": "Literal",
                                    "value": 7,
                                    "raw": "0x7"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "cloneOrUpdateRepo"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x82068b"
                },
                {
                    "type": "Identifier",
                    "name": "_0xad35e9"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "shell"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "ls",
                                            "raw": "'ls'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x82068b"
                                        }
                                    ]
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "code",
                                    "raw": "'code'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "logger"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "debug",
                                                "raw": "'debug'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "cloning ",
                                                    "raw": "'cloning '"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x82068b"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exec",
                                                "raw": "'exec'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "git clone ",
                                                    "raw": "'git\\x20clone\\x20'"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0xad35e9"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "cd",
                                                "raw": "'cd'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x82068b"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "cd",
                                                "raw": "'cd'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x82068b"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exec",
                                                "raw": "'exec'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "git checkout master",
                                                "raw": "'git checkout master'"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exec",
                                                "raw": "'exec'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "git pull origin master",
                                                "raw": "'git pull origin master'"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "graphql"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x51a0d5"
                },
                {
                    "type": "Identifier",
                    "name": "_0x26933a"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xaa2f2f"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "baseGraphql"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "defaults",
                                            "raw": "'defaults'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "headers",
                                                        "raw": "'headers'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "authorization",
                                                                    "raw": "'authorization'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "token ",
                                                                        "raw": "'token\\x20'"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "token"
                                                                    }
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "TryStatement",
                        "block": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "AwaitExpression",
                                        "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0xaa2f2f"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x51a0d5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x26933a"
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "handler": {
                            "type": "CatchClause",
                            "param": {
                                "type": "Identifier",
                                "name": "_0xfac381"
                            },
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "IfStatement",
                                        "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                                "type": "Literal",
                                                "value": "Rnxmu",
                                                "raw": "'Rnxmu'"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "NmHUn",
                                                "raw": "'NmHUn'"
                                            }
                                        },
                                        "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "logger"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "info",
                                                                "raw": "'info'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "We are already up to date with source.",
                                                                "raw": "'We\\x20are\\x20already\\x20up\\x20to\\x20date\\x20with\\x20source.'"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "process"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "exit",
                                                                "raw": "'exit'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "logger"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "error",
                                                                "raw": "'error'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xfac381"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "message",
                                                                    "raw": "'message'"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "process"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "exit",
                                                                "raw": "'exit'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "finalizer": null
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "getRepository"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0xa5d275"
                },
                {
                    "type": "Identifier",
                    "name": "_0xf4c49e"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "ObjectPattern",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "repository"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Identifier",
                                                "name": "repository"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": true
                                        }
                                    ]
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "graphql"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "\n      query ($owner: String!, $name: String!, $syncLabel: String!) {\n        repository(owner: $owner, name: $name) {\n          id\n          syncPullRequests: pullRequests(labels: [$syncLabel], first: 1) {\n            nodes {\n              id\n            }\n          }\n          syncLabel: label(name: $syncLabel) {\n            id\n          }\n        }\n      }\n    ",
                                                "raw": "'\n      query ($owner: String!, $name: String!, $syncLabel: String!) {\n        repository(owner: $owner, name: $name) {\n          id\n          syncPullRequests: pullRequests(labels: [$syncLabel], first: 1) {\n            nodes {\n              id\n            }\n          }\n          syncLabel: label(name: $syncLabel) {\n            id\n          }\n        }\n      }\n    '"
                                            },
                                            {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "owner",
                                                            "raw": "'owner'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "_0xa5d275"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "name",
                                                            "raw": "'name'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "_0xf4c49e"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "syncLabel",
                                                            "raw": "'syncLabel'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "syncLabelName"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Identifier",
                            "name": "repository"
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "createLabel"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x280ef7"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "ObjectPattern",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "createLabel"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Identifier",
                                                "name": "createLabel"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": true
                                        }
                                    ]
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "graphql"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "\n      mutation ($input: CreateLabelInput!) {\n        createLabel(input: $input) {\n          label {\n            id\n          }\n        }\n      }\n    ",
                                                "raw": "'\\x0a\\x20\\x20\\x20\\x20\\x20\\x20mutation\\x20($input:\\x20CreateLabelInput!)\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20createLabel(input:\\x20$input)\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20label\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20id\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x20\\x20\\x20\\x20'"
                                            },
                                            {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "headers",
                                                            "raw": "'headers'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "accept",
                                                                        "raw": "'accept'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "Literal",
                                                                        "value": "application/vnd.github.bane-preview+json",
                                                                        "raw": "'application/vnd.github.bane-preview+json'"
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "input",
                                                            "raw": "'input'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "_0x280ef7"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "createLabel"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "label",
                                "raw": "'label'"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "createPullRequest"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x118c81"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "ObjectPattern",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "createPullRequest"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Identifier",
                                                "name": "createPullRequest"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": true
                                        }
                                    ]
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "graphql"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "\n      mutation ($input: CreatePullRequestInput!) {\n        createPullRequest(input: $input) {\n          pullRequest {\n            id\n            number\n          }\n        }\n      }\n    ",
                                                "raw": "'\n      mutation ($input: CreatePullRequestInput!) {\n        createPullRequest(input: $input) {\n          pullRequest {\n            id\n            number\n          }\n        }\n      }\n    '"
                                            },
                                            {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "headers",
                                                            "raw": "'headers'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "accept",
                                                                        "raw": "'accept'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "Literal",
                                                                        "value": "application/vnd.github.shadow-cat-preview+json",
                                                                        "raw": "'application/vnd.github.shadow-cat-preview+json'"
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "input",
                                                            "raw": "'input'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "_0x118c81"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "createPullRequest"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "pullRequest",
                                "raw": "'pullRequest'"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "addLabelToPullRequest"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x3cc52d"
                },
                {
                    "type": "Identifier",
                    "name": "_0x1b3b95"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AwaitExpression",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "graphql"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": "\n      mutation ($input: AddLabelsToLabelableInput!) {\n        addLabelsToLabelable(input: $input) {\n          clientMutationId\n        }\n      }\n    ",
                                        "raw": "'\n      mutation ($input: AddLabelsToLabelableInput!) {\n        addLabelsToLabelable(input: $input) {\n          clientMutationId\n        }\n      }\n    '"
                                    },
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Literal",
                                                    "value": "headers",
                                                    "raw": "'headers'"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "accept",
                                                                "raw": "'accept'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "Literal",
                                                                "value": "application/vnd.github.bane-preview+json",
                                                                "raw": "'application/vnd.github.bane-preview+json'"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        }
                                                    ]
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            },
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Literal",
                                                    "value": "input",
                                                    "raw": "'input'"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "labelableId",
                                                                "raw": "'labelableId'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3cc52d"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "id",
                                                                    "raw": "'id'"
                                                                }
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "labelIds",
                                                                "raw": "'labelIds'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1b3b95"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "id",
                                                                            "raw": "'id'"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        }
                                                    ]
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "conflictPRBody"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x25380e"
                },
                {
                    "type": "Identifier",
                    "name": "_0x5aee8b"
                },
                {
                    "type": "Identifier",
                    "name": "_0x33bfd0"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "\nSync conflicts with the source repo. Please update the translations based on updated source content.\n\nFor more information on how to resolve sync conflicts, check out the [guide for syncing translations](https://gatsbyjs.org/contributing/translation/sync-guide/).\n\n<details ",
                                                                    "raw": "'\nSync conflicts with the source repo. Please update the translations based on updated source content.\n\nFor more information on how to resolve sync conflicts, check out the [guide for syncing translations](https://gatsbyjs.org/contributing/translation/sync-guide/).\n\n<details '"
                                                                },
                                                                "right": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x25380e"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "length",
                                                                                "raw": "'length'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 10,
                                                                            "raw": "0xa"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "Literal",
                                                                        "value": "open",
                                                                        "raw": "'open'"
                                                                    },
                                                                    "alternate": {
                                                                        "type": "Literal",
                                                                        "value": "",
                                                                        "raw": "''"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": ">\n<summary>The following ",
                                                                "raw": "'>\n<summary>The following '"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x25380e"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "length",
                                                                "raw": "'length'"
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": " files have conflicts:</summary><br />\n\n",
                                                        "raw": "' files have conflicts:</summary><br />\n\n'"
                                                    }
                                                },
                                                "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x25380e"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "map",
                                                                    "raw": "'map'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ArrowFunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1f7353"
                                                                        }
                                                                    ],
                                                                    "body": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "* [ ] ",
                                                                            "raw": "'* [ ] '"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1f7353"
                                                                        }
                                                                    },
                                                                    "generator": false,
                                                                    "expression": true,
                                                                    "async": false
                                                                }
                                                            ]
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "join",
                                                            "raw": "'join'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "\n",
                                                            "raw": "'\\x0a'"
                                                        }
                                                    ]
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "\n</details>\n\nOnce all the commits have been fixed, mark this pull request as \"Ready for review\" and merge it in!\n\nSee all changes since the last sync here:\n\n",
                                                "raw": "'\n</details>\n\nOnce all the commits have been fixed, mark this pull request as \"Ready for review\" and merge it in!\n\nSee all changes since the last sync here:\n\n'"
                                            }
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x5aee8b"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "\n\nNOTE: Do **NOT** squash-merge this pull request. The sync script requires a ref to the source repo in order to work correctly.\n\n## Related PRs\n\n#",
                                        "raw": "'\n\nNOTE: Do **NOT** squash-merge this pull request. The sync script requires a ref to the source repo in order to work correctly.\n\n## Related PRs\n\n#'"
                                    }
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0x33bfd0"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": " PR for syncing non-conflicting files\n  ",
                                "raw": "' PR for syncing non-conflicting files\n  '"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "syncPRBody"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Literal",
                            "value": "\nSync all non-conflicting files with the source repo. This PR contains all updates that do not cause any conflicts and can be merged immediately.\n\nNOTE: Do *NOT* squash-merge this pull request. The sync script requires a ref to the source repo in order to work correctly.\n  ",
                            "raw": "'\nSync all non-conflicting files with the source repo. This PR contains all updates that do not cause any conflicts and can be merged immediately.\n\nNOTE: Do *NOT* squash-merge this pull request. The sync script requires a ref to the source repo in order to work correctly.\n  '"
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "syncTranslationRepo"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0xa17af9"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "Identifier",
                                "name": "logger"
                            },
                            "right": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "log4js"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "getLogger",
                                        "raw": "'getLogger'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Literal",
                                            "value": "sync:",
                                            "raw": "'sync:'"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0xa17af9"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "logger"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "level",
                                    "raw": "'level'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": "info",
                                "raw": "'info'"
                            }
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x130fe4"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "repoBase"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "-",
                                            "raw": "'-'"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0xa17af9"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x281522"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "host"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "/",
                                                    "raw": "'/'"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "/",
                                            "raw": "'/'"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x130fe4"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "shell"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "cd",
                                            "raw": "'cd'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "cacheDir"
                                        }
                                    ]
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "code",
                                    "raw": "'code'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "logger"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "debug",
                                                "raw": "'debug'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "creating ",
                                                    "raw": "'creating\\x20'"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "cacheDir"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "mkdir",
                                                "raw": "'mkdir'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "cacheDir"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "cd",
                                                "raw": "'cd'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "cacheDir"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "cloneOrUpdateRepo"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x130fe4"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x281522"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "git remote add source ",
                                        "raw": "'git\\x20remote\\x20add\\x20source\\x20'"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "sourceRepoGitUrl"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git fetch source master",
                                    "raw": "'git\\x20fetch\\x20source\\x20master'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x383ccd"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "getRepository"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "owner"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x130fe4"
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": ">",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x383ccd"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "syncPullRequests",
                                            "raw": "'syncPullRequests'"
                                        }
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "nodes",
                                        "raw": "'nodes'"
                                    }
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "length",
                                    "raw": "'length'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Literal",
                                            "value": "unMUt",
                                            "raw": "'unMUt'"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "RwnQt",
                                            "raw": "'RwnQt'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "shell"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "cd",
                                                            "raw": "'cd'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "repoName"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "shell"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "exec",
                                                            "raw": "'exec'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "git checkout master",
                                                            "raw": "'git checkout master'"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "shell"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "exec",
                                                            "raw": "'exec'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "git pull origin master",
                                                            "raw": "'git pull origin master'"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "info",
                                                            "raw": "'info'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "There are currently open sync pull requests. Please ask the language maintainers to merge the existing PR(s) in before opening another one. Exiting...",
                                                            "raw": "'There are currently open sync pull requests. Please ask the language maintainers to merge the existing PR(s) in before opening another one. Exiting...'"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "process"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "exit",
                                                            "raw": "'exit'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "logger"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "info",
                                    "raw": "'info'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "No currently open sync pull requests.",
                                    "raw": "'No\\x20currently\\x20open\\x20sync\\x20pull\\x20requests.'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x4bf816"
                                },
                                "init": null
                            }
                        ],
                        "kind": "let"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x383ccd"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "syncLabel",
                                    "raw": "'syncLabel'"
                                }
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Literal",
                                            "value": "aGllL",
                                            "raw": "'aGllL'"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "GiNZP",
                                            "raw": "'GiNZP'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "shell"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "exec",
                                                            "raw": "'exec'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "git rm ",
                                                                "raw": "'git rm '"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1d9dbe"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "join",
                                                                        "raw": "'join'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": " ",
                                                                        "raw": "'\\x20'"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "silent",
                                                                        "raw": "'silent'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "ArrayExpression",
                                                                                "elements": []
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "info",
                                                            "raw": "'info'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "Repository does not have a \"",
                                                                    "raw": "'Repository does not have a \"'"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "syncLabelName"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "\" label. Creating one...",
                                                                "raw": "'\\x22\\x20label.\\x20Creating\\x20one...'"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x4bf816"
                                                    },
                                                    "right": {
                                                        "type": "AwaitExpression",
                                                        "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "createLabel"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "repositoryId",
                                                                                "raw": "'repositoryId'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x383ccd"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "id",
                                                                                    "raw": "'id'"
                                                                                }
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "name",
                                                                                "raw": "'name'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Identifier",
                                                                                "name": "syncLabelName"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "description",
                                                                                "raw": "'description'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": "Sync with translation source. Used by @gatsbybot to track open sync pull requests.",
                                                                                "raw": "'Sync with translation source. Used by @gatsbybot to track open sync pull requests.'"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "color",
                                                                                "raw": "'color'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": "fbca04",
                                                                                "raw": "'fbca04'"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "Literal",
                                            "value": "askgQ",
                                            "raw": "'askgQ'"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "askgQ",
                                            "raw": "'askgQ'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "debug",
                                                            "raw": "'debug'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "creating ",
                                                                "raw": "'creating\\x20'"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "cacheDir"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "shell"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "mkdir",
                                                            "raw": "'mkdir'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "cacheDir"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "shell"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "cd",
                                                            "raw": "'cd'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "cacheDir"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "info",
                                                            "raw": "'info'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "Repository has an existing ",
                                                                    "raw": "'Repository has an existing '"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "syncLabelName"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": " label.",
                                                                "raw": "' label.'"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x4bf816"
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x383ccd"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "syncLabel",
                                                            "raw": "'syncLabel'"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x3f2082"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "shell"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "exec",
                                                        "raw": "'exec'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "git merge-base origin/master source/master",
                                                        "raw": "'git merge-base origin/master source/master'"
                                                    },
                                                    {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "silent",
                                                                    "raw": "'silent'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "stdout",
                                                "raw": "'stdout'"
                                            }
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "replace",
                                            "raw": "'replace'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "\n",
                                            "raw": "'\\x0a'"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "",
                                            "raw": "''"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x52c14d"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "getShortHash"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x3f2082"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2928a6"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "shell"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "exec",
                                                        "raw": "'exec'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "git rev-parse source/master",
                                                        "raw": "'git rev-parse source/master'"
                                                    },
                                                    {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "silent",
                                                                    "raw": "'silent'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "stdout",
                                                "raw": "'stdout'"
                                            }
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "replace",
                                            "raw": "'replace'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "\n",
                                            "raw": "'\\x0a'"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "",
                                            "raw": "''"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x3ec9a1"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "getShortHash"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x2928a6"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "logger"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "info",
                                    "raw": "'info'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "Syncing with source (no conflicts)...",
                                    "raw": "'Syncing with source (no conflicts)...'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xe6ae0b"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "sync-",
                                        "raw": "'sync-'"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x3ec9a1"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "shell"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "exec",
                                            "raw": "'exec'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": "git checkout ",
                                                "raw": "'git checkout '"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0xe6ae0b"
                                            }
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "silent",
                                                        "raw": "'silent'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "prefix": true
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "code",
                                    "raw": "'code'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exec",
                                                "raw": "'exec'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "git checkout -b ",
                                                    "raw": "'git\\x20checkout\\x20-b\\x20'"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0xe6ae0b"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git pull source master --no-edit --strategy-option ours",
                                    "raw": "'git pull source master --no-edit --strategy-option ours'"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "silent",
                                                "raw": "'silent'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    },
                                                    "prefix": true
                                                },
                                                "prefix": true
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git diff --name-only --diff-filter=U | xargs git rm",
                                    "raw": "'git\\x20diff\\x20--name-only\\x20--diff-filter=U\\x20|\\x20xargs\\x20git\\x20rm'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git commit --no-edit",
                                    "raw": "'git commit --no-edit'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "git push -u origin ",
                                        "raw": "'git push -u origin '"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0xe6ae0b"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "logger"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "info",
                                    "raw": "'info'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "Creating sync pull request",
                                    "raw": "'Creating sync pull request'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2ea939"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "createPullRequest"
                                        },
                                        "arguments": [
                                            {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "repositoryId",
                                                            "raw": "'repositoryId'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x383ccd"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "id",
                                                                "raw": "'id'"
                                                            }
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "baseRefName",
                                                            "raw": "'baseRefName'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Literal",
                                                            "value": "master",
                                                            "raw": "'master'"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "headRefName",
                                                            "raw": "'headRefName'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "_0xe6ae0b"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "title",
                                                            "raw": "'title'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "(sync) Sync with ",
                                                                        "raw": "'(sync)\\x20Sync\\x20with\\x20'"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "sourceRepo"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": " @ ",
                                                                    "raw": "' @ '"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x3ec9a1"
                                                            }
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "body",
                                                            "raw": "'body'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "syncPRBody"
                                                            },
                                                            "arguments": []
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "maintainerCanModify",
                                                            "raw": "'maintainerCanModify'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AwaitExpression",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "addLabelToPullRequest"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x2ea939"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_0x4bf816"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git checkout master",
                                    "raw": "'git checkout master'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2fd38f"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "sourceRepoUrl"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "/compare/",
                                                    "raw": "'/compare/'"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x52c14d"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "..",
                                            "raw": "'..'"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x3ec9a1"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "logger"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "info",
                                    "raw": "'info'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "Finding conflicts with source...",
                                    "raw": "'Finding conflicts with source...'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xd40a06"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "conflicts-",
                                        "raw": "'conflicts-'"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x3ec9a1"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "shell"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "exec",
                                            "raw": "'exec'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": "git checkout ",
                                                "raw": "'git checkout '"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0xd40a06"
                                            }
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "silent",
                                                        "raw": "'silent'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "prefix": true
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "code",
                                    "raw": "'code'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exec",
                                                "raw": "'exec'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "git checkout -b ",
                                                    "raw": "'git checkout -b '"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0xd40a06"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x519dcc"
                                },
                                "init": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "shell"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exec",
                                                "raw": "'exec'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "git pull source master",
                                                "raw": "'git pull source master'"
                                            },
                                            {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "silent",
                                                            "raw": "'silent'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "stdout",
                                        "raw": "'stdout'"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x519dcc"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "includes",
                                    "raw": "'includes'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "Already up to date.",
                                    "raw": "'Already up to date.'"
                                }
                            ]
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "logger"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "info",
                                                "raw": "'info'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "We are already up to date with source.",
                                                "raw": "'We are already up to date with source.'"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "process"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exit",
                                                "raw": "'exit'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xb5297e"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x519dcc"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "split",
                                            "raw": "'split'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "\n",
                                            "raw": "'\\x0a'"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2427b9"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0xb5297e"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "filter",
                                            "raw": "'filter'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x22b3fb"
                                                }
                                            ],
                                            "body": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x22b3fb"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "startsWith",
                                                        "raw": "'startsWith'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "CONFLICT (content)",
                                                        "raw": "'CONFLICT (content)'"
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x2427b9"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "length",
                                    "raw": "'length'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "logger"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "info",
                                                "raw": "'info'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "No conflicting files found. Exiting...",
                                                "raw": "'No conflicting files found. Exiting...'"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "process"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exit",
                                                "raw": "'exit'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x23e64b"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x2427b9"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "map",
                                            "raw": "'map'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1acd77"
                                                }
                                            ],
                                            "body": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x1acd77"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "substr",
                                                        "raw": "'substr'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1acd77"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "lastIndexOf",
                                                                    "raw": "'lastIndexOf'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": " ",
                                                                    "raw": "'\\x20'"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git reset",
                                    "raw": "'git\\x20reset'"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "silent",
                                                "raw": "'silent'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    },
                                                    "prefix": true
                                                },
                                                "prefix": true
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "git add ",
                                        "raw": "'git add '"
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x23e64b"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "join",
                                                "raw": "'join'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": " ",
                                                "raw": "'\\x20'"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x10e72f"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0xb5297e"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "filter",
                                            "raw": "'filter'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x224785"
                                                }
                                            ],
                                            "body": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x224785"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "startsWith",
                                                        "raw": "'startsWith'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "CONFLICT (modify/delete)",
                                                        "raw": "'CONFLICT (modify/delete)'"
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x1d9dbe"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x10e72f"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "map",
                                            "raw": "'map'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2239ae"
                                                }
                                            ],
                                            "body": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2239ae"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "replace",
                                                                    "raw": "'replace'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "CONFLICT (modify/delete): ",
                                                                    "raw": "'CONFLICT\\x20(modify/delete):\\x20'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "",
                                                                    "raw": "''"
                                                                }
                                                            ]
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "split",
                                                            "raw": "'split'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": " ",
                                                            "raw": "'\\x20'"
                                                        }
                                                    ]
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0x0"
                                                }
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": ">",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x1d9dbe"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "length",
                                    "raw": "'length'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "Literal",
                                            "value": "wzFIz",
                                            "raw": "'wzFIz'"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "wzFIz",
                                            "raw": "'wzFIz'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "info",
                                                            "raw": "'info'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "Repository has an existing ",
                                                                    "raw": "'Repository has an existing '"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "syncLabelName"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": " label.",
                                                                "raw": "' label.'"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x4bf816"
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x383ccd"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "syncLabel",
                                                            "raw": "'syncLabel'"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "shell"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "exec",
                                                            "raw": "'exec'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "git rm ",
                                                                "raw": "'git rm '"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1d9dbe"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "join",
                                                                        "raw": "'join'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": " ",
                                                                        "raw": "'\\x20'"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "silent",
                                                                        "raw": "'silent'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "ArrayExpression",
                                                                                "elements": []
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git checkout -- .",
                                    "raw": "'git checkout -- .'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git clean -fd",
                                    "raw": "'git clean -fd'"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "silent",
                                                "raw": "'silent'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    },
                                                    "prefix": true
                                                },
                                                "prefix": true
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "git commit -m \"Commit git conflicts\"",
                                    "raw": "'git\\x20commit\\x20-m\\x20\\x22Commit\\x20git\\x20conflicts\\x22'"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "silent",
                                                "raw": "'silent'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    },
                                                    "prefix": true
                                                },
                                                "prefix": true
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "shell"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "exec",
                                    "raw": "'exec'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "git push -u origin ",
                                        "raw": "'git push -u origin '"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0xd40a06"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "logger"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "info",
                                    "raw": "'info'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "Creating conflicts pull request",
                                    "raw": "'Creating conflicts pull request'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x581922"
                                },
                                "init": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "createPullRequest"
                                        },
                                        "arguments": [
                                            {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "repositoryId",
                                                            "raw": "'repositoryId'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x383ccd"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "id",
                                                                "raw": "'id'"
                                                            }
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "baseRefName",
                                                            "raw": "'baseRefName'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Literal",
                                                            "value": "master",
                                                            "raw": "'master'"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "headRefName",
                                                            "raw": "'headRefName'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "Identifier",
                                                            "name": "_0xd40a06"
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "title",
                                                            "raw": "'title'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "Literal",
                                                                        "value": "(sync) Resolve conflicts with ",
                                                                        "raw": "'(sync)\\x20Resolve\\x20conflicts\\x20with\\x20'"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "sourceRepo"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": " @ ",
                                                                    "raw": "' @ '"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x3ec9a1"
                                                            }
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "body",
                                                            "raw": "'body'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "conflictPRBody"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x23e64b"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2fd38f"
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2ea939"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "number",
                                                                        "raw": "'number'"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "maintainerCanModify",
                                                            "raw": "'maintainerCanModify'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    },
                                                    {
                                                        "type": "Property",
                                                        "key": {
                                                            "type": "Literal",
                                                            "value": "draft",
                                                            "raw": "'draft'"
                                                        },
                                                        "computed": false,
                                                        "value": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "kind": "init",
                                                        "method": false,
                                                        "shorthand": false
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AwaitExpression",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "addLabelToPullRequest"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x581922"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_0x4bf816"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "ArrayPattern",
                        "elements": [
                            {
                                "type": "Identifier",
                                "name": "langCode"
                            }
                        ]
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "process"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "argv",
                                    "raw": "'argv'"
                                }
                            },
                            "property": {
                                "type": "Literal",
                                "value": "slice",
                                "raw": "'slice'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "syncTranslationRepo"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "langCode"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}