{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "_interopRequireDefault"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "@babel/runtime/helpers/interopRequireDefault",
                                "raw": "'@babel/runtime/helpers/interopRequireDefault'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "Object"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "defineProperty",
                        "raw": "'defineProperty'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    {
                        "type": "Literal",
                        "value": "__esModule",
                        "raw": "'__esModule'"
                    },
                    {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "value",
                                    "raw": "'value'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "default",
                        "raw": "'default'"
                    }
                },
                "right": {
                    "type": "UnaryExpression",
                    "operator": "void",
                    "argument": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    "prefix": true
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "React"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "_interopRequireWildcard"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "require"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": "react",
                                        "raw": "'react'"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "_createSvgIcon"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "_interopRequireDefault"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "require"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": "./utils/createSvgIcon",
                                        "raw": "'./utils/createSvgIcon'"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "_jsxRuntime"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "react/jsx-runtime",
                                "raw": "'react/jsx-runtime'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_getRequireWildcardCache"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x2eea9a"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "WeakMap"
                                },
                                "prefix": true
                            },
                            "right": {
                                "type": "Literal",
                                "value": "function",
                                "raw": "'function'"
                            }
                        },
                        "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                                "type": "Literal",
                                "value": null,
                                "raw": "null"
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x50e90c"
                                },
                                "init": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "WeakMap"
                                    },
                                    "arguments": []
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x22121c"
                                },
                                "init": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "WeakMap"
                                    },
                                    "arguments": []
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_getRequireWildcardCache"
                                },
                                "right": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x2eea9a"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                        "type": "Identifier",
                                                        "name": "_0x2eea9a"
                                                    },
                                                    "consequent": {
                                                        "type": "Identifier",
                                                        "name": "_0x22121c"
                                                    },
                                                    "alternate": {
                                                        "type": "Identifier",
                                                        "name": "_0x50e90c"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x2eea9a"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_interopRequireWildcard"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x3482f2"
                },
                {
                    "type": "Identifier",
                    "name": "_0x10795e"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x10795e"
                                    },
                                    "prefix": true
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0x3482f2"
                                }
                            },
                            "right": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x3482f2"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "__esModule",
                                    "raw": "'__esModule'"
                                }
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x3482f2"
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x3482f2"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            },
                            "right": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "!==",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x3482f2"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "object",
                                        "raw": "'object'"
                                    }
                                },
                                "right": {
                                    "type": "BinaryExpression",
                                    "operator": "!==",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x3482f2"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "function",
                                        "raw": "'function'"
                                    }
                                }
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Literal",
                                                    "value": "default",
                                                    "raw": "'default'"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "Identifier",
                                                    "name": "_0x3482f2"
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2be8d3"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_getRequireWildcardCache"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x10795e"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x2be8d3"
                            },
                            "right": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x2be8d3"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "has",
                                        "raw": "'has'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x3482f2"
                                    }
                                ]
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x2be8d3"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "get",
                                                "raw": "'get'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x3482f2"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x343635"
                                },
                                "init": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "defineProperty",
                                            "raw": "'defineProperty'"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "getOwnPropertyDescriptor",
                                            "raw": "'getOwnPropertyDescriptor'"
                                        }
                                    }
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ForInStatement",
                        "left": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "_0x42a710"
                                    },
                                    "init": null
                                }
                            ],
                            "kind": "var"
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "_0x3482f2"
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "!==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0x42a710"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "default",
                                                "raw": "'default'"
                                            }
                                        },
                                        "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Object"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "prototype",
                                                            "raw": "'prototype'"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "hasOwnProperty",
                                                        "raw": "'hasOwnProperty'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "call",
                                                    "raw": "'call'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3482f2"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x42a710"
                                                }
                                            ]
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x57ff6d"
                                                        },
                                                        "init": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "Identifier",
                                                                "name": "_0x343635"
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Object"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "getOwnPropertyDescriptor",
                                                                        "raw": "'getOwnPropertyDescriptor'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3482f2"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x42a710"
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x57ff6d"
                                                    },
                                                    "right": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x57ff6d"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "get",
                                                                "raw": "'get'"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x57ff6d"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "set",
                                                                "raw": "'set'"
                                                            }
                                                        }
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "bJiGp",
                                                                    "raw": "'bJiGp'"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "bJiGp",
                                                                    "raw": "'bJiGp'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Object"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "defineProperty",
                                                                                    "raw": "'defineProperty'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1af20f"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x42a710"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x57ff6d"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Object"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "defineProperty",
                                                                                    "raw": "'defineProperty'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1af20f"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x42a710"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x57ff6d"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1af20f"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x42a710"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3482f2"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x42a710"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                }
                            ]
                        },
                        "each": false
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x1af20f"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "default",
                                    "raw": "'default'"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "_0x3482f2"
                            }
                        }
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "Identifier",
                            "name": "_0x2be8d3"
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x2be8d3"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "set",
                                                "raw": "'set'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x3482f2"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x1af20f"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Identifier",
                            "name": "_0x1af20f"
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "_default"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                },
                                {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_createSvgIcon"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "default",
                                        "raw": "'default'"
                                    }
                                }
                            ]
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "SequenceExpression",
                                    "expressions": [
                                        {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_jsxRuntime"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "jsxs",
                                                "raw": "'jsxs'"
                                            }
                                        }
                                    ]
                                },
                                "arguments": [
                                    {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "React"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "Fragment",
                                            "raw": "'Fragment'"
                                        }
                                    },
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Literal",
                                                    "value": "children",
                                                    "raw": "'children'"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "SequenceExpression",
                                                                "expressions": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_jsxRuntime"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "jsx",
                                                                            "raw": "'jsx'"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "path",
                                                                    "raw": "'path'"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "fillOpacity",
                                                                                "raw": "'fillOpacity'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": ".3",
                                                                                "raw": "'.3'"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "d",
                                                                                "raw": "'d'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": "M15.5 14.5c0-2.8 2.2-5 5-5 .36 0 .71.04 1.05.11L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l10.08 12.56c.8 1 2.32 1 3.12 0l1.94-2.42V14.5z",
                                                                                "raw": "'M15.5\\x2014.5c0-2.8\\x202.2-5\\x205-5\\x20.36\\x200\\x20.71.04\\x201.05.11L23.64\\x207c-.45-.34-4.93-4-11.64-4C5.28\\x203\\x20.81\\x206.66.36\\x207l10.08\\x2012.56c.8\\x201\\x202.32\\x201\\x203.12\\x200l1.94-2.42V14.5z'"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "SequenceExpression",
                                                                "expressions": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_jsxRuntime"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "jsx",
                                                                            "raw": "'jsx'"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "path",
                                                                    "raw": "'path'"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "d",
                                                                                "raw": "'d'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": "M15.5 14.5c0-1.34.51-2.53 1.34-3.42C15.62 10.51 13.98 10 12 10c-4.1 0-6.8 2.2-7.2 2.5l5.64 7.05c.8 1 2.32 1 3.12 0l1.94-2.42V14.5zM23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16z",
                                                                                "raw": "'M15.5\\x2014.5c0-1.34.51-2.53\\x201.34-3.42C15.62\\x2010.51\\x2013.98\\x2010\\x2012\\x2010c-4.1\\x200-6.8\\x202.2-7.2\\x202.5l5.64\\x207.05c.8\\x201\\x202.32\\x201\\x203.12\\x200l1.94-2.42V14.5zM23\\x2016v-1.5c0-1.4-1.1-2.5-2.5-2.5S18\\x2013.1\\x2018\\x2014.5V16c-.5\\x200-1\\x20.5-1\\x201v4c0\\x20.5.5\\x201\\x201\\x201h5c.5\\x200\\x201-.5\\x201-1v-4c0-.5-.5-1-1-1zm-1\\x200h-3v-1.5c0-.8.7-1.5\\x201.5-1.5s1.5.7\\x201.5\\x201.5V16z'"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "type": "Literal",
                                "value": "SignalWifi2BarLockRounded",
                                "raw": "'SignalWifi2BarLockRounded'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "default",
                        "raw": "'default'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "_default"
                }
            }
        }
    ],
    "sourceType": "script"
}