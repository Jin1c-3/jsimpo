{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "isNaN"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "expm1",
                                        "raw": "'expm1'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "NaN"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "isNaN"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "expm1",
                                        "raw": "'expm1'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": []
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "isNaN"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "expm1",
                                        "raw": "'expm1'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Literal",
                                                    "value": "toString",
                                                    "raw": "'toString'"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "NaN"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": false,
                                                    "async": false
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertTrue"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "isNaN"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "expm1",
                                        "raw": "'expm1'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Literal",
                                                    "value": "valueOf",
                                                    "raw": "'valueOf'"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": "abc",
                                                                    "raw": "'abc'"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": false,
                                                    "async": false
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Infinity"
                    },
                    {
                        "type": "BinaryExpression",
                        "operator": "/",
                        "left": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "right": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "expm1",
                                    "raw": "'expm1'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Identifier",
                            "name": "Infinity"
                        },
                        "prefix": true
                    },
                    {
                        "type": "BinaryExpression",
                        "operator": "/",
                        "left": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "right": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "expm1",
                                    "raw": "'expm1'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    },
                                    "prefix": true
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Infinity"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "Infinity"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "Infinity"
                                },
                                "prefix": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ForStatement",
            "init": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "x"
                        },
                        "init": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ],
                "kind": "var"
            },
            "test": {
                "type": "BinaryExpression",
                "operator": "<",
                "left": {
                    "type": "Identifier",
                    "name": "x"
                },
                "right": {
                    "type": "Literal",
                    "value": 700,
                    "raw": "0x2bc"
                }
            },
            "update": {
                "type": "AssignmentExpression",
                "operator": "+=",
                "left": {
                    "type": "Identifier",
                    "name": "x"
                },
                "right": {
                    "type": "Literal",
                    "value": 0.25,
                    "raw": "0.25"
                }
            },
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "expected"
                                },
                                "init": {
                                    "type": "BinaryExpression",
                                    "operator": "-",
                                    "left": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "Math"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "exp",
                                                "raw": "'exp'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "x"
                                            }
                                        ]
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "0x1"
                                    }
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertEqualsDelta"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "expected"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "expm1",
                                            "raw": "'expm1'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "x"
                                        }
                                    ]
                                },
                                {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "expected"
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 1e-15,
                                        "raw": "1e-15"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "Identifier",
                                "name": "expected"
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "-",
                                "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "exp",
                                            "raw": "'exp'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "x"
                                            },
                                            "prefix": true
                                        }
                                    ]
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                }
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertEqualsDelta"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "expected"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "expm1",
                                            "raw": "'expm1'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "x"
                                            },
                                            "prefix": true
                                        }
                                    ]
                                },
                                {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "expected"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 1e-15,
                                        "raw": "1e-15"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "expm1"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0xaf542d"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "BinaryExpression",
                            "operator": "*",
                            "left": {
                                "type": "Identifier",
                                "name": "_0xaf542d"
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                },
                                "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x37f658"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "PXArZ",
                                            "raw": "'PXArZ'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0xaf542d"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x37f658"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "clRpO",
                                                    "raw": "'clRpO'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "0x1"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "0x2"
                                                    }
                                                },
                                                {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0xaf542d"
                                                    },
                                                    "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 6,
                                                                "raw": "0x6"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "*",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0xaf542d"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x37f658"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "elAvt",
                                                                        "raw": "'elAvt'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "/",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 1,
                                                                            "raw": "0x1"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 24,
                                                                            "raw": "0x18"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x37f658"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "GcUyq",
                                                                                "raw": "'GcUyq'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0xaf542d"
                                                                            },
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "/",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": 1,
                                                                                        "raw": "0x1"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 120,
                                                                                        "raw": "0x78"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "*",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xaf542d"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "/",
                                                                                            "left": {
                                                                                                "type": "Literal",
                                                                                                "value": 1,
                                                                                                "raw": "0x1"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 720,
                                                                                                "raw": "0x2d0"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xaf542d"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "/",
                                                                                                    "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 1,
                                                                                                        "raw": "0x1"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 5040,
                                                                                                        "raw": "0x13b0"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xaf542d"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "/",
                                                                                                            "left": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 1,
                                                                                                                "raw": "0x1"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 40320,
                                                                                                                "raw": "0x9d80"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "*",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0xaf542d"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "+",
                                                                                                                "left": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "/",
                                                                                                                    "left": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 1,
                                                                                                                        "raw": "0x1"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 362880,
                                                                                                                        "raw": "0x58980"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "*",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0xaf542d"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "BinaryExpression",
                                                                                                                        "operator": "/",
                                                                                                                        "left": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 1,
                                                                                                                            "raw": "0x1"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 3628800,
                                                                                                                            "raw": "0x375f00"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ForStatement",
            "init": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "x"
                        },
                        "init": {
                            "type": "Literal",
                            "value": 0.1,
                            "raw": "0.1"
                        }
                    }
                ],
                "kind": "var"
            },
            "test": {
                "type": "BinaryExpression",
                "operator": ">",
                "left": {
                    "type": "Identifier",
                    "name": "x"
                },
                "right": {
                    "type": "Literal",
                    "value": 1e-300,
                    "raw": "1e-300"
                }
            },
            "update": {
                "type": "AssignmentExpression",
                "operator": "*=",
                "left": {
                    "type": "Identifier",
                    "name": "x"
                },
                "right": {
                    "type": "Literal",
                    "value": 0.8,
                    "raw": "0.8"
                }
            },
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "expected"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "expm1"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "x"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "assertEqualsDelta"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "expected"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Math"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "expm1",
                                            "raw": "'expm1'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "x"
                                        }
                                    ]
                                },
                                {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "expected"
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 1e-15,
                                        "raw": "1e-15"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Infinity"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 709.8,
                                "raw": "709.8"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Infinity"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "exp",
                                "raw": "'exp'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 1.7976931348623157e+308,
                                "raw": "0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "*",
                                "left": {
                                    "type": "UnaryExpression",
                                    "operator": "-",
                                    "argument": {
                                        "type": "Literal",
                                        "value": 56,
                                        "raw": "0x38"
                                    },
                                    "prefix": true
                                },
                                "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "LN2",
                                        "raw": "'LN2'"
                                    }
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 50,
                                    "raw": "0x32"
                                },
                                "prefix": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 1.7976931348623157e+308,
                                    "raw": "0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                },
                                "prefix": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "E",
                                "raw": "'E'"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "/",
                            "left": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            },
                            "right": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "E",
                                    "raw": "'E'"
                                }
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 1,
                                    "raw": "0x1"
                                },
                                "prefix": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 6.38905609893065,
                        "raw": "6.38905609893065"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 0.8646647167633873,
                            "raw": "0.8646647167633873"
                        },
                        "prefix": true
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                "prefix": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "pow",
                                "raw": "'pow'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "Literal",
                                    "value": 55,
                                    "raw": "0x37"
                                },
                                "prefix": true
                            }
                        ]
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "UnaryExpression",
                                        "operator": "-",
                                        "argument": {
                                            "type": "Literal",
                                            "value": 55,
                                            "raw": "0x37"
                                        },
                                        "prefix": true
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0.18920711500272105,
                        "raw": "0.18920711500272105"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "*",
                                "left": {
                                    "type": "Literal",
                                    "value": 0.25,
                                    "raw": "0.25"
                                },
                                "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "LN2",
                                        "raw": "'LN2'"
                                    }
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 0.5,
                            "raw": "0.5"
                        },
                        "prefix": true
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "LN2",
                                        "raw": "'LN2'"
                                    }
                                },
                                "prefix": true
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "0x1"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "LN2",
                                    "raw": "'LN2'"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 144115188075855820,
                        "raw": "0x1ffffffffffffd0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "*",
                                "left": {
                                    "type": "Literal",
                                    "value": 57,
                                    "raw": "0x39"
                                },
                                "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "LN2",
                                        "raw": "'LN2'"
                                    }
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 524286.99999999994,
                        "raw": "524286.99999999994"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "*",
                                "left": {
                                    "type": "Literal",
                                    "value": 19,
                                    "raw": "0x13"
                                },
                                "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "LN2",
                                        "raw": "'LN2'"
                                    }
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 1048575,
                        "raw": "0xfffff"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "expm1",
                                "raw": "'expm1'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "*",
                                "left": {
                                    "type": "Literal",
                                    "value": 20,
                                    "raw": "0x14"
                                },
                                "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "LN2",
                                        "raw": "'LN2'"
                                    }
                                }
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}