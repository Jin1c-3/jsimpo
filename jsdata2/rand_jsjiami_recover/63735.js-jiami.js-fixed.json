{
    "type": "Program",
    "body": [
        {
            "type": "BlockStatement",
            "body": [
                {
                    "type": "FunctionDeclaration",
                    "id": {
                        "type": "Identifier",
                        "name": "foo"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": []
                    },
                    "generator": true,
                    "expression": false,
                    "async": false
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "assertEquals"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "function",
                                "raw": "'function'"
                            },
                            {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "foo"
                                },
                                "prefix": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "assertEquals"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "undefined",
                        "raw": "'undefined'"
                    },
                    {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                            "type": "Identifier",
                            "name": "foo"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x46351e"
                                        },
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": []
                                        },
                                        "generator": true,
                                        "expression": false,
                                        "async": false
                                    }
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "assertEquals"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "undefined",
                                            "raw": "'undefined'"
                                        },
                                        {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_0x46351e"
                                            },
                                            "prefix": true
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                },
                "arguments": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "FunctionDeclaration",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xec9815"
                                },
                                "params": [],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "IoXOu",
                                                    "raw": "'IoXOu'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "EhLXV",
                                                    "raw": "'EhLXV'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "FunctionDeclaration",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x4271f0"
                                                        },
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": []
                                                        },
                                                        "generator": true,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "assertEquals"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "function",
                                                                    "raw": "'function'"
                                                                },
                                                                {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "typeof",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4271f0"
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "YieldExpression",
                                                            "argument": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            },
                                                            "delegate": false
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": true,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "IfStatement",
                                        "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                                "type": "Literal",
                                                "value": "YYvsG",
                                                "raw": "'YYvsG'"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "YYvsG",
                                                "raw": "'YYvsG'"
                                            }
                                        },
                                        "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "FunctionDeclaration",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0xec9815"
                                                    },
                                                    "params": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "YieldExpression",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 2,
                                                                        "raw": "0x2"
                                                                    },
                                                                    "delegate": false
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "generator": true,
                                                    "expression": false,
                                                    "async": false
                                                }
                                            ]
                                        },
                                        "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "FunctionDeclaration",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x2e3d1f"
                                                    },
                                                    "params": [],
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                    },
                                                    "generator": true,
                                                    "expression": false,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "assertEquals"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0xec9815"
                                                        },
                                                        "arguments": []
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "next",
                                                        "raw": "'next'"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "value",
                                                "raw": "'value'"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                },
                "arguments": []
            }
        }
    ],
    "sourceType": "script"
}