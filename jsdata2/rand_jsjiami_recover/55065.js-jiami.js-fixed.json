{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "require"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "../common",
                        "raw": "'../common'"
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "assert",
                                "raw": "'assert'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "makeIterableFunc"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x396d18"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Object"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "assign",
                                    "raw": "'assign'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "ArrowFunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": []
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                },
                                {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Symbol"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "iterator",
                                                    "raw": "'iterator'"
                                                }
                                            },
                                            "computed": true,
                                            "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x396d18"
                                                                    },
                                                                    "property": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Symbol"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "iterator",
                                                                            "raw": "'iterator'"
                                                                        }
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": false,
                                                "async": false
                                            },
                                            "kind": "init",
                                            "method": true,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "BlockStatement",
            "body": [
                {
                    "type": "VariableDeclaration",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "Identifier",
                                "name": "params"
                            },
                            "init": null
                        }
                    ],
                    "kind": "let"
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "Identifier",
                            "name": "params"
                        },
                        "right": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "URLSearchParams"
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "undefined"
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "strictEqual",
                                "raw": "'strictEqual'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "params"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "toString",
                                        "raw": "'toString'"
                                    }
                                },
                                "arguments": []
                            },
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "Identifier",
                            "name": "params"
                        },
                        "right": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "URLSearchParams"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "strictEqual",
                                "raw": "'strictEqual'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "params"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "toString",
                                        "raw": "'toString'"
                                    }
                                },
                                "arguments": []
                            },
                            {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "Identifier",
                            "name": "params"
                        },
                        "right": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "URLSearchParams"
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "makeIterableFunc"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "key",
                                                            "raw": "'key'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "val",
                                                            "raw": "'val'"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "key2",
                                                            "raw": "'key2'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "val2",
                                                            "raw": "'val2'"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "strictEqual",
                                "raw": "'strictEqual'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "params"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "toString",
                                        "raw": "'toString'"
                                    }
                                },
                                "arguments": []
                            },
                            {
                                "type": "Literal",
                                "value": "key=val&key2=val2",
                                "raw": "'key=val&key2=val2'"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "Identifier",
                            "name": "params"
                        },
                        "right": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "URLSearchParams"
                            },
                            "arguments": [
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "makeIterableFunc"
                                    },
                                    "arguments": [
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "key",
                                                                    "raw": "'key'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "val",
                                                                    "raw": "'val'"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "key2",
                                                                    "raw": "'key2'"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "val2",
                                                                    "raw": "'val2'"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "map",
                                                    "raw": "'map'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "makeIterableFunc"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "strictEqual",
                                "raw": "'strictEqual'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "params"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "toString",
                                        "raw": "'toString'"
                                    }
                                },
                                "arguments": []
                            },
                            {
                                "type": "Literal",
                                "value": "key=val&key2=val2",
                                "raw": "'key=val&key2=val2'"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "tupleError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "0x2"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": 3,
                                                            "raw": "0x3"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "tupleError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Symbol"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "iterator",
                                                            "raw": "'iterator'"
                                                        }
                                                    },
                                                    "computed": true,
                                                    "value": {
                                                        "type": "Literal",
                                                        "value": 42,
                                                        "raw": "0x2a"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "iterableError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ObjectExpression",
                                                    "properties": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "tupleError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": "a",
                                                    "raw": "'a'"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "tupleError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "tupleError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Symbol"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "iterator",
                                                                    "raw": "'iterator'"
                                                                }
                                                            },
                                                            "computed": true,
                                                            "value": {
                                                                "type": "Literal",
                                                                "value": 42,
                                                                "raw": "0x2a"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "tupleError"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "BlockStatement",
            "body": [
                {
                    "type": "VariableDeclaration",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "Identifier",
                                "name": "obj"
                            },
                            "init": {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "toString",
                                            "raw": "'toString'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "toString",
                                                                    "raw": "'toString'"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": true,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "valueOf",
                                            "raw": "'valueOf'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ThrowStatement",
                                                        "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "Error"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "valueOf",
                                                                    "raw": "'valueOf'"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": true,
                                        "shorthand": false
                                    }
                                ]
                            }
                        }
                    ],
                    "kind": "const"
                },
                {
                    "type": "VariableDeclaration",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "Identifier",
                                "name": "sym"
                            },
                            "init": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "Symbol"
                                },
                                "arguments": []
                            }
                        }
                    ],
                    "kind": "const"
                },
                {
                    "type": "VariableDeclaration",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "Identifier",
                                "name": "toStringError"
                            },
                            "init": {
                                "type": "Literal",
                                "value": {},
                                "raw": "/^Error: toString$/",
                                "regex": {
                                    "pattern": "^Error: toString$",
                                    "flags": ""
                                }
                            }
                        }
                    ],
                    "kind": "const"
                },
                {
                    "type": "VariableDeclaration",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "Identifier",
                                "name": "symbolError"
                            },
                            "init": {
                                "type": "Literal",
                                "value": {},
                                "raw": "/^TypeError: Cannot convert a Symbol value to a string$/",
                                "regex": {
                                    "pattern": "^TypeError: Cannot convert a Symbol value to a string$",
                                    "flags": ""
                                }
                            }
                        }
                    ],
                    "kind": "const"
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "a",
                                                        "raw": "'a'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "obj"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "toStringError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "a",
                                                            "raw": "'a'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "obj"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "toStringError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "sym"
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "symbolError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "sym"
                                                    },
                                                    "computed": true,
                                                    "value": {
                                                        "type": "Literal",
                                                        "value": "a",
                                                        "raw": "'a'"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "symbolError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "a",
                                                        "raw": "'a'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "sym"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "symbolError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sym"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "a",
                                                            "raw": "'a'"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "symbolError"
                            }
                        ]
                    }
                },
                {
                    "type": "ExpressionStatement",
                    "expression": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "assert"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "throws",
                                "raw": "'throws'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ArrowFunctionExpression",
                                "id": null,
                                "params": [],
                                "body": {
                                    "type": "NewExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "URLSearchParams"
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "a",
                                                            "raw": "'a'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "sym"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": true,
                                "async": false
                            },
                            {
                                "type": "Identifier",
                                "name": "symbolError"
                            }
                        ]
                    }
                }
            ]
        }
    ],
    "sourceType": "script"
}