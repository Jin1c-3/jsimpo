{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "AngleBetweenPoints"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/angle/BetweenPoints",
                                "raw": "'../../math/angle/BetweenPoints'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Body"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./Body",
                                "raw": "'./Body'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Clamp"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/Clamp",
                                "raw": "'../../math/Clamp'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Class"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../utils/Class",
                                "raw": "'../../utils/Class'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Collider"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./Collider",
                                "raw": "'./Collider'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "CONST"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./const",
                                "raw": "'./const'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "DistanceBetween"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/distance/DistanceBetween",
                                "raw": "'../../math/distance/DistanceBetween'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "EventEmitter"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "eventemitter3",
                                "raw": "'eventemitter3'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Events"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./events",
                                "raw": "'./events'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "FuzzyEqual"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/fuzzy/Equal",
                                "raw": "'../../math/fuzzy/Equal'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "FuzzyGreaterThan"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/fuzzy/GreaterThan",
                                "raw": "'../../math/fuzzy/GreaterThan'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "FuzzyLessThan"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/fuzzy/LessThan",
                                "raw": "'../../math/fuzzy/LessThan'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "GetOverlapX"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./GetOverlapX",
                                "raw": "'./GetOverlapX'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "GetOverlapY"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./GetOverlapY",
                                "raw": "'./GetOverlapY'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "GetTilesWithinWorldXY"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../tilemaps/components/GetTilesWithinWorldXY",
                                "raw": "'../../tilemaps/components/GetTilesWithinWorldXY'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "GetValue"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../utils/object/GetValue",
                                "raw": "'../../utils/object/GetValue'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "MATH_CONST"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/const",
                                "raw": "'../../math/const'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ProcessQueue"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../structs/ProcessQueue",
                                "raw": "'../../structs/ProcessQueue'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ProcessTileCallbacks"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./tilemap/ProcessTileCallbacks",
                                "raw": "'./tilemap/ProcessTileCallbacks'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Rectangle"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../geom/rectangle/Rectangle",
                                "raw": "'../../geom/rectangle/Rectangle'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "RTree"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../structs/RTree",
                                "raw": "'../../structs/RTree'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "SeparateTile"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./tilemap/SeparateTile",
                                "raw": "'./tilemap/SeparateTile'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "SeparateX"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./SeparateX",
                                "raw": "'./SeparateX'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "SeparateY"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./SeparateY",
                                "raw": "'./SeparateY'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Set"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../structs/Set",
                                "raw": "'../../structs/Set'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "StaticBody"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./StaticBody",
                                "raw": "'./StaticBody'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "TileIntersectsBody"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./tilemap/TileIntersectsBody",
                                "raw": "'./tilemap/TileIntersectsBody'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "TransformMatrix"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../gameobjects/components/TransformMatrix",
                                "raw": "'../../gameobjects/components/TransformMatrix'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Vector2"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/Vector2",
                                "raw": "'../../math/Vector2'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Wrap"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../math/Wrap",
                                "raw": "'../../math/Wrap'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "World"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Class"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "Extends",
                                            "raw": "'Extends'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "EventEmitter"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "initialize",
                                            "raw": "'initialize'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "World"
                                            },
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x32968c"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3538c8"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "EventEmitter"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "call",
                                                                    "raw": "'call'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ThisExpression"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "scene",
                                                                    "raw": "'scene'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x32968c"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "bodies",
                                                                    "raw": "'bodies'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Set"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "staticBodies",
                                                                    "raw": "'staticBodies'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Set"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "pendingDestroy",
                                                                    "raw": "'pendingDestroy'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Set"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "colliders",
                                                                    "raw": "'colliders'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "ProcessQueue"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "gravity",
                                                                    "raw": "'gravity'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Vector2"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "GetValue"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3538c8"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "gravity.x",
                                                                                "raw": "'gravity.x'"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "GetValue"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3538c8"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "gravity.y",
                                                                                "raw": "'gravity.y'"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "bounds",
                                                                    "raw": "'bounds'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Rectangle"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "GetValue"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3538c8"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "x",
                                                                                "raw": "'x'"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "GetValue"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3538c8"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "GetValue"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3538c8"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "width",
                                                                                "raw": "'width'"
                                                                            },
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x32968c"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "sys",
                                                                                            "raw": "'sys'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "scale",
                                                                                        "raw": "'scale'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "width",
                                                                                    "raw": "'width'"
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "GetValue"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3538c8"
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "height",
                                                                                "raw": "'height'"
                                                                            },
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x32968c"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "sys",
                                                                                            "raw": "'sys'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "scale",
                                                                                        "raw": "'scale'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "height",
                                                                                    "raw": "'height'"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "checkCollision",
                                                                    "raw": "'checkCollision'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "up",
                                                                            "raw": "'up'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "checkCollision.up",
                                                                                    "raw": "'checkCollision.up'"
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "down",
                                                                            "raw": "'down'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "checkCollision.down",
                                                                                    "raw": "'checkCollision.down'"
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "left",
                                                                            "raw": "'left'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "checkCollision.left",
                                                                                    "raw": "'checkCollision.left'"
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "right",
                                                                            "raw": "'right'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "checkCollision.right",
                                                                                    "raw": "'checkCollision.right'"
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fps",
                                                                    "raw": "'fps'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "fps",
                                                                        "raw": "'fps'"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 60,
                                                                        "raw": "0x3c"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fixedStep",
                                                                    "raw": "'fixedStep'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "fixedStep",
                                                                        "raw": "'fixedStep'"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "ArrayExpression",
                                                                                "elements": []
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_elapsed",
                                                                    "raw": "'_elapsed'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_frameTime",
                                                                    "raw": "'_frameTime'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "0x1"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "fps",
                                                                        "raw": "'fps'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_frameTimeMS",
                                                                    "raw": "'_frameTimeMS'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": 1000,
                                                                    "raw": "0x3e8"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "_frameTime",
                                                                        "raw": "'_frameTime'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "stepsLastFrame",
                                                                    "raw": "'stepsLastFrame'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "timeScale",
                                                                    "raw": "'timeScale'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "timeScale",
                                                                        "raw": "'timeScale'"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 1,
                                                                        "raw": "0x1"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "OVERLAP_BIAS",
                                                                    "raw": "'OVERLAP_BIAS'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "overlapBias",
                                                                        "raw": "'overlapBias'"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 4,
                                                                        "raw": "0x4"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "TILE_BIAS",
                                                                    "raw": "'TILE_BIAS'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "tileBias",
                                                                        "raw": "'tileBias'"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "0x10"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "forceX",
                                                                    "raw": "'forceX'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "forceX",
                                                                        "raw": "'forceX'"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isPaused",
                                                                    "raw": "'isPaused'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "isPaused",
                                                                        "raw": "'isPaused'"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_total",
                                                                    "raw": "'_total'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "drawDebug",
                                                                    "raw": "'drawDebug'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "debug",
                                                                        "raw": "'debug'"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "debugGraphic",
                                                                "raw": "'debugGraphic'"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "defaults",
                                                                    "raw": "'defaults'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "debugShowBody",
                                                                            "raw": "'debugShowBody'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "debugShowBody",
                                                                                    "raw": "'debugShowBody'"
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "debugShowStaticBody",
                                                                            "raw": "'debugShowStaticBody'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "debugShowStaticBody",
                                                                                    "raw": "'debugShowStaticBody'"
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "debugShowVelocity",
                                                                            "raw": "'debugShowVelocity'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "debugShowVelocity",
                                                                                    "raw": "'debugShowVelocity'"
                                                                                },
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "bodyDebugColor",
                                                                            "raw": "'bodyDebugColor'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "debugBodyColor",
                                                                                    "raw": "'debugBodyColor'"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 16711935,
                                                                                    "raw": "0xff00ff"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "staticBodyDebugColor",
                                                                            "raw": "'staticBodyDebugColor'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "debugStaticBodyColor",
                                                                                    "raw": "'debugStaticBodyColor'"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 255,
                                                                                    "raw": "0xff"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "velocityDebugColor",
                                                                            "raw": "'velocityDebugColor'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "GetValue"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3538c8"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "debugVelocityColor",
                                                                                    "raw": "'debugVelocityColor'"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 65280,
                                                                                    "raw": "0xff00"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "maxEntries",
                                                                    "raw": "'maxEntries'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "maxEntries",
                                                                        "raw": "'maxEntries'"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 16,
                                                                        "raw": "0x10"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "useTree",
                                                                    "raw": "'useTree'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "GetValue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3538c8"
                                                                    },
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "useTree",
                                                                        "raw": "'useTree'"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "ArrayExpression",
                                                                                "elements": []
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "tree",
                                                                    "raw": "'tree'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "RTree"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "maxEntries",
                                                                            "raw": "'maxEntries'"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "staticTree",
                                                                    "raw": "'staticTree'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "RTree"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "maxEntries",
                                                                            "raw": "'maxEntries'"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "treeMinMax",
                                                                    "raw": "'treeMinMax'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "minX",
                                                                            "raw": "'minX'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "minY",
                                                                            "raw": "'minY'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "maxX",
                                                                            "raw": "'maxX'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    },
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "maxY",
                                                                            "raw": "'maxY'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_tempMatrix",
                                                                    "raw": "'_tempMatrix'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "TransformMatrix"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_tempMatrix2",
                                                                    "raw": "'_tempMatrix2'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "TransformMatrix"
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "drawDebug",
                                                                "raw": "'drawDebug'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "DeTll",
                                                                            "raw": "'DeTll'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "tuBBP",
                                                                            "raw": "'tuBBP'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "body"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "bodies"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "i"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "body"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "enable",
                                                                                        "raw": "'enable'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "body"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "postUpdate",
                                                                                                        "raw": "'postUpdate'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": []
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "createDebugGraphic",
                                                                                            "raw": "'createDebugGraphic'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "enable",
                                            "raw": "'enable'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x136f89"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x16b7f5"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x16b7f5"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x16b7f5"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "CONST"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "DYNAMIC_BODY",
                                                                                "raw": "'DYNAMIC_BODY'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Array"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isArray",
                                                                        "raw": "'isArray'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x136f89"
                                                                    }
                                                                ]
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "DaTPP",
                                                                            "raw": "'DaTPP'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "ppwdG",
                                                                            "raw": "'ppwdG'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x136f89"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x136f89"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "emit",
                                                                                            "raw": "'emit'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Events"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "TILE_OVERLAP",
                                                                                                "raw": "'TILE_OVERLAP'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "sprite"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "tile"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "body"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1e83e0"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x1e83e0"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x136f89"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x1e83e0"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x410139"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x136f89"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1e83e0"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x410139"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "isParent",
                                                                            "raw": "'isParent'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "!==",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "DhBkt",
                                                                                        "raw": "'DhBkt'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "quhWy",
                                                                                        "raw": "'quhWy'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x59657f"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x410139"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "getChildren",
                                                                                                                "raw": "'getChildren'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": []
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "ForStatement",
                                                                                            "init": {
                                                                                                "type": "VariableDeclaration",
                                                                                                "declarations": [
                                                                                                    {
                                                                                                        "type": "VariableDeclarator",
                                                                                                        "id": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x53badf"
                                                                                                        },
                                                                                                        "init": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0,
                                                                                                            "raw": "0x0"
                                                                                                        }
                                                                                                    }
                                                                                                ],
                                                                                                "kind": "var"
                                                                                            },
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x53badf"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x59657f"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "length",
                                                                                                        "raw": "'length'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "update": {
                                                                                                "type": "UpdateExpression",
                                                                                                "operator": "++",
                                                                                                "argument": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x53badf"
                                                                                                },
                                                                                                "prefix": false
                                                                                            },
                                                                                            "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "===",
                                                                                                            "left": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "qlDIK",
                                                                                                                "raw": "'qlDIK'"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "gxExL",
                                                                                                                "raw": "'gxExL'"
                                                                                                            }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "AssignmentExpression",
                                                                                                                        "operator": "=",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "velocityY"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 0,
                                                                                                                            "raw": "0x0"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "VariableDeclaration",
                                                                                                                    "declarations": [
                                                                                                                        {
                                                                                                                            "type": "VariableDeclarator",
                                                                                                                            "id": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x241337"
                                                                                                                            },
                                                                                                                            "init": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x59657f"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x53badf"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "kind": "var"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "IfStatement",
                                                                                                                    "test": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x241337"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "isParent",
                                                                                                                            "raw": "'isParent'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "consequent": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                            {
                                                                                                                                "type": "IfStatement",
                                                                                                                                "test": {
                                                                                                                                    "type": "BinaryExpression",
                                                                                                                                    "operator": "!==",
                                                                                                                                    "left": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "YDXuA",
                                                                                                                                        "raw": "'YDXuA'"
                                                                                                                                    },
                                                                                                                                    "right": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "alRWL",
                                                                                                                                        "raw": "'alRWL'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "consequent": {
                                                                                                                                    "type": "BlockStatement",
                                                                                                                                    "body": [
                                                                                                                                        {
                                                                                                                                            "type": "ExpressionStatement",
                                                                                                                                            "expression": {
                                                                                                                                                "type": "CallExpression",
                                                                                                                                                "callee": {
                                                                                                                                                    "type": "MemberExpression",
                                                                                                                                                    "computed": true,
                                                                                                                                                    "object": {
                                                                                                                                                        "type": "ThisExpression"
                                                                                                                                                    },
                                                                                                                                                    "property": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": "enable",
                                                                                                                                                        "raw": "'enable'"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "arguments": [
                                                                                                                                                    {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "_0x241337"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "_0x16b7f5"
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                "alternate": {
                                                                                                                                    "type": "BlockStatement",
                                                                                                                                    "body": [
                                                                                                                                        {
                                                                                                                                            "type": "VariableDeclaration",
                                                                                                                                            "declarations": [
                                                                                                                                                {
                                                                                                                                                    "type": "VariableDeclarator",
                                                                                                                                                    "id": {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "_0x87afaa"
                                                                                                                                                    },
                                                                                                                                                    "init": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "_0x59657f"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "_0x53badf"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            ],
                                                                                                                                            "kind": "var"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "IfStatement",
                                                                                                                                            "test": {
                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                "computed": true,
                                                                                                                                                "object": {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "_0x87afaa"
                                                                                                                                                },
                                                                                                                                                "property": {
                                                                                                                                                    "type": "Literal",
                                                                                                                                                    "value": "isParent",
                                                                                                                                                    "raw": "'isParent'"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "consequent": {
                                                                                                                                                "type": "BlockStatement",
                                                                                                                                                "body": [
                                                                                                                                                    {
                                                                                                                                                        "type": "ExpressionStatement",
                                                                                                                                                        "expression": {
                                                                                                                                                            "type": "CallExpression",
                                                                                                                                                            "callee": {
                                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                                "computed": true,
                                                                                                                                                                "object": {
                                                                                                                                                                    "type": "ThisExpression"
                                                                                                                                                                },
                                                                                                                                                                "property": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "enable",
                                                                                                                                                                    "raw": "'enable'"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "arguments": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "_0x87afaa"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "_0x16b7f5"
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "alternate": {
                                                                                                                                                "type": "BlockStatement",
                                                                                                                                                "body": [
                                                                                                                                                    {
                                                                                                                                                        "type": "ExpressionStatement",
                                                                                                                                                        "expression": {
                                                                                                                                                            "type": "CallExpression",
                                                                                                                                                            "callee": {
                                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                                "computed": true,
                                                                                                                                                                "object": {
                                                                                                                                                                    "type": "ThisExpression"
                                                                                                                                                                },
                                                                                                                                                                "property": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "enableBody",
                                                                                                                                                                    "raw": "'enableBody'"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "arguments": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "_0x87afaa"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "_0x16b7f5"
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "alternate": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                            {
                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                "expression": {
                                                                                                                                    "type": "CallExpression",
                                                                                                                                    "callee": {
                                                                                                                                        "type": "MemberExpression",
                                                                                                                                        "computed": true,
                                                                                                                                        "object": {
                                                                                                                                            "type": "ThisExpression"
                                                                                                                                        },
                                                                                                                                        "property": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "enableBody",
                                                                                                                                            "raw": "'enableBody'"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "arguments": [
                                                                                                                                        {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x241337"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x16b7f5"
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "overlap"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "-",
                                                                                                    "left": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "DistanceBetween"
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "circle"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "x",
                                                                                                                    "raw": "'x'"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "circle"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "y",
                                                                                                                    "raw": "'y'"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "rect"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "x",
                                                                                                                    "raw": "'x'"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "rect"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "y",
                                                                                                                    "raw": "'y'"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "circle"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "radius",
                                                                                                            "raw": "'radius'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "NaMiq",
                                                                                        "raw": "'NaMiq'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "gKjcY",
                                                                                        "raw": "'gKjcY'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "collideSpriteVsGroup",
                                                                                                        "raw": "'collideSpriteVsGroup'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x59657f"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x1e83e0"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "group2"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "collideCallback"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "processCallback"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "callbackContext"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "overlapOnly"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "enableBody",
                                                                                                        "raw": "'enableBody'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x410139"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x16b7f5"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "enableBody",
                                            "raw": "'enableBody'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x543a05"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x24d693"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x24d693"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x24d693"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "CONST"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "DYNAMIC_BODY",
                                                                                "raw": "'DYNAMIC_BODY'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x543a05"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "body",
                                                                    "raw": "'body'"
                                                                }
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x24d693"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "CONST"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "DYNAMIC_BODY",
                                                                                "raw": "'DYNAMIC_BODY'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x543a05"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "body",
                                                                                            "raw": "'body'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "NewExpression",
                                                                                        "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Body"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x543a05"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x24d693"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "CONST"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "STATIC_BODY",
                                                                                    "raw": "'STATIC_BODY'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x543a05"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "body",
                                                                                                "raw": "'body'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "NewExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "StaticBody"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x543a05"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "add",
                                                                    "raw": "'add'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x543a05"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x543a05"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "add",
                                            "raw": "'add'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x574573"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x574573"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "physicsType",
                                                                    "raw": "'physicsType'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "CONST"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "DYNAMIC_BODY",
                                                                    "raw": "'DYNAMIC_BODY'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "bodies",
                                                                                    "raw": "'bodies'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "set",
                                                                                "raw": "'set'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x574573"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x574573"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "physicsType",
                                                                        "raw": "'physicsType'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "CONST"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "STATIC_BODY",
                                                                        "raw": "'STATIC_BODY'"
                                                                    }
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "staticBodies",
                                                                                        "raw": "'staticBodies'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "set",
                                                                                    "raw": "'set'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x574573"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "staticTree",
                                                                                        "raw": "'staticTree'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "insert",
                                                                                    "raw": "'insert'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x574573"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": null
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x574573"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "enable",
                                                                    "raw": "'enable'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x574573"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "disable",
                                            "raw": "'disable'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x9b0b51"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Array"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isArray",
                                                                        "raw": "'isArray'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x9b0b51"
                                                                    }
                                                                ]
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x9b0b51"
                                                                        },
                                                                        "right": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x9b0b51"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x8b4b9e"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x8b4b9e"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x9b0b51"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x8b4b9e"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "SNcRz",
                                                                            "raw": "'SNcRz'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "Uldgq",
                                                                            "raw": "'Uldgq'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideHandler",
                                                                                            "raw": "'collideHandler'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object1"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "object2"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x8b4b9e"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "collideCallback"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "processCallback"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "callbackContext"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "overlapOnly"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x27f5b5"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x9b0b51"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x8b4b9e"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x27f5b5"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "isParent",
                                                                                        "raw": "'isParent'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "ccQLb",
                                                                                                    "raw": "'ccQLb'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "MxKAp",
                                                                                                    "raw": "'MxKAp'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "collideCallback"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": null,
                                                                                                                "raw": "null"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "VariableDeclaration",
                                                                                                        "declarations": [
                                                                                                            {
                                                                                                                "type": "VariableDeclarator",
                                                                                                                "id": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5824f9"
                                                                                                                },
                                                                                                                "init": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x27f5b5"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "getChildren",
                                                                                                                            "raw": "'getChildren'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": []
                                                                                                                }
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "var"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "ForStatement",
                                                                                                        "init": {
                                                                                                            "type": "VariableDeclaration",
                                                                                                            "declarations": [
                                                                                                                {
                                                                                                                    "type": "VariableDeclarator",
                                                                                                                    "id": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x200e1d"
                                                                                                                    },
                                                                                                                    "init": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 0,
                                                                                                                        "raw": "0x0"
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "kind": "var"
                                                                                                        },
                                                                                                        "test": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "<",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x200e1d"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5824f9"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "length",
                                                                                                                    "raw": "'length'"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "update": {
                                                                                                            "type": "UpdateExpression",
                                                                                                            "operator": "++",
                                                                                                            "argument": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x200e1d"
                                                                                                            },
                                                                                                            "prefix": false
                                                                                                        },
                                                                                                        "body": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "VariableDeclaration",
                                                                                                                    "declarations": [
                                                                                                                        {
                                                                                                                            "type": "VariableDeclarator",
                                                                                                                            "id": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x276937"
                                                                                                                            },
                                                                                                                            "init": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x5824f9"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x200e1d"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "kind": "var"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "IfStatement",
                                                                                                                    "test": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x276937"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "isParent",
                                                                                                                            "raw": "'isParent'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "consequent": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                            {
                                                                                                                                "type": "IfStatement",
                                                                                                                                "test": {
                                                                                                                                    "type": "BinaryExpression",
                                                                                                                                    "operator": "!==",
                                                                                                                                    "left": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "qksvd",
                                                                                                                                        "raw": "'qksvd'"
                                                                                                                                    },
                                                                                                                                    "right": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "qksvd",
                                                                                                                                        "raw": "'qksvd'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "consequent": {
                                                                                                                                    "type": "BlockStatement",
                                                                                                                                    "body": [
                                                                                                                                        {
                                                                                                                                            "type": "IfStatement",
                                                                                                                                            "test": {
                                                                                                                                                "type": "LogicalExpression",
                                                                                                                                                "operator": "||",
                                                                                                                                                "left": {
                                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                                    "operator": "!",
                                                                                                                                                    "argument": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "MemberExpression",
                                                                                                                                                            "computed": true,
                                                                                                                                                            "object": {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "sprite"
                                                                                                                                                            },
                                                                                                                                                            "property": {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "body",
                                                                                                                                                                "raw": "'body'"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "enable",
                                                                                                                                                            "raw": "'enable'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "prefix": true
                                                                                                                                                },
                                                                                                                                                "right": {
                                                                                                                                                    "type": "BinaryExpression",
                                                                                                                                                    "operator": "===",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "tiles"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "length",
                                                                                                                                                            "raw": "'length'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": 0,
                                                                                                                                                        "raw": "0x0"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "consequent": {
                                                                                                                                                "type": "BlockStatement",
                                                                                                                                                "body": [
                                                                                                                                                    {
                                                                                                                                                        "type": "ReturnStatement",
                                                                                                                                                        "argument": {
                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                            "operator": "!",
                                                                                                                                                            "argument": {
                                                                                                                                                                "type": "ArrayExpression",
                                                                                                                                                                "elements": []
                                                                                                                                                            },
                                                                                                                                                            "prefix": true
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            },
                                                                                                                                            "alternate": {
                                                                                                                                                "type": "BlockStatement",
                                                                                                                                                "body": [
                                                                                                                                                    {
                                                                                                                                                        "type": "ReturnStatement",
                                                                                                                                                        "argument": {
                                                                                                                                                            "type": "CallExpression",
                                                                                                                                                            "callee": {
                                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                                "computed": true,
                                                                                                                                                                "object": {
                                                                                                                                                                    "type": "ThisExpression"
                                                                                                                                                                },
                                                                                                                                                                "property": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "collideSpriteVsTilesHandler",
                                                                                                                                                                    "raw": "'collideSpriteVsTilesHandler'"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "arguments": [
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "sprite"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "tiles"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "collideCallback"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "processCallback"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "callbackContext"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                                                    "operator": "!",
                                                                                                                                                                    "argument": {
                                                                                                                                                                        "type": "ArrayExpression",
                                                                                                                                                                        "elements": []
                                                                                                                                                                    },
                                                                                                                                                                    "prefix": true
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                                                    "operator": "!",
                                                                                                                                                                    "argument": {
                                                                                                                                                                        "type": "ArrayExpression",
                                                                                                                                                                        "elements": []
                                                                                                                                                                    },
                                                                                                                                                                    "prefix": true
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                "alternate": {
                                                                                                                                    "type": "BlockStatement",
                                                                                                                                    "body": [
                                                                                                                                        {
                                                                                                                                            "type": "ExpressionStatement",
                                                                                                                                            "expression": {
                                                                                                                                                "type": "CallExpression",
                                                                                                                                                "callee": {
                                                                                                                                                    "type": "MemberExpression",
                                                                                                                                                    "computed": true,
                                                                                                                                                    "object": {
                                                                                                                                                        "type": "ThisExpression"
                                                                                                                                                    },
                                                                                                                                                    "property": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": "disable",
                                                                                                                                                        "raw": "'disable'"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "arguments": [
                                                                                                                                                    {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "_0x276937"
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "alternate": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                            {
                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                "expression": {
                                                                                                                                    "type": "CallExpression",
                                                                                                                                    "callee": {
                                                                                                                                        "type": "MemberExpression",
                                                                                                                                        "computed": true,
                                                                                                                                        "object": {
                                                                                                                                            "type": "ThisExpression"
                                                                                                                                        },
                                                                                                                                        "property": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "disableBody",
                                                                                                                                            "raw": "'disableBody'"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "arguments": [
                                                                                                                                        {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x276937"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "body",
                                                                                                                                                "raw": "'body'"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "AGqVI",
                                                                                                    "raw": "'AGqVI'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "DKHsB",
                                                                                                    "raw": "'DKHsB'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "disableBody",
                                                                                                                    "raw": "'disableBody'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x27f5b5"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "body",
                                                                                                                        "raw": "'body'"
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "body"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "bodies"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x8b4b9e"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "body"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "enable",
                                                                                                                "raw": "'enable'"
                                                                                                            }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "body"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "preUpdate",
                                                                                                                                "raw": "'preUpdate'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "willStep"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "fixedDelta"
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": null
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "disableBody",
                                            "raw": "'disableBody'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x12babd"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "remove",
                                                                    "raw": "'remove'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x12babd"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x12babd"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "enable",
                                                                    "raw": "'enable'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "remove",
                                            "raw": "'remove'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x589ffc"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x589ffc"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "physicsType",
                                                                    "raw": "'physicsType'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "CONST"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "DYNAMIC_BODY",
                                                                    "raw": "'DYNAMIC_BODY'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "ttZAI",
                                                                            "raw": "'ttZAI'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "ttZAI",
                                                                            "raw": "'ttZAI'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x589ffc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "update",
                                                                                            "raw": "'update'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "delta"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tree",
                                                                                                "raw": "'tree'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "remove",
                                                                                            "raw": "'remove'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x589ffc"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "bodies",
                                                                                                "raw": "'bodies'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "delete",
                                                                                            "raw": "'delete'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x589ffc"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x589ffc"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "physicsType",
                                                                        "raw": "'physicsType'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "CONST"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "STATIC_BODY",
                                                                        "raw": "'STATIC_BODY'"
                                                                    }
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "staticBodies",
                                                                                        "raw": "'staticBodies'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "delete",
                                                                                    "raw": "'delete'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x589ffc"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "staticTree",
                                                                                        "raw": "'staticTree'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "remove",
                                                                                    "raw": "'remove'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x589ffc"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": null
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "createDebugGraphic",
                                            "raw": "'createDebugGraphic'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x24f97a"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Literal",
                                                                            "value": "0|1|2|4|3",
                                                                            "raw": "'0|1|2|4|3'"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "split",
                                                                            "raw": "'split'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "|",
                                                                            "raw": "'|'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x36de95"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "SwitchStatement",
                                                                    "discriminant": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x24f97a"
                                                                        },
                                                                        "property": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x36de95"
                                                                            },
                                                                            "prefix": false
                                                                        }
                                                                    },
                                                                    "cases": [
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "0",
                                                                                "raw": "'0'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2202e4"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "scene",
                                                                                                                    "raw": "'scene'"
                                                                                                                }
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "sys",
                                                                                                                "raw": "'sys'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "add",
                                                                                                            "raw": "'add'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "graphics",
                                                                                                        "raw": "'graphics'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "ObjectExpression",
                                                                                                        "properties": [
                                                                                                            {
                                                                                                                "type": "Property",
                                                                                                                "key": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "x",
                                                                                                                    "raw": "'x'"
                                                                                                                },
                                                                                                                "computed": false,
                                                                                                                "value": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0x0"
                                                                                                                },
                                                                                                                "kind": "init",
                                                                                                                "method": false,
                                                                                                                "shorthand": false
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Property",
                                                                                                                "key": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "y",
                                                                                                                    "raw": "'y'"
                                                                                                                },
                                                                                                                "computed": false,
                                                                                                                "value": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0x0"
                                                                                                                },
                                                                                                                "kind": "init",
                                                                                                                "method": false,
                                                                                                                "shorthand": false
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "1",
                                                                                "raw": "'1'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2202e4"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "setDepth",
                                                                                                "raw": "'setDepth'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Number"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "MAX_VALUE",
                                                                                                    "raw": "'MAX_VALUE'"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "2",
                                                                                "raw": "'2'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "debugGraphic",
                                                                                                "raw": "'debugGraphic'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2202e4"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "3",
                                                                                "raw": "'3'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2202e4"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "4",
                                                                                "raw": "'4'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "drawDebug",
                                                                                                "raw": "'drawDebug'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": []
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "BreakStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setBounds",
                                            "raw": "'setBounds'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x386fed"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xe2ec47"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x26ef03"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x122b70"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x226c70"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x6720d1"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5d21dc"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x30feff"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "bounds",
                                                                        "raw": "'bounds'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "setTo",
                                                                    "raw": "'setTo'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x386fed"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0xe2ec47"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x26ef03"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x122b70"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x226c70"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "setBoundsCollision",
                                                                                "raw": "'setBoundsCollision'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x226c70"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x6720d1"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5d21dc"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x30feff"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setBoundsCollision",
                                            "raw": "'setBoundsCollision'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x33d1cf"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4e642f"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x350d1e"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x667a4b"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x33d1cf"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x33d1cf"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4e642f"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "AKgSG",
                                                                            "raw": "'AKgSG'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "YjSBH",
                                                                            "raw": "'YjSBH'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "collideCallback"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "call",
                                                                                            "raw": "'call'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "callbackContext"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "bodyA"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "gameObject",
                                                                                                "raw": "'gameObject'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "bodyB"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "gameObject",
                                                                                                "raw": "'gameObject'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4e642f"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x350d1e"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "utbeY",
                                                                            "raw": "'utbeY'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "utbeY",
                                                                            "raw": "'utbeY'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "body"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "bodies"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "i"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "body"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "enable",
                                                                                        "raw": "'enable'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "body"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "update",
                                                                                                        "raw": "'update'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "delta"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x350d1e"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x667a4b"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "tMizC",
                                                                            "raw": "'tMizC'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "tMizC",
                                                                            "raw": "'tMizC'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x667a4b"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "checkCollision",
                                                                        "raw": "'checkCollision'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "left",
                                                                    "raw": "'left'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x33d1cf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "checkCollision",
                                                                        "raw": "'checkCollision'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "right",
                                                                    "raw": "'right'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x4e642f"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "checkCollision",
                                                                        "raw": "'checkCollision'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "up",
                                                                    "raw": "'up'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x350d1e"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "checkCollision",
                                                                        "raw": "'checkCollision'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "down",
                                                                    "raw": "'down'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x667a4b"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "pause",
                                            "raw": "'pause'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isPaused",
                                                                    "raw": "'isPaused'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "emit",
                                                                    "raw": "'emit'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Events"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "PAUSE",
                                                                        "raw": "'PAUSE'"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "resume",
                                            "raw": "'resume'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isPaused",
                                                                    "raw": "'isPaused'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "emit",
                                                                    "raw": "'emit'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Events"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "RESUME",
                                                                        "raw": "'RESUME'"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "addCollider",
                                            "raw": "'addCollider'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x39b732"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x26ce94"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1df2df"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x36d2e5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x516768"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x1df2df"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1df2df"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x36d2e5"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x36d2e5"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x516768"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "SUtgO",
                                                                            "raw": "'SUtgO'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "kTqxg",
                                                                            "raw": "'kTqxg'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x516768"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1df2df"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2fd1a2"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "-",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "layerData"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "tileWidth",
                                                                                                        "raw": "'tileWidth'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "layerData"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "baseTileWidth",
                                                                                                        "raw": "'baseTileWidth'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "tilemapLayer"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "scaleX",
                                                                                                    "raw": "'scaleX'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "-=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "x"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2fd1a2"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "w"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2fd1a2"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x36917a"
                                                                },
                                                                "init": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "Collider"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "ArrayExpression",
                                                                                "elements": []
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x39b732"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x26ce94"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1df2df"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x36d2e5"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x516768"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "colliders",
                                                                        "raw": "'colliders'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "add",
                                                                    "raw": "'add'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x36917a"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x36917a"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "addOverlap",
                                            "raw": "'addOverlap'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x12854d"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x321f32"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1ed6a9"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x19563a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x31c174"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x1ed6a9"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "CEzYb",
                                                                            "raw": "'CEzYb'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "aFWID",
                                                                            "raw": "'aFWID'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "body"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "allowRotation",
                                                                                        "raw": "'allowRotation'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "computeAngularVelocity",
                                                                                                        "raw": "'computeAngularVelocity'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "body"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "delta"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "computeVelocity",
                                                                                            "raw": "'computeVelocity'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "body"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "delta"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1ed6a9"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x19563a"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x19563a"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x31c174"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x31c174"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1ed6a9"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x54d9c1"
                                                                },
                                                                "init": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "Collider"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x12854d"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x321f32"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1ed6a9"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x19563a"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x31c174"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "colliders",
                                                                        "raw": "'colliders'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "add",
                                                                    "raw": "'add'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x54d9c1"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x54d9c1"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "removeCollider",
                                            "raw": "'removeCollider'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x285032"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "colliders",
                                                                        "raw": "'colliders'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "remove",
                                                                    "raw": "'remove'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x285032"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setFPS",
                                            "raw": "'setFPS'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x23d43f"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fps",
                                                                    "raw": "'fps'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x23d43f"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_frameTime",
                                                                    "raw": "'_frameTime'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "0x1"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "fps",
                                                                        "raw": "'fps'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_frameTimeMS",
                                                                    "raw": "'_frameTimeMS'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": 1000,
                                                                    "raw": "0x3e8"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "_frameTime",
                                                                        "raw": "'_frameTime'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "update",
                                            "raw": "'update'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x290c76"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x46325c"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isPaused",
                                                                    "raw": "'isPaused'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bodies",
                                                                            "raw": "'bodies'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "size",
                                                                        "raw": "'size'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3ba592"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x46327e"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "_frameTime",
                                                                        "raw": "'_frameTime'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x598653"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_frameTimeMS",
                                                                            "raw": "'_frameTimeMS'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "timeScale",
                                                                            "raw": "'timeScale'"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_elapsed",
                                                                    "raw": "'_elapsed'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x46325c"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3aa3fb"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x20b2ba"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bodies",
                                                                            "raw": "'bodies'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "entries",
                                                                        "raw": "'entries'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x541a01"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "_elapsed",
                                                                            "raw": "'_elapsed'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x598653"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "fixedStep",
                                                                    "raw": "'fixedStep'"
                                                                }
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x46327e"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "*",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x46325c"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0.001,
                                                                                "raw": "0.001"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x541a01"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_elapsed",
                                                                                "raw": "'_elapsed'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3ba592"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3ba592"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x20b2ba"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x3ba592"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3aa3fb"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x20b2ba"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3ba592"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3aa3fb"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "enable",
                                                                            "raw": "'enable'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "ahQSc",
                                                                                        "raw": "'ahQSc'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "XRdBZ",
                                                                                        "raw": "'XRdBZ'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "velocityX"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 0,
                                                                                                    "raw": "0x0"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x3aa3fb"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "preUpdate",
                                                                                                        "raw": "'preUpdate'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x541a01"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x46327e"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x541a01"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "-=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_elapsed",
                                                                                "raw": "'_elapsed'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x598653"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "stepsLastFrame",
                                                                                "raw": "'stepsLastFrame'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 1,
                                                                            "raw": "0x1"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "useTree",
                                                                            "raw": "'useTree'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tree",
                                                                                                "raw": "'tree'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "clear",
                                                                                            "raw": "'clear'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tree",
                                                                                                "raw": "'tree'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "load",
                                                                                            "raw": "'load'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x20b2ba"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3d6e98"
                                                                            },
                                                                            "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "colliders",
                                                                                            "raw": "'colliders'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "update",
                                                                                        "raw": "'update'"
                                                                                    }
                                                                                },
                                                                                "arguments": []
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ForStatement",
                                                                    "init": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3ba592"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    },
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3ba592"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3d6e98"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "length",
                                                                                "raw": "'length'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "update": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3ba592"
                                                                        },
                                                                        "prefix": false
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "BSpeQ",
                                                                                        "raw": "'BSpeQ'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "cRCii",
                                                                                        "raw": "'cRCii'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "resultX"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "SeparateX"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "body1"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "body2"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "overlapOnly"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "OVERLAP_BIAS",
                                                                                                                "raw": "'OVERLAP_BIAS'"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x27353e"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3d6e98"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3ba592"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x27353e"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "active",
                                                                                                    "raw": "'active'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x27353e"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "update",
                                                                                                                    "raw": "'update'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": []
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "emit",
                                                                                "raw": "'emit'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Events"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "WORLD_STEP",
                                                                                    "raw": "'WORLD_STEP'"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x46327e"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_elapsed",
                                                                    "raw": "'_elapsed'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x598653"
                                                            }
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "-=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_elapsed",
                                                                                "raw": "'_elapsed'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x598653"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "step",
                                                                                "raw": "'step'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x46327e"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "step",
                                            "raw": "'step'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4d37c3"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4b48cd"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xd12502"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x598b04"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bodies",
                                                                            "raw": "'bodies'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "entries",
                                                                        "raw": "'entries'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x408a0d"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x598b04"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4b48cd"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4b48cd"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x408a0d"
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x4b48cd"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xd12502"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x598b04"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4b48cd"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xd12502"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "enable",
                                                                            "raw": "'enable'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xd12502"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "update",
                                                                                            "raw": "'update'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4d37c3"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "useTree",
                                                                "raw": "'useTree'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "tree",
                                                                                    "raw": "'tree'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "clear",
                                                                                "raw": "'clear'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "tree",
                                                                                    "raw": "'tree'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "load",
                                                                                "raw": "'load'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x598b04"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x17c6bd"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "colliders",
                                                                                "raw": "'colliders'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "update",
                                                                            "raw": "'update'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4b48cd"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4b48cd"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x17c6bd"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x4b48cd"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "HgIPo",
                                                                            "raw": "'HgIPo'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "HgIPo",
                                                                            "raw": "'HgIPo'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1043d9"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x17c6bd"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4b48cd"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1043d9"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "active",
                                                                                        "raw": "'active'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "RNrld",
                                                                                                    "raw": "'RNrld'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "RNrld",
                                                                                                    "raw": "'RNrld'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "+=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "velocityX"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "*",
                                                                                                                "left": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "+",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "gravity",
                                                                                                                                "raw": "'gravity'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "x",
                                                                                                                            "raw": "'x'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0xd12502"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "gravity",
                                                                                                                                "raw": "'gravity'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "x",
                                                                                                                            "raw": "'x'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x4d37c3"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "+=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "velocityY"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "*",
                                                                                                                "left": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "+",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "gravity",
                                                                                                                                "raw": "'gravity'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "y",
                                                                                                                            "raw": "'y'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0xd12502"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "gravity",
                                                                                                                                "raw": "'gravity'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "y",
                                                                                                                            "raw": "'y'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x4d37c3"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x1043d9"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "update",
                                                                                                                    "raw": "'update'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": []
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xd12502"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "preUpdate",
                                                                                            "raw": "'preUpdate'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "willStep"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "fixedDelta"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "emit",
                                                                    "raw": "'emit'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Events"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "WORLD_STEP",
                                                                        "raw": "'WORLD_STEP'"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4d37c3"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "stepsLastFrame",
                                                                    "raw": "'stepsLastFrame'"
                                                                }
                                                            },
                                                            "prefix": false
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "postUpdate",
                                            "raw": "'postUpdate'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4e0e06"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3a20dc"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x57bb77"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bodies",
                                                                            "raw": "'bodies'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "entries",
                                                                        "raw": "'entries'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1b9043"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x57bb77"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5272e1"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "bodies",
                                                                        "raw": "'bodies'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x86d88c"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "staticBodies",
                                                                        "raw": "'staticBodies'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "stepsLastFrame",
                                                                "raw": "'stepsLastFrame'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "stepsLastFrame",
                                                                                "raw": "'stepsLastFrame'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ForStatement",
                                                                    "init": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    },
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1b9043"
                                                                        }
                                                                    },
                                                                    "update": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "prefix": false
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "!==",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "AbuFo",
                                                                                        "raw": "'AbuFo'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "TkcyI",
                                                                                        "raw": "'TkcyI'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x3a20dc"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x57bb77"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4e0e06"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x3a20dc"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "enable",
                                                                                                    "raw": "'enable'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x3a20dc"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "postUpdate",
                                                                                                                    "raw": "'postUpdate'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": []
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "object2"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "body",
                                                                                                    "raw": "'body'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ReturnStatement",
                                                                                                        "argument": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "collideSpriteVsSprite",
                                                                                                                    "raw": "'collideSpriteVsSprite'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "object1"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "object2"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "collideCallback"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "processCallback"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "callbackContext"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "overlapOnly"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "object2"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "isParent",
                                                                                                        "raw": "'isParent'"
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ReturnStatement",
                                                                                                            "argument": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "collideSpriteVsGroup",
                                                                                                                        "raw": "'collideSpriteVsGroup'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "object1"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "object2"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "collideCallback"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "processCallback"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "callbackContext"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "overlapOnly"
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "IfStatement",
                                                                                                    "test": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "object2"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "isTilemap",
                                                                                                            "raw": "'isTilemap'"
                                                                                                        }
                                                                                                    },
                                                                                                    "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ReturnStatement",
                                                                                                                "argument": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "ThisExpression"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "collideSpriteVsTilemapLayer",
                                                                                                                            "raw": "'collideSpriteVsTilemapLayer'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "object1"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "object2"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "collideCallback"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "processCallback"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "callbackContext"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "overlapOnly"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "alternate": null
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "drawDebug",
                                                                "raw": "'drawDebug'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x148598"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "debugGraphic",
                                                                                    "raw": "'debugGraphic'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x148598"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "clear",
                                                                                "raw": "'clear'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ForStatement",
                                                                    "init": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    },
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1b9043"
                                                                        }
                                                                    },
                                                                    "update": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "prefix": false
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3a20dc"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x57bb77"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4e0e06"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3a20dc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "willDrawDebug",
                                                                                            "raw": "'willDrawDebug'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "XnDNL",
                                                                                                    "raw": "'XnDNL'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "PvpKv",
                                                                                                    "raw": "'PvpKv'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x3a20dc"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "drawDebug",
                                                                                                                    "raw": "'drawDebug'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x148598"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "enableBody",
                                                                                                                    "raw": "'enableBody'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "child"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "bodyType"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x57bb77"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x86d88c"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "entries",
                                                                                "raw": "'entries'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1b9043"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x57bb77"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "length",
                                                                                "raw": "'length'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ForStatement",
                                                                    "init": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    },
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1b9043"
                                                                        }
                                                                    },
                                                                    "update": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "prefix": false
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "ICzqa",
                                                                                        "raw": "'ICzqa'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "OVVAi",
                                                                                        "raw": "'OVVAi'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "staticBodies",
                                                                                                            "raw": "'staticBodies'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "delete",
                                                                                                        "raw": "'delete'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x3a20dc"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "staticTree",
                                                                                                            "raw": "'staticTree'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "remove",
                                                                                                        "raw": "'remove'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x3a20dc"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x3a20dc"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x57bb77"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4e0e06"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x3a20dc"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "willDrawDebug",
                                                                                                        "raw": "'willDrawDebug'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": []
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x3a20dc"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "drawDebug",
                                                                                                                    "raw": "'drawDebug'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x148598"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x15c4f2"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "pendingDestroy",
                                                                        "raw": "'pendingDestroy'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x15c4f2"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "size",
                                                                    "raw": "'size'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5f0231"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "tree",
                                                                                    "raw": "'tree'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0xa42cb0"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "staticTree",
                                                                                    "raw": "'staticTree'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x57bb77"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x15c4f2"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "entries",
                                                                                "raw": "'entries'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1b9043"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x57bb77"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "length",
                                                                                "raw": "'length'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ForStatement",
                                                                    "init": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    },
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1b9043"
                                                                        }
                                                                    },
                                                                    "update": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4e0e06"
                                                                        },
                                                                        "prefix": false
                                                                    },
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3a20dc"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x57bb77"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4e0e06"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3a20dc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "physicsType",
                                                                                            "raw": "'physicsType'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "CONST"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "DYNAMIC_BODY",
                                                                                            "raw": "'DYNAMIC_BODY'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "nTgOE",
                                                                                                    "raw": "'nTgOE'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "nTgOE",
                                                                                                    "raw": "'nTgOE'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "setBoundsCollision",
                                                                                                                    "raw": "'setBoundsCollision'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "checkLeft"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "checkRight"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "checkUp"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "checkDown"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5f0231"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "remove",
                                                                                                                    "raw": "'remove'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x3a20dc"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5272e1"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "delete",
                                                                                                                    "raw": "'delete'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x3a20dc"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x3a20dc"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "physicsType",
                                                                                                "raw": "'physicsType'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "CONST"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "STATIC_BODY",
                                                                                                "raw": "'STATIC_BODY'"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xa42cb0"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "remove",
                                                                                                            "raw": "'remove'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3a20dc"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x86d88c"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "delete",
                                                                                                            "raw": "'delete'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3a20dc"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": null
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3a20dc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "world",
                                                                                            "raw": "'world'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "undefined"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3a20dc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gameObject",
                                                                                            "raw": "'gameObject'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "undefined"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x15c4f2"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "clear",
                                                                                "raw": "'clear'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "updateMotion",
                                            "raw": "'updateMotion'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4be3ac"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5d0252"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x4be3ac"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "allowRotation",
                                                                "raw": "'allowRotation'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "ERHGn",
                                                                            "raw": "'ERHGn'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "IITBo",
                                                                            "raw": "'IITBo'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "-=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "tileWorldRect"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "top",
                                                                                            "raw": "'top'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "-",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "tile"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "height",
                                                                                                    "raw": "'height'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "tile"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "baseHeight",
                                                                                                    "raw": "'baseHeight'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "tilemapLayer"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "scaleY",
                                                                                                "raw": "'scaleY'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "computeAngularVelocity",
                                                                                            "raw": "'computeAngularVelocity'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4be3ac"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5d0252"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "computeVelocity",
                                                                    "raw": "'computeVelocity'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4be3ac"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5d0252"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "computeAngularVelocity",
                                            "raw": "'computeAngularVelocity'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3dab80"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x41565c"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5d4186"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3dab80"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "angularVelocity",
                                                                        "raw": "'angularVelocity'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5c02bd"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3dab80"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "angularAcceleration",
                                                                        "raw": "'angularAcceleration'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x131909"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3dab80"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "angularDrag",
                                                                        "raw": "'angularDrag'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3951ce"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3dab80"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "maxAngular",
                                                                        "raw": "'maxAngular'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x5c02bd"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "cRTrl",
                                                                            "raw": "'cRTrl'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "cRTrl",
                                                                            "raw": "'cRTrl'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "group1"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "group2"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": null
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4e93f4"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "group1"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "getChildren",
                                                                                                    "raw": "'getChildren'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": []
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ForStatement",
                                                                                "init": {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4d98d7"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4d98d7"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4e93f4"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "length",
                                                                                            "raw": "'length'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "update": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4d98d7"
                                                                                    },
                                                                                    "prefix": false
                                                                                },
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "collideSpriteVsGroup",
                                                                                                        "raw": "'collideSpriteVsGroup'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x4e93f4"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x4d98d7"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "group2"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "collideCallback"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "processCallback"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "callbackContext"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "overlapOnly"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x5d4186"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5c02bd"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x41565c"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3dab80"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "allowDrag",
                                                                        "raw": "'allowDrag'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x131909"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "*=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x131909"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x41565c"
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "FuzzyGreaterThan"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x5d4186"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x131909"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0x0"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 0.1,
                                                                                    "raw": "0.1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "-=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5d4186"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x131909"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "FuzzyLessThan"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5d4186"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x131909"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    },
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 0.1,
                                                                                        "raw": "0.1"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "+=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x5d4186"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x131909"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "===",
                                                                                            "left": {
                                                                                                "type": "Literal",
                                                                                                "value": "KNLIm",
                                                                                                "raw": "'KNLIm'"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": "KNLIm",
                                                                                                "raw": "'KNLIm'"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x5d4186"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0,
                                                                                                            "raw": "0x0"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "*=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x131909"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x41565c"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "IfStatement",
                                                                                                    "test": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "FuzzyGreaterThan"
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "-",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5d4186"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x131909"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Literal",
                                                                                                                "value": 0,
                                                                                                                "raw": "0x0"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Literal",
                                                                                                                "value": 0.1,
                                                                                                                "raw": "0.1"
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "-=",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x5d4186"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x131909"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "alternate": {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "FuzzyLessThan"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "+",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x5d4186"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x131909"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0x0"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0.1,
                                                                                                                    "raw": "0.1"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "AssignmentExpression",
                                                                                                                        "operator": "+=",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x5d4186"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x131909"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "AssignmentExpression",
                                                                                                                        "operator": "=",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x5d4186"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 0,
                                                                                                                            "raw": "0x0"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": null
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5d4186"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Clamp"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x5d4186"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3951ce"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3951ce"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5c1f3f"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x5d4186"
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3dab80"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "angularVelocity",
                                                                            "raw": "'angularVelocity'"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3dab80"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "angularVelocity",
                                                                    "raw": "'angularVelocity'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x5c1f3f"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3dab80"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "rotation",
                                                                    "raw": "'rotation'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3dab80"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "angularVelocity",
                                                                        "raw": "'angularVelocity'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x41565c"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "computeVelocity",
                                            "raw": "'computeVelocity'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4c8193"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x299cbb"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5b7517"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "velocity",
                                                                            "raw": "'velocity'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "x",
                                                                        "raw": "'x'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x302f24"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "acceleration",
                                                                            "raw": "'acceleration'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "x",
                                                                        "raw": "'x'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2dd94a"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "drag",
                                                                            "raw": "'drag'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "x",
                                                                        "raw": "'x'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x42eef0"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "maxVelocity",
                                                                            "raw": "'maxVelocity'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "x",
                                                                        "raw": "'x'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4a837c"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "velocity",
                                                                            "raw": "'velocity'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "y",
                                                                        "raw": "'y'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x530603"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "acceleration",
                                                                            "raw": "'acceleration'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "y",
                                                                        "raw": "'y'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x42353a"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "drag",
                                                                            "raw": "'drag'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "y",
                                                                        "raw": "'y'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x465a1d"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4c8193"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "maxVelocity",
                                                                            "raw": "'maxVelocity'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "y",
                                                                        "raw": "'y'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x568ba4"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4c8193"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "speed",
                                                                        "raw": "'speed'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x811bb9"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4c8193"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "maxSpeed",
                                                                        "raw": "'maxSpeed'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4d7f98"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4c8193"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "allowDrag",
                                                                        "raw": "'allowDrag'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3c8b67"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4c8193"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "useDamping",
                                                                        "raw": "'useDamping'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x4c8193"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "allowGravity",
                                                                "raw": "'allowGravity'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5b7517"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "*",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "x",
                                                                                        "raw": "'x'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4c8193"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "x",
                                                                                        "raw": "'x'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x299cbb"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4a837c"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "*",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "y",
                                                                                        "raw": "'y'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4c8193"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "y",
                                                                                        "raw": "'y'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x299cbb"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x302f24"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "DUoLa",
                                                                            "raw": "'DUoLa'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "rOgKv",
                                                                            "raw": "'rOgKv'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x5b7517"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x302f24"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x299cbb"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "processCallback"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4d7f98"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2dd94a"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3c8b67"
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2dd94a"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Math"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "pow",
                                                                                                    "raw": "'pow'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x2dd94a"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x299cbb"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "*=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5b7517"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2dd94a"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x568ba4"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Math"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "sqrt",
                                                                                                    "raw": "'sqrt'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "*",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x5b7517"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x5b7517"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "*",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x4a837c"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x4a837c"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "FuzzyEqual"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x568ba4"
                                                                                            },
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            },
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": 0.001,
                                                                                                "raw": "0.001"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "===",
                                                                                                    "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "ojEGf",
                                                                                                        "raw": "'ojEGf'"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "pWXDG",
                                                                                                        "raw": "'pWXDG'"
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "collideCallback"
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "collideCallback"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "call",
                                                                                                                                    "raw": "'call'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "callbackContext"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "bodyA"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "gameObject",
                                                                                                                                        "raw": "'gameObject'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "bodyB"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "gameObject",
                                                                                                                                        "raw": "'gameObject'"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "alternate": null
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "UpdateExpression",
                                                                                                                "operator": "++",
                                                                                                                "argument": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "_total",
                                                                                                                        "raw": "'_total'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "prefix": false
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5b7517"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0x0"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                            "type": "Literal",
                                                                                            "value": "nmhMi",
                                                                                            "raw": "'nmhMi'"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "nmhMi",
                                                                                            "raw": "'nmhMi'"
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "*=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2dd94a"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x299cbb"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "FuzzyGreaterThan"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "-",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x5b7517"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x2dd94a"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0,
                                                                                                            "raw": "0x0"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0.01,
                                                                                                            "raw": "0.01"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "-=",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5b7517"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2dd94a"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "IfStatement",
                                                                                                    "test": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "FuzzyLessThan"
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "+",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x5b7517"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2dd94a"
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Literal",
                                                                                                                "value": 0,
                                                                                                                "raw": "0x0"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Literal",
                                                                                                                "value": 0.01,
                                                                                                                "raw": "0.01"
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "+=",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x5b7517"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x2dd94a"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "alternate": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "=",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x5b7517"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 0,
                                                                                                                        "raw": "0x0"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x5b7517"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": null
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x530603"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "TWYdG",
                                                                            "raw": "'TWYdG'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "TWYdG",
                                                                            "raw": "'TWYdG'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4a837c"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x530603"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x299cbb"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "*=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x42353a"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x299cbb"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "FuzzyGreaterThan"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "-",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4a837c"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x42353a"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 0.01,
                                                                                            "raw": "0.01"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "-=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4a837c"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x42353a"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "FuzzyLessThan"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4a837c"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x42353a"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            },
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": 0.01,
                                                                                                "raw": "0.01"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "+=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4a837c"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x42353a"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4a837c"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4d7f98"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x42353a"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "YCGze",
                                                                                "raw": "'YCGze'"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "bsCdU",
                                                                                "raw": "'bsCdU'"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "resultX"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "SeparateX"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "body1"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "body2"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "overlapOnly"
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "OVERLAP_BIAS",
                                                                                                        "raw": "'OVERLAP_BIAS'"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "intersects",
                                                                                                "raw": "'intersects'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "body1"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "body2"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "resultY"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "SeparateY"
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "body1"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "body2"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "overlapOnly"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "OVERLAP_BIAS",
                                                                                                                    "raw": "'OVERLAP_BIAS'"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3c8b67"
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x42353a"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "Math"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "pow",
                                                                                                                "raw": "'pow'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x42353a"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x299cbb"
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "*=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4a837c"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x42353a"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x568ba4"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "Math"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "sqrt",
                                                                                                                "raw": "'sqrt'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "+",
                                                                                                                "left": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "*",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x5b7517"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x5b7517"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "*",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x4a837c"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x4a837c"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "FuzzyEqual"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x568ba4"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0,
                                                                                                            "raw": "0x0"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0.001,
                                                                                                            "raw": "0.001"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "===",
                                                                                                                "left": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "UWMQu",
                                                                                                                    "raw": "'UWMQu'"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "UWMQu",
                                                                                                                    "raw": "'UWMQu'"
                                                                                                                }
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x4a837c"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": 0,
                                                                                                                                "raw": "0x0"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "alternate": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "emit",
                                                                                                                                    "raw": "'emit'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "Events"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "OVERLAP",
                                                                                                                                        "raw": "'OVERLAP'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "body1"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "gameObject",
                                                                                                                                        "raw": "'gameObject'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "body2"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "gameObject",
                                                                                                                                        "raw": "'gameObject'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "body1"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "body2"
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": null
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "===",
                                                                                                    "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "uXHAL",
                                                                                                        "raw": "'uXHAL'"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "SdtEL",
                                                                                                        "raw": "'SdtEL'"
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "disable",
                                                                                                                        "raw": "'disable'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "child"
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "*=",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x42353a"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x299cbb"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "FuzzyGreaterThan"
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "BinaryExpression",
                                                                                                                        "operator": "-",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x4a837c"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x42353a"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 0,
                                                                                                                        "raw": "0x0"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 0.01,
                                                                                                                        "raw": "0.01"
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "-=",
                                                                                                                            "left": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x4a837c"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x42353a"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "alternate": {
                                                                                                                "type": "IfStatement",
                                                                                                                "test": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "FuzzyLessThan"
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "BinaryExpression",
                                                                                                                            "operator": "+",
                                                                                                                            "left": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x4a837c"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x42353a"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 0,
                                                                                                                            "raw": "0x0"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 0.01,
                                                                                                                            "raw": "0.01"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "consequent": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                        {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                                "type": "AssignmentExpression",
                                                                                                                                "operator": "+=",
                                                                                                                                "left": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x4a837c"
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x42353a"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "alternate": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                        {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                                "type": "AssignmentExpression",
                                                                                                                                "operator": "=",
                                                                                                                                "left": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x4a837c"
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": 0,
                                                                                                                                    "raw": "0x0"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": null
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5b7517"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Clamp"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x5b7517"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x42eef0"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x42eef0"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4a837c"
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Clamp"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4a837c"
                                                                    },
                                                                    {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x465a1d"
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x465a1d"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4c8193"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "velocity",
                                                                        "raw": "'velocity'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "set",
                                                                    "raw": "'set'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5b7517"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4a837c"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x811bb9"
                                                                },
                                                                "right": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 1,
                                                                        "raw": "0x1"
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x568ba4"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x811bb9"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4c8193"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "velocity",
                                                                                            "raw": "'velocity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "normalize",
                                                                                        "raw": "'normalize'"
                                                                                    }
                                                                                },
                                                                                "arguments": []
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "scale",
                                                                                "raw": "'scale'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x811bb9"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x568ba4"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x811bb9"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4c8193"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "speed",
                                                                    "raw": "'speed'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x568ba4"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "separate",
                                            "raw": "'separate'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1dba06"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x31909d"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3b69d5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1ebb4a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3553fe"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x377711"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x377711"
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "right": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1dba06"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "enable",
                                                                                        "raw": "'enable'"
                                                                                    }
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x31909d"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "enable",
                                                                                    "raw": "'enable'"
                                                                                }
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1dba06"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "checkCollision",
                                                                                "raw": "'checkCollision'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "none",
                                                                            "raw": "'none'"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x31909d"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "checkCollision",
                                                                            "raw": "'checkCollision'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "none",
                                                                        "raw": "'none'"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "intersects",
                                                                            "raw": "'intersects'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1dba06"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x31909d"
                                                                        }
                                                                    ]
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "gfGui",
                                                                            "raw": "'gfGui'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "gfGui",
                                                                            "raw": "'gfGui'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideSpriteVsGroup",
                                                                                            "raw": "'collideSpriteVsGroup'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object2"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object1"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "collideCallback"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3b69d5"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1ebb4a"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3553fe"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3b69d5"
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3b69d5"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "call",
                                                                            "raw": "'call'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1ebb4a"
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1dba06"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "gameObject",
                                                                                "raw": "'gameObject'"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x31909d"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "gameObject",
                                                                                "raw": "'gameObject'"
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1dba06"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isCircle",
                                                                    "raw": "'isCircle'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x31909d"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isCircle",
                                                                    "raw": "'isCircle'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "LQbXE",
                                                                            "raw": "'LQbXE'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "NPmVd",
                                                                            "raw": "'NPmVd'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "overlap"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "-",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "DistanceBetween"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xeeaf3a"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "x",
                                                                                                        "raw": "'x'"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xeeaf3a"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "y",
                                                                                                        "raw": "'y'"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x244871"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "right",
                                                                                                        "raw": "'right'"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x244871"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "y",
                                                                                                        "raw": "'y'"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xeeaf3a"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "radius",
                                                                                                "raw": "'radius'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "separateCircle",
                                                                                            "raw": "'separateCircle'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1dba06"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x31909d"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3553fe"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1dba06"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isCircle",
                                                                    "raw": "'isCircle'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x31909d"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isCircle",
                                                                    "raw": "'isCircle'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "rAcKy",
                                                                            "raw": "'rAcKy'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "OBOvu",
                                                                            "raw": "'OBOvu'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "separateCircle",
                                                                                            "raw": "'separateCircle'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1dba06"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x31909d"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3553fe"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x20cf54"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x1dba06"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x31909d"
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1dba06"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4224c8"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x1dba06"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1dba06"
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x31909d"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x244871"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "ObjectExpression",
                                                                                            "properties": [
                                                                                                {
                                                                                                    "type": "Property",
                                                                                                    "key": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "x",
                                                                                                        "raw": "'x'"
                                                                                                    },
                                                                                                    "computed": false,
                                                                                                    "value": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x20cf54"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "kind": "init",
                                                                                                    "method": false,
                                                                                                    "shorthand": false
                                                                                                },
                                                                                                {
                                                                                                    "type": "Property",
                                                                                                    "key": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "y",
                                                                                                        "raw": "'y'"
                                                                                                    },
                                                                                                    "computed": false,
                                                                                                    "value": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x20cf54"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    },
                                                                                                    "kind": "init",
                                                                                                    "method": false,
                                                                                                    "shorthand": false
                                                                                                },
                                                                                                {
                                                                                                    "type": "Property",
                                                                                                    "key": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "right",
                                                                                                        "raw": "'right'"
                                                                                                    },
                                                                                                    "computed": false,
                                                                                                    "value": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x20cf54"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "right",
                                                                                                            "raw": "'right'"
                                                                                                        }
                                                                                                    },
                                                                                                    "kind": "init",
                                                                                                    "method": false,
                                                                                                    "shorthand": false
                                                                                                },
                                                                                                {
                                                                                                    "type": "Property",
                                                                                                    "key": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "bottom",
                                                                                                        "raw": "'bottom'"
                                                                                                    },
                                                                                                    "computed": false,
                                                                                                    "value": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x20cf54"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "bottom",
                                                                                                            "raw": "'bottom'"
                                                                                                        }
                                                                                                    },
                                                                                                    "kind": "init",
                                                                                                    "method": false,
                                                                                                    "shorthand": false
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xeeaf3a"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4224c8"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "center",
                                                                                                "raw": "'center'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xeeaf3a"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x244871"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": ">",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xeeaf3a"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x244871"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "bottom",
                                                                                                "raw": "'bottom'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "||",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "<",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xeeaf3a"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x244871"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": ">",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xeeaf3a"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x244871"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "right",
                                                                                                            "raw": "'right'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "!==",
                                                                                                            "left": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "KiIdz",
                                                                                                                "raw": "'KiIdz'"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "KiIdz",
                                                                                                                "raw": "'KiIdz'"
                                                                                                            }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "VariableDeclaration",
                                                                                                                    "declarations": [
                                                                                                                        {
                                                                                                                            "type": "VariableDeclarator",
                                                                                                                            "id": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x308223"
                                                                                                                            },
                                                                                                                            "init": {
                                                                                                                                "type": "CallExpression",
                                                                                                                                "callee": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "0|29|14|6|31|16|27|11|4|5|20|12|9|28|10|15|30|13|22|8|17|23|7|26|2|21|1|3|18|25|19|24",
                                                                                                                                        "raw": "'0|29|14|6|31|16|27|11|4|5|20|12|9|28|10|15|30|13|22|8|17|23|7|26|2|21|1|3|18|25|19|24'"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "split",
                                                                                                                                        "raw": "'split'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "arguments": [
                                                                                                                                    {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "|",
                                                                                                                                        "raw": "'|'"
                                                                                                                                    }
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "VariableDeclarator",
                                                                                                                            "id": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x50eaa0"
                                                                                                                            },
                                                                                                                            "init": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": 0,
                                                                                                                                "raw": "0x0"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "kind": "var"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "WhileStatement",
                                                                                                                    "test": {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "UnaryExpression",
                                                                                                                            "operator": "!",
                                                                                                                            "argument": {
                                                                                                                                "type": "ArrayExpression",
                                                                                                                                "elements": []
                                                                                                                            },
                                                                                                                            "prefix": true
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    },
                                                                                                                    "body": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                            {
                                                                                                                                "type": "SwitchStatement",
                                                                                                                                "discriminant": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x308223"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "UpdateExpression",
                                                                                                                                        "operator": "++",
                                                                                                                                        "argument": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x50eaa0"
                                                                                                                                        },
                                                                                                                                        "prefix": false
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "cases": [
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "0",
                                                                                                                                            "raw": "'0'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                    "callee": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "EventEmitter"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "call",
                                                                                                                                                            "raw": "'call'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "arguments": [
                                                                                                                                                        {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "1",
                                                                                                                                            "raw": "'1'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "tree",
                                                                                                                                                            "raw": "'tree'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "RTree"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                                "computed": true,
                                                                                                                                                                "object": {
                                                                                                                                                                    "type": "ThisExpression"
                                                                                                                                                                },
                                                                                                                                                                "property": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "maxEntries",
                                                                                                                                                                    "raw": "'maxEntries'"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "2",
                                                                                                                                            "raw": "'2'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "maxEntries",
                                                                                                                                                            "raw": "'maxEntries'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "maxEntries",
                                                                                                                                                                "raw": "'maxEntries'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": 16,
                                                                                                                                                                "raw": "0x10"
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "3",
                                                                                                                                            "raw": "'3'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "staticTree",
                                                                                                                                                            "raw": "'staticTree'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "RTree"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                                "computed": true,
                                                                                                                                                                "object": {
                                                                                                                                                                    "type": "ThisExpression"
                                                                                                                                                                },
                                                                                                                                                                "property": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "maxEntries",
                                                                                                                                                                    "raw": "'maxEntries'"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "4",
                                                                                                                                            "raw": "'4'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "checkCollision",
                                                                                                                                                            "raw": "'checkCollision'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "ObjectExpression",
                                                                                                                                                        "properties": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "up",
                                                                                                                                                                    "raw": "'up'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "checkCollision.up",
                                                                                                                                                                            "raw": "'checkCollision.up'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                                            "operator": "!",
                                                                                                                                                                            "argument": {
                                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                                "operator": "!",
                                                                                                                                                                                "argument": {
                                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                                    "elements": []
                                                                                                                                                                                },
                                                                                                                                                                                "prefix": true
                                                                                                                                                                            },
                                                                                                                                                                            "prefix": true
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "down",
                                                                                                                                                                    "raw": "'down'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "checkCollision.down",
                                                                                                                                                                            "raw": "'checkCollision.down'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                                            "operator": "!",
                                                                                                                                                                            "argument": {
                                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                                "operator": "!",
                                                                                                                                                                                "argument": {
                                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                                    "elements": []
                                                                                                                                                                                },
                                                                                                                                                                                "prefix": true
                                                                                                                                                                            },
                                                                                                                                                                            "prefix": true
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "left",
                                                                                                                                                                    "raw": "'left'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "checkCollision.left",
                                                                                                                                                                            "raw": "'checkCollision.left'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                                            "operator": "!",
                                                                                                                                                                            "argument": {
                                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                                "operator": "!",
                                                                                                                                                                                "argument": {
                                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                                    "elements": []
                                                                                                                                                                                },
                                                                                                                                                                                "prefix": true
                                                                                                                                                                            },
                                                                                                                                                                            "prefix": true
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "right",
                                                                                                                                                                    "raw": "'right'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "checkCollision.right",
                                                                                                                                                                            "raw": "'checkCollision.right'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                                            "operator": "!",
                                                                                                                                                                            "argument": {
                                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                                "operator": "!",
                                                                                                                                                                                "argument": {
                                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                                    "elements": []
                                                                                                                                                                                },
                                                                                                                                                                                "prefix": true
                                                                                                                                                                            },
                                                                                                                                                                            "prefix": true
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "5",
                                                                                                                                            "raw": "'5'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "fps",
                                                                                                                                                            "raw": "'fps'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "fps",
                                                                                                                                                                "raw": "'fps'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": 60,
                                                                                                                                                                "raw": "0x3c"
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "6",
                                                                                                                                            "raw": "'6'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "staticBodies",
                                                                                                                                                            "raw": "'staticBodies'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "Set"
                                                                                                                                                        },
                                                                                                                                                        "arguments": []
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "7",
                                                                                                                                            "raw": "'7'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "MemberExpression",
                                                                                                                                                    "computed": true,
                                                                                                                                                    "object": {
                                                                                                                                                        "type": "ThisExpression"
                                                                                                                                                    },
                                                                                                                                                    "property": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": "debugGraphic",
                                                                                                                                                        "raw": "'debugGraphic'"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "8",
                                                                                                                                            "raw": "'8'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "isPaused",
                                                                                                                                                            "raw": "'isPaused'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "isPaused",
                                                                                                                                                                "raw": "'isPaused'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                "operator": "!",
                                                                                                                                                                "argument": {
                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                    "elements": []
                                                                                                                                                                },
                                                                                                                                                                "prefix": true
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "9",
                                                                                                                                            "raw": "'9'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "_frameTime",
                                                                                                                                                            "raw": "'_frameTime'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "BinaryExpression",
                                                                                                                                                        "operator": "/",
                                                                                                                                                        "left": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": 1,
                                                                                                                                                            "raw": "0x1"
                                                                                                                                                        },
                                                                                                                                                        "right": {
                                                                                                                                                            "type": "MemberExpression",
                                                                                                                                                            "computed": true,
                                                                                                                                                            "object": {
                                                                                                                                                                "type": "ThisExpression"
                                                                                                                                                            },
                                                                                                                                                            "property": {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "fps",
                                                                                                                                                                "raw": "'fps'"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "10",
                                                                                                                                            "raw": "'10'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "stepsLastFrame",
                                                                                                                                                            "raw": "'stepsLastFrame'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": 0,
                                                                                                                                                        "raw": "0x0"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "11",
                                                                                                                                            "raw": "'11'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "bounds",
                                                                                                                                                            "raw": "'bounds'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "Rectangle"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "CallExpression",
                                                                                                                                                                "callee": {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "GetValue"
                                                                                                                                                                },
                                                                                                                                                                "arguments": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "config"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": "x",
                                                                                                                                                                        "raw": "'x'"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": 0,
                                                                                                                                                                        "raw": "0x0"
                                                                                                                                                                    }
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "CallExpression",
                                                                                                                                                                "callee": {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "GetValue"
                                                                                                                                                                },
                                                                                                                                                                "arguments": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "config"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": "y",
                                                                                                                                                                        "raw": "'y'"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": 0,
                                                                                                                                                                        "raw": "0x0"
                                                                                                                                                                    }
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "CallExpression",
                                                                                                                                                                "callee": {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "GetValue"
                                                                                                                                                                },
                                                                                                                                                                "arguments": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "config"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": "width",
                                                                                                                                                                        "raw": "'width'"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                                        "computed": true,
                                                                                                                                                                        "object": {
                                                                                                                                                                            "type": "MemberExpression",
                                                                                                                                                                            "computed": true,
                                                                                                                                                                            "object": {
                                                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                                                "computed": true,
                                                                                                                                                                                "object": {
                                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                                    "name": "scene"
                                                                                                                                                                                },
                                                                                                                                                                                "property": {
                                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                                    "value": "sys",
                                                                                                                                                                                    "raw": "'sys'"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "property": {
                                                                                                                                                                                "type": "Literal",
                                                                                                                                                                                "value": "scale",
                                                                                                                                                                                "raw": "'scale'"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        "property": {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "width",
                                                                                                                                                                            "raw": "'width'"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "CallExpression",
                                                                                                                                                                "callee": {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "GetValue"
                                                                                                                                                                },
                                                                                                                                                                "arguments": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "config"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": "height",
                                                                                                                                                                        "raw": "'height'"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                                        "computed": true,
                                                                                                                                                                        "object": {
                                                                                                                                                                            "type": "MemberExpression",
                                                                                                                                                                            "computed": true,
                                                                                                                                                                            "object": {
                                                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                                                "computed": true,
                                                                                                                                                                                "object": {
                                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                                    "name": "scene"
                                                                                                                                                                                },
                                                                                                                                                                                "property": {
                                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                                    "value": "sys",
                                                                                                                                                                                    "raw": "'sys'"
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "property": {
                                                                                                                                                                                "type": "Literal",
                                                                                                                                                                                "value": "scale",
                                                                                                                                                                                "raw": "'scale'"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        "property": {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "height",
                                                                                                                                                                            "raw": "'height'"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "12",
                                                                                                                                            "raw": "'12'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "_elapsed",
                                                                                                                                                            "raw": "'_elapsed'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": 0,
                                                                                                                                                        "raw": "0x0"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "13",
                                                                                                                                            "raw": "'13'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "TILE_BIAS",
                                                                                                                                                            "raw": "'TILE_BIAS'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "tileBias",
                                                                                                                                                                "raw": "'tileBias'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": 16,
                                                                                                                                                                "raw": "0x10"
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "14",
                                                                                                                                            "raw": "'14'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "bodies",
                                                                                                                                                            "raw": "'bodies'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "Set"
                                                                                                                                                        },
                                                                                                                                                        "arguments": []
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "15",
                                                                                                                                            "raw": "'15'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "timeScale",
                                                                                                                                                            "raw": "'timeScale'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "timeScale",
                                                                                                                                                                "raw": "'timeScale'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": 1,
                                                                                                                                                                "raw": "0x1"
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "16",
                                                                                                                                            "raw": "'16'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "colliders",
                                                                                                                                                            "raw": "'colliders'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "ProcessQueue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": []
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "17",
                                                                                                                                            "raw": "'17'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "_total",
                                                                                                                                                            "raw": "'_total'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": 0,
                                                                                                                                                        "raw": "0x0"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "18",
                                                                                                                                            "raw": "'18'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "treeMinMax",
                                                                                                                                                            "raw": "'treeMinMax'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "ObjectExpression",
                                                                                                                                                        "properties": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "minX",
                                                                                                                                                                    "raw": "'minX'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": 0,
                                                                                                                                                                    "raw": "0x0"
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "minY",
                                                                                                                                                                    "raw": "'minY'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": 0,
                                                                                                                                                                    "raw": "0x0"
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "maxX",
                                                                                                                                                                    "raw": "'maxX'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": 0,
                                                                                                                                                                    "raw": "0x0"
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "maxY",
                                                                                                                                                                    "raw": "'maxY'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": 0,
                                                                                                                                                                    "raw": "0x0"
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "19",
                                                                                                                                            "raw": "'19'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "_tempMatrix2",
                                                                                                                                                            "raw": "'_tempMatrix2'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "TransformMatrix"
                                                                                                                                                        },
                                                                                                                                                        "arguments": []
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "20",
                                                                                                                                            "raw": "'20'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "fixedStep",
                                                                                                                                                            "raw": "'fixedStep'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "fixedStep",
                                                                                                                                                                "raw": "'fixedStep'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                "operator": "!",
                                                                                                                                                                "argument": {
                                                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                                                    "operator": "!",
                                                                                                                                                                    "argument": {
                                                                                                                                                                        "type": "ArrayExpression",
                                                                                                                                                                        "elements": []
                                                                                                                                                                    },
                                                                                                                                                                    "prefix": true
                                                                                                                                                                },
                                                                                                                                                                "prefix": true
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "21",
                                                                                                                                            "raw": "'21'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "useTree",
                                                                                                                                                            "raw": "'useTree'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "useTree",
                                                                                                                                                                "raw": "'useTree'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                "operator": "!",
                                                                                                                                                                "argument": {
                                                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                                                    "operator": "!",
                                                                                                                                                                    "argument": {
                                                                                                                                                                        "type": "ArrayExpression",
                                                                                                                                                                        "elements": []
                                                                                                                                                                    },
                                                                                                                                                                    "prefix": true
                                                                                                                                                                },
                                                                                                                                                                "prefix": true
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "22",
                                                                                                                                            "raw": "'22'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "forceX",
                                                                                                                                                            "raw": "'forceX'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "forceX",
                                                                                                                                                                "raw": "'forceX'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                "operator": "!",
                                                                                                                                                                "argument": {
                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                    "elements": []
                                                                                                                                                                },
                                                                                                                                                                "prefix": true
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "23",
                                                                                                                                            "raw": "'23'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "drawDebug",
                                                                                                                                                            "raw": "'drawDebug'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "debug",
                                                                                                                                                                "raw": "'debug'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                "operator": "!",
                                                                                                                                                                "argument": {
                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                    "elements": []
                                                                                                                                                                },
                                                                                                                                                                "prefix": true
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "24",
                                                                                                                                            "raw": "'24'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "IfStatement",
                                                                                                                                                "test": {
                                                                                                                                                    "type": "MemberExpression",
                                                                                                                                                    "computed": true,
                                                                                                                                                    "object": {
                                                                                                                                                        "type": "ThisExpression"
                                                                                                                                                    },
                                                                                                                                                    "property": {
                                                                                                                                                        "type": "Literal",
                                                                                                                                                        "value": "drawDebug",
                                                                                                                                                        "raw": "'drawDebug'"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "consequent": {
                                                                                                                                                    "type": "BlockStatement",
                                                                                                                                                    "body": [
                                                                                                                                                        {
                                                                                                                                                            "type": "ExpressionStatement",
                                                                                                                                                            "expression": {
                                                                                                                                                                "type": "CallExpression",
                                                                                                                                                                "callee": {
                                                                                                                                                                    "type": "MemberExpression",
                                                                                                                                                                    "computed": true,
                                                                                                                                                                    "object": {
                                                                                                                                                                        "type": "ThisExpression"
                                                                                                                                                                    },
                                                                                                                                                                    "property": {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": "createDebugGraphic",
                                                                                                                                                                        "raw": "'createDebugGraphic'"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                "arguments": []
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "alternate": null
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "25",
                                                                                                                                            "raw": "'25'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "_tempMatrix",
                                                                                                                                                            "raw": "'_tempMatrix'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "TransformMatrix"
                                                                                                                                                        },
                                                                                                                                                        "arguments": []
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "26",
                                                                                                                                            "raw": "'26'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "defaults",
                                                                                                                                                            "raw": "'defaults'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "ObjectExpression",
                                                                                                                                                        "properties": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "debugShowBody",
                                                                                                                                                                    "raw": "'debugShowBody'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "debugShowBody",
                                                                                                                                                                            "raw": "'debugShowBody'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                                            "operator": "!",
                                                                                                                                                                            "argument": {
                                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                                "operator": "!",
                                                                                                                                                                                "argument": {
                                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                                    "elements": []
                                                                                                                                                                                },
                                                                                                                                                                                "prefix": true
                                                                                                                                                                            },
                                                                                                                                                                            "prefix": true
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "debugShowStaticBody",
                                                                                                                                                                    "raw": "'debugShowStaticBody'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "debugShowStaticBody",
                                                                                                                                                                            "raw": "'debugShowStaticBody'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                                            "operator": "!",
                                                                                                                                                                            "argument": {
                                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                                "operator": "!",
                                                                                                                                                                                "argument": {
                                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                                    "elements": []
                                                                                                                                                                                },
                                                                                                                                                                                "prefix": true
                                                                                                                                                                            },
                                                                                                                                                                            "prefix": true
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "debugShowVelocity",
                                                                                                                                                                    "raw": "'debugShowVelocity'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "debugShowVelocity",
                                                                                                                                                                            "raw": "'debugShowVelocity'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "UnaryExpression",
                                                                                                                                                                            "operator": "!",
                                                                                                                                                                            "argument": {
                                                                                                                                                                                "type": "UnaryExpression",
                                                                                                                                                                                "operator": "!",
                                                                                                                                                                                "argument": {
                                                                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                                                                    "elements": []
                                                                                                                                                                                },
                                                                                                                                                                                "prefix": true
                                                                                                                                                                            },
                                                                                                                                                                            "prefix": true
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "bodyDebugColor",
                                                                                                                                                                    "raw": "'bodyDebugColor'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "debugBodyColor",
                                                                                                                                                                            "raw": "'debugBodyColor'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": 16711935,
                                                                                                                                                                            "raw": "0xff00ff"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "staticBodyDebugColor",
                                                                                                                                                                    "raw": "'staticBodyDebugColor'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "debugStaticBodyColor",
                                                                                                                                                                            "raw": "'debugStaticBodyColor'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": 255,
                                                                                                                                                                            "raw": "0xff"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Property",
                                                                                                                                                                "key": {
                                                                                                                                                                    "type": "Literal",
                                                                                                                                                                    "value": "velocityDebugColor",
                                                                                                                                                                    "raw": "'velocityDebugColor'"
                                                                                                                                                                },
                                                                                                                                                                "computed": false,
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "GetValue"
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "config"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "debugVelocityColor",
                                                                                                                                                                            "raw": "'debugVelocityColor'"
                                                                                                                                                                        },
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": 65280,
                                                                                                                                                                            "raw": "0xff00"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "kind": "init",
                                                                                                                                                                "method": false,
                                                                                                                                                                "shorthand": false
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "27",
                                                                                                                                            "raw": "'27'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "gravity",
                                                                                                                                                            "raw": "'gravity'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "Vector2"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "CallExpression",
                                                                                                                                                                "callee": {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "GetValue"
                                                                                                                                                                },
                                                                                                                                                                "arguments": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "config"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": "gravity.x",
                                                                                                                                                                        "raw": "'gravity.x'"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": 0,
                                                                                                                                                                        "raw": "0x0"
                                                                                                                                                                    }
                                                                                                                                                                ]
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "CallExpression",
                                                                                                                                                                "callee": {
                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                    "name": "GetValue"
                                                                                                                                                                },
                                                                                                                                                                "arguments": [
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                        "name": "config"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": "gravity.y",
                                                                                                                                                                        "raw": "'gravity.y'"
                                                                                                                                                                    },
                                                                                                                                                                    {
                                                                                                                                                                        "type": "Literal",
                                                                                                                                                                        "value": 0,
                                                                                                                                                                        "raw": "0x0"
                                                                                                                                                                    }
                                                                                                                                                                ]
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "28",
                                                                                                                                            "raw": "'28'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "_frameTimeMS",
                                                                                                                                                            "raw": "'_frameTimeMS'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "BinaryExpression",
                                                                                                                                                        "operator": "*",
                                                                                                                                                        "left": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": 1000,
                                                                                                                                                            "raw": "0x3e8"
                                                                                                                                                        },
                                                                                                                                                        "right": {
                                                                                                                                                            "type": "MemberExpression",
                                                                                                                                                            "computed": true,
                                                                                                                                                            "object": {
                                                                                                                                                                "type": "ThisExpression"
                                                                                                                                                            },
                                                                                                                                                            "property": {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "_frameTime",
                                                                                                                                                                "raw": "'_frameTime'"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "29",
                                                                                                                                            "raw": "'29'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "scene",
                                                                                                                                                            "raw": "'scene'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "scene"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "30",
                                                                                                                                            "raw": "'30'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "OVERLAP_BIAS",
                                                                                                                                                            "raw": "'OVERLAP_BIAS'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "CallExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "GetValue"
                                                                                                                                                        },
                                                                                                                                                        "arguments": [
                                                                                                                                                            {
                                                                                                                                                                "type": "Identifier",
                                                                                                                                                                "name": "config"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": "overlapBias",
                                                                                                                                                                "raw": "'overlapBias'"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "type": "Literal",
                                                                                                                                                                "value": 4,
                                                                                                                                                                "raw": "0x4"
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "SwitchCase",
                                                                                                                                        "test": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "31",
                                                                                                                                            "raw": "'31'"
                                                                                                                                        },
                                                                                                                                        "consequent": [
                                                                                                                                            {
                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "AssignmentExpression",
                                                                                                                                                    "operator": "=",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "pendingDestroy",
                                                                                                                                                            "raw": "'pendingDestroy'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "NewExpression",
                                                                                                                                                        "callee": {
                                                                                                                                                            "type": "Identifier",
                                                                                                                                                            "name": "Set"
                                                                                                                                                        },
                                                                                                                                                        "arguments": []
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                "label": null
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "BreakStatement",
                                                                                                                                "label": null
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ReturnStatement",
                                                                                                                    "argument": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "separateCircle",
                                                                                                                                "raw": "'separateCircle'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x1dba06"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x31909d"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x3553fe"
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x30a193"
                                                                },
                                                                "init": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x541dcc"
                                                                },
                                                                "init": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x3553fe"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x30a193"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "SeparateX"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1dba06"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x31909d"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3553fe"
                                                                                },
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "OVERLAP_BIAS",
                                                                                        "raw": "'OVERLAP_BIAS'"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x541dcc"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "SeparateY"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1dba06"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x31909d"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3553fe"
                                                                                },
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "OVERLAP_BIAS",
                                                                                        "raw": "'OVERLAP_BIAS'"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "forceX",
                                                                        "raw": "'forceX'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "<",
                                                                    "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Math"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "abs",
                                                                                "raw": "'abs'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "y",
                                                                                        "raw": "'y'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1dba06"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "y",
                                                                                        "raw": "'y'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Math"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "abs",
                                                                                "raw": "'abs'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "x",
                                                                                        "raw": "'x'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1dba06"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "gravity",
                                                                                            "raw": "'gravity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "x",
                                                                                        "raw": "'x'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x30a193"
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "SeparateX"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1dba06"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x31909d"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3553fe"
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "OVERLAP_BIAS",
                                                                                            "raw": "'OVERLAP_BIAS'"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "intersects",
                                                                                    "raw": "'intersects'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1dba06"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x31909d"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x541dcc"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "SeparateY"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x1dba06"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x31909d"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x3553fe"
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "OVERLAP_BIAS",
                                                                                                        "raw": "'OVERLAP_BIAS'"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x541dcc"
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "SeparateY"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1dba06"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x31909d"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3553fe"
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "OVERLAP_BIAS",
                                                                                            "raw": "'OVERLAP_BIAS'"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "intersects",
                                                                                    "raw": "'intersects'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1dba06"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x31909d"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x30a193"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "SeparateX"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x1dba06"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x31909d"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x3553fe"
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "OVERLAP_BIAS",
                                                                                                        "raw": "'OVERLAP_BIAS'"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x33614f"
                                                                },
                                                                "init": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x30a193"
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x541dcc"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x33614f"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3553fe"
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1dba06"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "onOverlap",
                                                                                            "raw": "'onOverlap'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x31909d"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "onOverlap",
                                                                                            "raw": "'onOverlap'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "emit",
                                                                                                        "raw": "'emit'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "Events"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "OVERLAP",
                                                                                                            "raw": "'OVERLAP'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x1dba06"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "gameObject",
                                                                                                            "raw": "'gameObject'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x31909d"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "gameObject",
                                                                                                            "raw": "'gameObject'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x1dba06"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x31909d"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1dba06"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "onCollide",
                                                                                    "raw": "'onCollide'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x31909d"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "onCollide",
                                                                                    "raw": "'onCollide'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "===",
                                                                                        "left": {
                                                                                            "type": "Literal",
                                                                                            "value": "xUMYR",
                                                                                            "raw": "'xUMYR'"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "xUMYR",
                                                                                            "raw": "'xUMYR'"
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "emit",
                                                                                                            "raw": "'emit'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "Events"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "COLLIDE",
                                                                                                                "raw": "'COLLIDE'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x1dba06"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "gameObject",
                                                                                                                "raw": "'gameObject'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x31909d"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "gameObject",
                                                                                                                "raw": "'gameObject'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x1dba06"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x31909d"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "object1"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "object1"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "children",
                                                                                                                "raw": "'children'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "entries",
                                                                                                            "raw": "'entries'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x33614f"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "separateCircle",
                                            "raw": "'separateCircle'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4704a3"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x147e63"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x24df1a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x9cde31"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "GetOverlapX"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x9cde31"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "GetOverlapY"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x9cde31"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x125fcf"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isCircle",
                                                                    "raw": "'isCircle'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isCircle",
                                                                    "raw": "'isCircle'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x30960e"
                                                                            },
                                                                            "init": {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x147e63"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4704a3"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "position",
                                                                                                        "raw": "'position'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x147e63"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "position",
                                                                                                        "raw": "'position'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x147e63"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4704a3"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "position",
                                                                                                        "raw": "'position'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "y",
                                                                                                    "raw": "'y'"
                                                                                                }
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x147e63"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "position",
                                                                                                        "raw": "'position'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "y",
                                                                                                    "raw": "'y'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "right",
                                                                                            "raw": "'right'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x147e63"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "right",
                                                                                                    "raw": "'right'"
                                                                                                }
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x147e63"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "right",
                                                                                                    "raw": "'right'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "bottom",
                                                                                            "raw": "'bottom'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x147e63"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "bottom",
                                                                                                    "raw": "'bottom'"
                                                                                                }
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x147e63"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "bottom",
                                                                                                    "raw": "'bottom'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x52d3d4"
                                                                            },
                                                                            "init": {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4704a3"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "center",
                                                                                                        "raw": "'center'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x147e63"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "center",
                                                                                                        "raw": "'center'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4704a3"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "center",
                                                                                                        "raw": "'center'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "y",
                                                                                                    "raw": "'y'"
                                                                                                }
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x147e63"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "center",
                                                                                                        "raw": "'center'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "y",
                                                                                                    "raw": "'y'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    },
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "radius",
                                                                                            "raw": "'radius'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isCircle",
                                                                                                    "raw": "'isCircle'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "halfWidth",
                                                                                                    "raw": "'halfWidth'"
                                                                                                }
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x147e63"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "halfWidth",
                                                                                                    "raw": "'halfWidth'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x52d3d4"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x30960e"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "lIIDD",
                                                                                        "raw": "'lIIDD'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "OOuIX",
                                                                                        "raw": "'OOuIX'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "&&",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "!==",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x125fcf"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "LogicalExpression",
                                                                                                    "operator": "||",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x4704a3"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "onOverlap",
                                                                                                            "raw": "'onOverlap'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x147e63"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "onOverlap",
                                                                                                            "raw": "'onOverlap'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "emit",
                                                                                                                    "raw": "'emit'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "Events"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "OVERLAP",
                                                                                                                        "raw": "'OVERLAP'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x4704a3"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "gameObject",
                                                                                                                        "raw": "'gameObject'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x147e63"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "gameObject",
                                                                                                                        "raw": "'gameObject'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x4704a3"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x147e63"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        },
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x125fcf"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 0,
                                                                                                    "raw": "0x0"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "<",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x52d3d4"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "x",
                                                                                                        "raw": "'x'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x30960e"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "x",
                                                                                                        "raw": "'x'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "!==",
                                                                                                            "left": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "SfBEQ",
                                                                                                                "raw": "'SfBEQ'"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "SfBEQ",
                                                                                                                "raw": "'SfBEQ'"
                                                                                                            }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "AssignmentExpression",
                                                                                                                        "operator": "=",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "overlapCallback"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": null,
                                                                                                                            "raw": "null"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "AssignmentExpression",
                                                                                                                        "operator": "=",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x125fcf"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "BinaryExpression",
                                                                                                                            "operator": "-",
                                                                                                                            "left": {
                                                                                                                                "type": "CallExpression",
                                                                                                                                "callee": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "DistanceBetween"
                                                                                                                                },
                                                                                                                                "arguments": [
                                                                                                                                    {
                                                                                                                                        "type": "MemberExpression",
                                                                                                                                        "computed": true,
                                                                                                                                        "object": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x52d3d4"
                                                                                                                                        },
                                                                                                                                        "property": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "x",
                                                                                                                                            "raw": "'x'"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "MemberExpression",
                                                                                                                                        "computed": true,
                                                                                                                                        "object": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x52d3d4"
                                                                                                                                        },
                                                                                                                                        "property": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "y",
                                                                                                                                            "raw": "'y'"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "MemberExpression",
                                                                                                                                        "computed": true,
                                                                                                                                        "object": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x30960e"
                                                                                                                                        },
                                                                                                                                        "property": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "x",
                                                                                                                                            "raw": "'x'"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "MemberExpression",
                                                                                                                                        "computed": true,
                                                                                                                                        "object": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x30960e"
                                                                                                                                        },
                                                                                                                                        "property": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "y",
                                                                                                                                            "raw": "'y'"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x52d3d4"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "radius",
                                                                                                                                    "raw": "'radius'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": ">",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x52d3d4"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x30960e"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "right",
                                                                                                            "raw": "'right'"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "===",
                                                                                                                "left": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "eCvsH",
                                                                                                                    "raw": "'eCvsH'"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "eCvsH",
                                                                                                                    "raw": "'eCvsH'"
                                                                                                                }
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x125fcf"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "BinaryExpression",
                                                                                                                                "operator": "-",
                                                                                                                                "left": {
                                                                                                                                    "type": "CallExpression",
                                                                                                                                    "callee": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "DistanceBetween"
                                                                                                                                    },
                                                                                                                                    "arguments": [
                                                                                                                                        {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x52d3d4"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "x",
                                                                                                                                                "raw": "'x'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x52d3d4"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "y",
                                                                                                                                                "raw": "'y'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x30960e"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "right",
                                                                                                                                                "raw": "'right'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x30960e"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "y",
                                                                                                                                                "raw": "'y'"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x52d3d4"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "radius",
                                                                                                                                        "raw": "'radius'"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "alternate": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "emit",
                                                                                                                                    "raw": "'emit'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "Events"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "OVERLAP",
                                                                                                                                        "raw": "'OVERLAP'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x4704a3"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "gameObject",
                                                                                                                                        "raw": "'gameObject'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x147e63"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "gameObject",
                                                                                                                                        "raw": "'gameObject'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x4704a3"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x147e63"
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": null
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x52d3d4"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "y",
                                                                                    "raw": "'y'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x30960e"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "bottom",
                                                                                    "raw": "'bottom'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x52d3d4"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x30960e"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x125fcf"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "-",
                                                                                                        "left": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "DistanceBetween"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x52d3d4"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "x",
                                                                                                                        "raw": "'x'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x52d3d4"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "y",
                                                                                                                        "raw": "'y'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x30960e"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "x",
                                                                                                                        "raw": "'x'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x30960e"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "bottom",
                                                                                                                        "raw": "'bottom'"
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x52d3d4"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "radius",
                                                                                                                "raw": "'radius'"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": ">",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x52d3d4"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x30960e"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "right",
                                                                                                    "raw": "'right'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x125fcf"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "-",
                                                                                                            "left": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "DistanceBetween"
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x52d3d4"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "x",
                                                                                                                            "raw": "'x'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x52d3d4"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "y",
                                                                                                                            "raw": "'y'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x30960e"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "right",
                                                                                                                            "raw": "'right'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x30960e"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "bottom",
                                                                                                                            "raw": "'bottom'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x52d3d4"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "radius",
                                                                                                                    "raw": "'radius'"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": null
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "*=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x125fcf"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "0x1"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x125fcf"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4704a3"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "halfWidth",
                                                                                        "raw": "'halfWidth'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x147e63"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "halfWidth",
                                                                                        "raw": "'halfWidth'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "DistanceBetween"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4704a3"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "center",
                                                                                                "raw": "'center'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4704a3"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "center",
                                                                                                "raw": "'center'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x147e63"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "center",
                                                                                                "raw": "'center'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x147e63"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "center",
                                                                                                "raw": "'center'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "overlapR",
                                                                    "raw": "'overlapR'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x125fcf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "overlapR",
                                                                    "raw": "'overlapR'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x125fcf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x24df1a"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x125fcf"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4704a3"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "immovable",
                                                                                "raw": "'immovable'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "immovable",
                                                                                "raw": "'immovable'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4704a3"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "customSeparateX",
                                                                        "raw": "'customSeparateX'"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "customSeparateX",
                                                                    "raw": "'customSeparateX'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!==",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x125fcf"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x4704a3"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "onOverlap",
                                                                                    "raw": "'onOverlap'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x147e63"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "onOverlap",
                                                                                    "raw": "'onOverlap'"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "emit",
                                                                                            "raw": "'emit'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Events"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "OVERLAP",
                                                                                                "raw": "'OVERLAP'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4704a3"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "gameObject",
                                                                                                "raw": "'gameObject'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x147e63"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "gameObject",
                                                                                                "raw": "'gameObject'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4704a3"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x147e63"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x125fcf"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x96e99c"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4704a3"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "center",
                                                                                "raw": "'center'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "x",
                                                                            "raw": "'x'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "center",
                                                                                "raw": "'center'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "x",
                                                                            "raw": "'x'"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xa9cafe"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4704a3"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "center",
                                                                                "raw": "'center'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "y",
                                                                            "raw": "'y'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "center",
                                                                                "raw": "'center'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "y",
                                                                            "raw": "'y'"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x264f1f"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Math"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "sqrt",
                                                                            "raw": "'sqrt'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Math"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "pow",
                                                                                        "raw": "'pow'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x96e99c"
                                                                                    },
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "0x2"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Math"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "pow",
                                                                                        "raw": "'pow'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xa9cafe"
                                                                                    },
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "0x2"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3f69a3"
                                                                },
                                                                "init": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "/",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x147e63"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "center",
                                                                                        "raw": "'center'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "x",
                                                                                    "raw": "'x'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4704a3"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "center",
                                                                                        "raw": "'center'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "x",
                                                                                    "raw": "'x'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x264f1f"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x378d98"
                                                                },
                                                                "init": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "/",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x147e63"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "center",
                                                                                        "raw": "'center'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "y",
                                                                                    "raw": "'y'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4704a3"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "center",
                                                                                        "raw": "'center'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "y",
                                                                                    "raw": "'y'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x264f1f"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2cd44d"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 2,
                                                                            "raw": "0x2"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "velocity",
                                                                                                    "raw": "'velocity'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3f69a3"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4704a3"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "velocity",
                                                                                                    "raw": "'velocity'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x378d98"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "*",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x147e63"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "velocity",
                                                                                                "raw": "'velocity'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3f69a3"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x147e63"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "velocity",
                                                                                            "raw": "'velocity'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "y",
                                                                                        "raw": "'y'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x378d98"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4704a3"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "mass",
                                                                                "raw": "'mass'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "mass",
                                                                                "raw": "'mass'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "immovable",
                                                                    "raw": "'immovable'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "immovable",
                                                                    "raw": "'immovable'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "IIMzW",
                                                                            "raw": "'IIMzW'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "LirBF",
                                                                            "raw": "'LirBF'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "*=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2cd44d"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "0x2"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x24df1a"
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "||",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4704a3"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "onOverlap",
                                                                                                        "raw": "'onOverlap'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x147e63"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "onOverlap",
                                                                                                        "raw": "'onOverlap'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "emit",
                                                                                                                    "raw": "'emit'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "Events"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "OVERLAP",
                                                                                                                        "raw": "'OVERLAP'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x4704a3"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "gameObject",
                                                                                                                        "raw": "'gameObject'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x147e63"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "gameObject",
                                                                                                                        "raw": "'gameObject'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x4704a3"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x147e63"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "||",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4704a3"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "onCollide",
                                                                                                "raw": "'onCollide'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x147e63"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "onCollide",
                                                                                                "raw": "'onCollide'"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "emit",
                                                                                                            "raw": "'emit'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "Events"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "COLLIDE",
                                                                                                                "raw": "'COLLIDE'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x4704a3"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "gameObject",
                                                                                                                "raw": "'gameObject'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x147e63"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "gameObject",
                                                                                                                "raw": "'gameObject'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x4704a3"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x147e63"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": null
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "immovable",
                                                                    "raw": "'immovable'"
                                                                }
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x4704a3"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "velocity",
                                                                                    "raw": "'velocity'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "x",
                                                                                "raw": "'x'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4704a3"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "velocity",
                                                                                        "raw": "'velocity'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "x",
                                                                                    "raw": "'x'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "/",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2cd44d"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4704a3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "mass",
                                                                                            "raw": "'mass'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3f69a3"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x4704a3"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "velocity",
                                                                                    "raw": "'velocity'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4704a3"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "velocity",
                                                                                        "raw": "'velocity'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "y",
                                                                                    "raw": "'y'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "/",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2cd44d"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4704a3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "mass",
                                                                                            "raw": "'mass'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x378d98"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "immovable",
                                                                    "raw": "'immovable'"
                                                                }
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x147e63"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "velocity",
                                                                                    "raw": "'velocity'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "x",
                                                                                "raw": "'x'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x147e63"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "velocity",
                                                                                        "raw": "'velocity'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "x",
                                                                                    "raw": "'x'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "/",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2cd44d"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x147e63"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "mass",
                                                                                            "raw": "'mass'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3f69a3"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x147e63"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "velocity",
                                                                                    "raw": "'velocity'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x147e63"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "velocity",
                                                                                        "raw": "'velocity'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "y",
                                                                                    "raw": "'y'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "/",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2cd44d"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x147e63"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "mass",
                                                                                            "raw": "'mass'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x378d98"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4704a3"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "immovable",
                                                                        "raw": "'immovable'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x147e63"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "immovable",
                                                                        "raw": "'immovable'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "mQfxQ",
                                                                            "raw": "'mQfxQ'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "mQfxQ",
                                                                            "raw": "'mQfxQ'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "left"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "/=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x125fcf"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "0x2"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1e8fce"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "AngleBetweenPoints"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4704a3"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "center",
                                                                                "raw": "'center'"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "center",
                                                                                "raw": "'center'"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x380e33"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x125fcf"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "MATH_CONST"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "EPSILON",
                                                                                "raw": "'EPSILON'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Math"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "cos",
                                                                                "raw": "'cos'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1e8fce"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x391e3c"
                                                                },
                                                                "init": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x125fcf"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "MATH_CONST"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "EPSILON",
                                                                                "raw": "'EPSILON'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Math"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "sin",
                                                                                "raw": "'sin'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1e8fce"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "immovable",
                                                                    "raw": "'immovable'"
                                                                }
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "KfiFb",
                                                                            "raw": "'KfiFb'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "qLieN",
                                                                            "raw": "'qLieN'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideGroupVsGroup",
                                                                                            "raw": "'collideGroupVsGroup'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object1"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object1"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "collideCallback"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "processCallback"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "callbackContext"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x24df1a"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "-=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4704a3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x380e33"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "-=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4704a3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x391e3c"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4704a3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "updateCenter",
                                                                                            "raw": "'updateCenter'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "immovable",
                                                                    "raw": "'immovable'"
                                                                }
                                                            },
                                                            "prefix": true
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "x",
                                                                                "raw": "'x'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x380e33"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x391e3c"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x147e63"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "updateCenter",
                                                                                "raw": "'updateCenter'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "*=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4704a3"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "velocity",
                                                                        "raw": "'velocity'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "x",
                                                                    "raw": "'x'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4704a3"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "bounce",
                                                                        "raw": "'bounce'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "x",
                                                                    "raw": "'x'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "*=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4704a3"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "velocity",
                                                                        "raw": "'velocity'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "y",
                                                                    "raw": "'y'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4704a3"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "bounce",
                                                                        "raw": "'bounce'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "y",
                                                                    "raw": "'y'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "*=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x147e63"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "velocity",
                                                                        "raw": "'velocity'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "x",
                                                                    "raw": "'x'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x147e63"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "bounce",
                                                                        "raw": "'bounce'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "x",
                                                                    "raw": "'x'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "*=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x147e63"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "velocity",
                                                                        "raw": "'velocity'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "y",
                                                                    "raw": "'y'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x147e63"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "bounce",
                                                                        "raw": "'bounce'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "y",
                                                                    "raw": "'y'"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4704a3"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "onCollide",
                                                                    "raw": "'onCollide'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x147e63"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "onCollide",
                                                                    "raw": "'onCollide'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "qODXb",
                                                                            "raw": "'qODXb'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "CkZTU",
                                                                            "raw": "'CkZTU'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "wrapArray",
                                                                                            "raw": "'wrapArray'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "padding"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "emit",
                                                                                            "raw": "'emit'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Events"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "COLLIDE",
                                                                                                "raw": "'COLLIDE'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4704a3"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "gameObject",
                                                                                                "raw": "'gameObject'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x147e63"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "gameObject",
                                                                                                "raw": "'gameObject'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4704a3"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x147e63"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "intersects",
                                            "raw": "'intersects'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x534a3c"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x49ec1e"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x534a3c"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x49ec1e"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "WFKIX",
                                                                            "raw": "'WFKIX'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "NnUKU",
                                                                            "raw": "'NnUKU'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x534a3c"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isCircle",
                                                                        "raw": "'isCircle'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x49ec1e"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isCircle",
                                                                        "raw": "'isCircle'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "||",
                                                                                "left": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x534a3c"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "right",
                                                                                                "raw": "'right'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x49ec1e"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "position",
                                                                                                    "raw": "'position'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x534a3c"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "bottom",
                                                                                                "raw": "'bottom'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x49ec1e"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "position",
                                                                                                    "raw": "'position'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": ">=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x534a3c"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "position",
                                                                                                "raw": "'position'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x49ec1e"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "right",
                                                                                            "raw": "'right'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": ">=",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x534a3c"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "position",
                                                                                            "raw": "'position'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "y",
                                                                                        "raw": "'y'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x49ec1e"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "bottom",
                                                                                        "raw": "'bottom'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x534a3c"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isCircle",
                                                                    "raw": "'isCircle'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!==",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "FnRwA",
                                                                                "raw": "'FnRwA'"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "FnRwA",
                                                                                "raw": "'FnRwA'"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "||",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "<",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "circle"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "rect"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": ">",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "circle"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "x",
                                                                                                    "raw": "'x'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "rect"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "right",
                                                                                                    "raw": "'right'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ReturnStatement",
                                                                                                "argument": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "separateCircle",
                                                                                                            "raw": "'separateCircle'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x534a3c"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x49ec1e"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "overlapOnly"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x49ec1e"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "isCircle",
                                                                                            "raw": "'isCircle'"
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "!==",
                                                                                                    "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "roKSQ",
                                                                                                        "raw": "'roKSQ'"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "IocgK",
                                                                                                        "raw": "'IocgK'"
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ReturnStatement",
                                                                                                            "argument": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "<=",
                                                                                                                "left": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "DistanceBetween"
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x534a3c"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "center",
                                                                                                                                    "raw": "'center'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "x",
                                                                                                                                "raw": "'x'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x534a3c"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "center",
                                                                                                                                    "raw": "'center'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "y",
                                                                                                                                "raw": "'y'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x49ec1e"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "center",
                                                                                                                                    "raw": "'center'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "x",
                                                                                                                                "raw": "'x'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x49ec1e"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "center",
                                                                                                                                    "raw": "'center'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "y",
                                                                                                                                "raw": "'y'"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "+",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x534a3c"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "halfWidth",
                                                                                                                            "raw": "'halfWidth'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x49ec1e"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "halfWidth",
                                                                                                                            "raw": "'halfWidth'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ForStatement",
                                                                                                            "init": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "i"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0x0"
                                                                                                                }
                                                                                                            },
                                                                                                            "test": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "<",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "i"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "object1"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "length",
                                                                                                                        "raw": "'length'"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "update": {
                                                                                                                "type": "UpdateExpression",
                                                                                                                "operator": "++",
                                                                                                                "argument": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "i"
                                                                                                                },
                                                                                                                "prefix": false
                                                                                                            },
                                                                                                            "body": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ForStatement",
                                                                                                                        "init": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "j"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": 0,
                                                                                                                                "raw": "0x0"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "test": {
                                                                                                                            "type": "BinaryExpression",
                                                                                                                            "operator": "<",
                                                                                                                            "left": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "j"
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "object2"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "length",
                                                                                                                                    "raw": "'length'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "update": {
                                                                                                                            "type": "UpdateExpression",
                                                                                                                            "operator": "++",
                                                                                                                            "argument": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "j"
                                                                                                                            },
                                                                                                                            "prefix": false
                                                                                                                        },
                                                                                                                        "body": {
                                                                                                                            "type": "BlockStatement",
                                                                                                                            "body": [
                                                                                                                                {
                                                                                                                                    "type": "ExpressionStatement",
                                                                                                                                    "expression": {
                                                                                                                                        "type": "CallExpression",
                                                                                                                                        "callee": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "ThisExpression"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "collideHandler",
                                                                                                                                                "raw": "'collideHandler'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "arguments": [
                                                                                                                                            {
                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                "computed": true,
                                                                                                                                                "object": {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "object1"
                                                                                                                                                },
                                                                                                                                                "property": {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "i"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                "computed": true,
                                                                                                                                                "object": {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "object2"
                                                                                                                                                },
                                                                                                                                                "property": {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "j"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "collideCallback"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "processCallback"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "callbackContext"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "overlapOnly"
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ReturnStatement",
                                                                                                "argument": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "circleBodyIntersects",
                                                                                                            "raw": "'circleBodyIntersects'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x534a3c"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x49ec1e"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "circleBodyIntersects",
                                                                                    "raw": "'circleBodyIntersects'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x49ec1e"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x534a3c"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "circleBodyIntersects",
                                            "raw": "'circleBodyIntersects'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x12b8f2"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3fa1dc"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x175b38"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Literal",
                                                                            "value": "0|3|1|4|2",
                                                                            "raw": "'0|3|1|4|2'"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "split",
                                                                            "raw": "'split'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "|",
                                                                            "raw": "'|'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1c419f"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "SwitchStatement",
                                                                    "discriminant": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x175b38"
                                                                        },
                                                                        "property": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1c419f"
                                                                            },
                                                                            "prefix": false
                                                                        }
                                                                    },
                                                                    "cases": [
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "0",
                                                                                "raw": "'0'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x44a667"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Clamp"
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x12b8f2"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "center",
                                                                                                                "raw": "'center'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3fa1dc"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "left",
                                                                                                            "raw": "'left'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3fa1dc"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "right",
                                                                                                            "raw": "'right'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "1",
                                                                                "raw": "'1'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x5d9098"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "-",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x12b8f2"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "center",
                                                                                                                "raw": "'center'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x44a667"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "-",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x12b8f2"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "center",
                                                                                                                "raw": "'center'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x44a667"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "2",
                                                                                "raw": "'2'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<=",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x5d9098"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x494479"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x12b8f2"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "halfWidth",
                                                                                                    "raw": "'halfWidth'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x12b8f2"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "halfWidth",
                                                                                                    "raw": "'halfWidth'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "3",
                                                                                "raw": "'3'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2e05aa"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Clamp"
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x12b8f2"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "center",
                                                                                                                "raw": "'center'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3fa1dc"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "top",
                                                                                                            "raw": "'top'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3fa1dc"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "bottom",
                                                                                                            "raw": "'bottom'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "4",
                                                                                "raw": "'4'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x494479"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "-",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x12b8f2"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "center",
                                                                                                                "raw": "'center'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2e05aa"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "-",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x12b8f2"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "center",
                                                                                                                "raw": "'center'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2e05aa"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "BreakStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "overlap",
                                            "raw": "'overlap'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x31e8f3"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x161435"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5de6d7"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x292ed2"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4215ec"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5de6d7"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5de6d7"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x292ed2"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "RBWPL",
                                                                            "raw": "'RBWPL'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "RBWPL",
                                                                            "raw": "'RBWPL'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x292ed2"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "body2"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "velocity",
                                                                                                "raw": "'velocity'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "body2"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "velocity",
                                                                                                    "raw": "'velocity'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "/",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "body2"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "mass",
                                                                                                        "raw": "'mass'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "nx"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "body2"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "velocity",
                                                                                                "raw": "'velocity'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "body2"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "velocity",
                                                                                                    "raw": "'velocity'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "/",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "p"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "body2"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "mass",
                                                                                                        "raw": "'mass'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "ny"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4215ec"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4215ec"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5de6d7"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideObjects",
                                                                    "raw": "'collideObjects'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x31e8f3"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x161435"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5de6d7"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x292ed2"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4215ec"
                                                                },
                                                                {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collide",
                                            "raw": "'collide'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3390f2"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1d5da9"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2970f9"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x26ad47"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1c1fb8"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x2970f9"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "akvnT",
                                                                            "raw": "'akvnT'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "DWtKP",
                                                                            "raw": "'DWtKP'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2970f9"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "-=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "velocityX"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dragX"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x26ad47"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "bBhKz",
                                                                            "raw": "'bBhKz'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "bBhKz",
                                                                            "raw": "'bBhKz'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "sprite1"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "body",
                                                                                                "raw": "'body'"
                                                                                            }
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "sprite2"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "body",
                                                                                                "raw": "'body'"
                                                                                            }
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": []
                                                                                                },
                                                                                                "prefix": true
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "separate",
                                                                                            "raw": "'separate'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "sprite1"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "body",
                                                                                                "raw": "'body'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "sprite2"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "body",
                                                                                                "raw": "'body'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x26ad47"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1c1fb8"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "overlapOnly"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2970f9"
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2970f9"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "call",
                                                                                                                    "raw": "'call'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x1c1fb8"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "sprite1"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "sprite2"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "UpdateExpression",
                                                                                                "operator": "++",
                                                                                                "argument": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "_total",
                                                                                                        "raw": "'_total'"
                                                                                                    }
                                                                                                },
                                                                                                "prefix": false
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x26ad47"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x1c1fb8"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "aWyHK",
                                                                            "raw": "'aWyHK'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "aWyHK",
                                                                            "raw": "'aWyHK'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1c1fb8"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2970f9"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x2970f9"
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2970f9"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "call",
                                                                                                        "raw": "'call'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x1c1fb8"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "bodyA"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "gameObject",
                                                                                                            "raw": "'gameObject'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "bodyB"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "gameObject",
                                                                                                            "raw": "'gameObject'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_total",
                                                                                            "raw": "'_total'"
                                                                                        }
                                                                                    },
                                                                                    "prefix": false
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideObjects",
                                                                    "raw": "'collideObjects'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3390f2"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1d5da9"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2970f9"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x26ad47"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1c1fb8"
                                                                },
                                                                {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideObjects",
                                            "raw": "'collideObjects'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x34a82e"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x29fe67"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x246616"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1f37a4"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x19d843"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4e0d45"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xc1a34b"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3675ec"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x34a82e"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isParent",
                                                                    "raw": "'isParent'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x34a82e"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "physicsType",
                                                                        "raw": "'physicsType'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x34a82e"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x34a82e"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "children",
                                                                                    "raw": "'children'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "entries",
                                                                                "raw": "'entries'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x29fe67"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x29fe67"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isParent",
                                                                        "raw": "'isParent'"
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x29fe67"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "physicsType",
                                                                        "raw": "'physicsType'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "DhNkP",
                                                                            "raw": "'DhNkP'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "BuAmH",
                                                                            "raw": "'BuAmH'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xe8528"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "4|3|0|5|2|1",
                                                                                                    "raw": "'4|3|0|5|2|1'"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "split",
                                                                                                    "raw": "'split'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "value": "|",
                                                                                                    "raw": "'|'"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x261384"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "WhileStatement",
                                                                                "test": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "ArrayExpression",
                                                                                            "elements": []
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "SwitchStatement",
                                                                                            "discriminant": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0xe8528"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "UpdateExpression",
                                                                                                    "operator": "++",
                                                                                                    "argument": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x261384"
                                                                                                    },
                                                                                                    "prefix": false
                                                                                                }
                                                                                            },
                                                                                            "cases": [
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "0",
                                                                                                        "raw": "'0'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "useTree",
                                                                                                                    "raw": "'useTree'"
                                                                                                                }
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "ThisExpression"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "tree",
                                                                                                                                        "raw": "'tree'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "clear",
                                                                                                                                    "raw": "'clear'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": []
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "ThisExpression"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "tree",
                                                                                                                                        "raw": "'tree'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "load",
                                                                                                                                    "raw": "'load'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "bodies"
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "alternate": null
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "1",
                                                                                                        "raw": "'1'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "emit",
                                                                                                                        "raw": "'emit'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "Events"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "WORLD_STEP",
                                                                                                                            "raw": "'WORLD_STEP'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "fixedDelta"
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "2",
                                                                                                        "raw": "'2'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ForStatement",
                                                                                                            "init": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0xc1a34b"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 0,
                                                                                                                    "raw": "0x0"
                                                                                                                }
                                                                                                            },
                                                                                                            "test": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "<",
                                                                                                                "left": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0xc1a34b"
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x31d040"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "length",
                                                                                                                        "raw": "'length'"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "update": {
                                                                                                                "type": "UpdateExpression",
                                                                                                                "operator": "++",
                                                                                                                "argument": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0xc1a34b"
                                                                                                                },
                                                                                                                "prefix": false
                                                                                                            },
                                                                                                            "body": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "VariableDeclaration",
                                                                                                                        "declarations": [
                                                                                                                            {
                                                                                                                                "type": "VariableDeclarator",
                                                                                                                                "id": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x46742e"
                                                                                                                                },
                                                                                                                                "init": {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0x31d040"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "_0xc1a34b"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "kind": "var"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "IfStatement",
                                                                                                                        "test": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x46742e"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "active",
                                                                                                                                "raw": "'active'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "consequent": {
                                                                                                                            "type": "BlockStatement",
                                                                                                                            "body": [
                                                                                                                                {
                                                                                                                                    "type": "ExpressionStatement",
                                                                                                                                    "expression": {
                                                                                                                                        "type": "CallExpression",
                                                                                                                                        "callee": {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x46742e"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "update",
                                                                                                                                                "raw": "'update'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "arguments": []
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "alternate": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "3",
                                                                                                        "raw": "'3'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "stepsLastFrame",
                                                                                                                        "raw": "'stepsLastFrame'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 1,
                                                                                                                    "raw": "0x1"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "4",
                                                                                                        "raw": "'4'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "AssignmentExpression",
                                                                                                                "operator": "-=",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "_elapsed",
                                                                                                                        "raw": "'_elapsed'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "msPerFrame"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "SwitchCase",
                                                                                                    "test": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "5",
                                                                                                        "raw": "'5'"
                                                                                                    },
                                                                                                    "consequent": [
                                                                                                        {
                                                                                                            "type": "VariableDeclaration",
                                                                                                            "declarations": [
                                                                                                                {
                                                                                                                    "type": "VariableDeclarator",
                                                                                                                    "id": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x31d040"
                                                                                                                    },
                                                                                                                    "init": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "colliders",
                                                                                                                                    "raw": "'colliders'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "update",
                                                                                                                                "raw": "'update'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": []
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "kind": "var"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ContinueStatement",
                                                                                                            "label": null
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "BreakStatement",
                                                                                            "label": null
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x29fe67"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x29fe67"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "children",
                                                                                                "raw": "'children'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "entries",
                                                                                            "raw": "'entries'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xedf305"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Array"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "isArray",
                                                                            "raw": "'isArray'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x34a82e"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5d79ee"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Array"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "isArray",
                                                                            "raw": "'isArray'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x29fe67"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_total",
                                                                    "raw": "'_total'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xedf305"
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5d79ee"
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collideHandler",
                                                                                "raw": "'collideHandler'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x34a82e"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x29fe67"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x246616"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1f37a4"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x19d843"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4e0d45"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "_0xedf305"
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5d79ee"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "ZxTNu",
                                                                                "raw": "'ZxTNu'"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "gWuXK",
                                                                                "raw": "'gWuXK'"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideGroupVsGroup",
                                                                                                "raw": "'collideGroupVsGroup'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x34a82e"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x29fe67"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x246616"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1f37a4"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x19d843"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4e0d45"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ForStatement",
                                                                                    "init": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xc1a34b"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    },
                                                                                    "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "<",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xc1a34b"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x29fe67"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "update": {
                                                                                        "type": "UpdateExpression",
                                                                                        "operator": "++",
                                                                                        "argument": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xc1a34b"
                                                                                        },
                                                                                        "prefix": false
                                                                                    },
                                                                                    "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "!==",
                                                                                                    "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "Hymvj",
                                                                                                        "raw": "'Hymvj'"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "bUpmJ",
                                                                                                        "raw": "'bUpmJ'"
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "collideHandler",
                                                                                                                        "raw": "'collideHandler'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x34a82e"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x29fe67"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0xc1a34b"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x246616"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x1f37a4"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x19d843"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x4e0d45"
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                                "type": "LogicalExpression",
                                                                                                                "operator": "||",
                                                                                                                "left": {
                                                                                                                    "type": "UnaryExpression",
                                                                                                                    "operator": "!",
                                                                                                                    "argument": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "sprite"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "body",
                                                                                                                                "raw": "'body'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "enable",
                                                                                                                            "raw": "'enable'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "prefix": true
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "===",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "tiles"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "length",
                                                                                                                            "raw": "'length'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": 0,
                                                                                                                        "raw": "0x0"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ReturnStatement",
                                                                                                                        "argument": {
                                                                                                                            "type": "UnaryExpression",
                                                                                                                            "operator": "!",
                                                                                                                            "argument": {
                                                                                                                                "type": "ArrayExpression",
                                                                                                                                "elements": []
                                                                                                                            },
                                                                                                                            "prefix": true
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "alternate": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ReturnStatement",
                                                                                                                        "argument": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideSpriteVsTilesHandler",
                                                                                                                                    "raw": "'collideSpriteVsTilesHandler'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "sprite"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tiles"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x246616"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x1f37a4"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x19d843"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                    "operator": "!",
                                                                                                                                    "argument": {
                                                                                                                                        "type": "UnaryExpression",
                                                                                                                                        "operator": "!",
                                                                                                                                        "argument": {
                                                                                                                                            "type": "ArrayExpression",
                                                                                                                                            "elements": []
                                                                                                                                        },
                                                                                                                                        "prefix": true
                                                                                                                                    },
                                                                                                                                    "prefix": true
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "UnaryExpression",
                                                                                                                                    "operator": "!",
                                                                                                                                    "argument": {
                                                                                                                                        "type": "ArrayExpression",
                                                                                                                                        "elements": []
                                                                                                                                    },
                                                                                                                                    "prefix": true
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0xedf305"
                                                                    },
                                                                    "right": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5d79ee"
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x29fe67"
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ForStatement",
                                                                                        "init": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xc1a34b"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            }
                                                                                        },
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "<",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xc1a34b"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x34a82e"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "length",
                                                                                                    "raw": "'length'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "update": {
                                                                                            "type": "UpdateExpression",
                                                                                            "operator": "++",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xc1a34b"
                                                                                            },
                                                                                            "prefix": false
                                                                                        },
                                                                                        "body": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "IfStatement",
                                                                                                    "test": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "!==",
                                                                                                        "left": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "CEuau",
                                                                                                            "raw": "'CEuau'"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "GDVQO",
                                                                                                            "raw": "'GDVQO'"
                                                                                                        }
                                                                                                    },
                                                                                                    "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "VariableDeclaration",
                                                                                                                "declarations": [
                                                                                                                    {
                                                                                                                        "type": "VariableDeclarator",
                                                                                                                        "id": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x5ed222"
                                                                                                                        },
                                                                                                                        "init": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x34a82e"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0xc1a34b"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                ],
                                                                                                                "kind": "var"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ForStatement",
                                                                                                                "init": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "=",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x3675ec"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "BinaryExpression",
                                                                                                                        "operator": "+",
                                                                                                                        "left": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0xc1a34b"
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": 1,
                                                                                                                            "raw": "0x1"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "test": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "<",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x3675ec"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x34a82e"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "length",
                                                                                                                            "raw": "'length'"
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "update": {
                                                                                                                    "type": "UpdateExpression",
                                                                                                                    "operator": "++",
                                                                                                                    "argument": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x3675ec"
                                                                                                                    },
                                                                                                                    "prefix": false
                                                                                                                },
                                                                                                                "body": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                        {
                                                                                                                            "type": "IfStatement",
                                                                                                                            "test": {
                                                                                                                                "type": "BinaryExpression",
                                                                                                                                "operator": "!==",
                                                                                                                                "left": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "TZZXL",
                                                                                                                                    "raw": "'TZZXL'"
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "Hxmhx",
                                                                                                                                    "raw": "'Hxmhx'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "consequent": {
                                                                                                                                "type": "BlockStatement",
                                                                                                                                "body": [
                                                                                                                                    {
                                                                                                                                        "type": "IfStatement",
                                                                                                                                        "test": {
                                                                                                                                            "type": "BinaryExpression",
                                                                                                                                            "operator": "===",
                                                                                                                                            "left": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0xc1a34b"
                                                                                                                                            },
                                                                                                                                            "right": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x3675ec"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "consequent": {
                                                                                                                                            "type": "BlockStatement",
                                                                                                                                            "body": [
                                                                                                                                                {
                                                                                                                                                    "type": "IfStatement",
                                                                                                                                                    "test": {
                                                                                                                                                        "type": "BinaryExpression",
                                                                                                                                                        "operator": "===",
                                                                                                                                                        "left": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "FtTel",
                                                                                                                                                            "raw": "'FtTel'"
                                                                                                                                                        },
                                                                                                                                                        "right": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "MigJv",
                                                                                                                                                            "raw": "'MigJv'"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "consequent": {
                                                                                                                                                        "type": "BlockStatement",
                                                                                                                                                        "body": [
                                                                                                                                                            {
                                                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                                                "expression": {
                                                                                                                                                                    "type": "CallExpression",
                                                                                                                                                                    "callee": {
                                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                                        "computed": true,
                                                                                                                                                                        "object": {
                                                                                                                                                                            "type": "MemberExpression",
                                                                                                                                                                            "computed": true,
                                                                                                                                                                            "object": {
                                                                                                                                                                                "type": "ThisExpression"
                                                                                                                                                                            },
                                                                                                                                                                            "property": {
                                                                                                                                                                                "type": "Literal",
                                                                                                                                                                                "value": "bodies",
                                                                                                                                                                                "raw": "'bodies'"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        "property": {
                                                                                                                                                                            "type": "Literal",
                                                                                                                                                                            "value": "set",
                                                                                                                                                                            "raw": "'set'"
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "arguments": [
                                                                                                                                                                        {
                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                            "name": "body"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    "alternate": {
                                                                                                                                                        "type": "BlockStatement",
                                                                                                                                                        "body": [
                                                                                                                                                            {
                                                                                                                                                                "type": "ContinueStatement",
                                                                                                                                                                "label": null
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        "alternate": null
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "type": "ExpressionStatement",
                                                                                                                                        "expression": {
                                                                                                                                            "type": "CallExpression",
                                                                                                                                            "callee": {
                                                                                                                                                "type": "MemberExpression",
                                                                                                                                                "computed": true,
                                                                                                                                                "object": {
                                                                                                                                                    "type": "ThisExpression"
                                                                                                                                                },
                                                                                                                                                "property": {
                                                                                                                                                    "type": "Literal",
                                                                                                                                                    "value": "collideHandler",
                                                                                                                                                    "raw": "'collideHandler'"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "arguments": [
                                                                                                                                                {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "_0x5ed222"
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "MemberExpression",
                                                                                                                                                    "computed": true,
                                                                                                                                                    "object": {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "_0x34a82e"
                                                                                                                                                    },
                                                                                                                                                    "property": {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "_0x3675ec"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "_0x246616"
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "_0x1f37a4"
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "_0x19d843"
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "_0x4e0d45"
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            "alternate": {
                                                                                                                                "type": "BlockStatement",
                                                                                                                                "body": [
                                                                                                                                    {
                                                                                                                                        "type": "ExpressionStatement",
                                                                                                                                        "expression": {
                                                                                                                                            "type": "AssignmentExpression",
                                                                                                                                            "operator": "=",
                                                                                                                                            "left": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "resultY"
                                                                                                                                            },
                                                                                                                                            "right": {
                                                                                                                                                "type": "CallExpression",
                                                                                                                                                "callee": {
                                                                                                                                                    "type": "Identifier",
                                                                                                                                                    "name": "SeparateY"
                                                                                                                                                },
                                                                                                                                                "arguments": [
                                                                                                                                                    {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "body1"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "body2"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "Identifier",
                                                                                                                                                        "name": "_0x4e0d45"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "type": "MemberExpression",
                                                                                                                                                        "computed": true,
                                                                                                                                                        "object": {
                                                                                                                                                            "type": "ThisExpression"
                                                                                                                                                        },
                                                                                                                                                        "property": {
                                                                                                                                                            "type": "Literal",
                                                                                                                                                            "value": "OVERLAP_BIAS",
                                                                                                                                                            "raw": "'OVERLAP_BIAS'"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "alternate": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "-=",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "body1"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "x",
                                                                                                                            "raw": "'x'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "overlapX"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "-=",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "body1"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "y",
                                                                                                                            "raw": "'y'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "overlapY"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "body1"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "updateCenter",
                                                                                                                            "raw": "'updateCenter'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": []
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "!==",
                                                                                            "left": {
                                                                                                "type": "Literal",
                                                                                                "value": "uSQQg",
                                                                                                "raw": "'uSQQg'"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": "uSQQg",
                                                                                                "raw": "'uSQQg'"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ReturnStatement",
                                                                                                    "argument": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "circleBodyIntersects",
                                                                                                                "raw": "'circleBodyIntersects'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "body1"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "body2"
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ForStatement",
                                                                                                    "init": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xc1a34b"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0,
                                                                                                            "raw": "0x0"
                                                                                                        }
                                                                                                    },
                                                                                                    "test": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "<",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xc1a34b"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x34a82e"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "length",
                                                                                                                "raw": "'length'"
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "update": {
                                                                                                        "type": "UpdateExpression",
                                                                                                        "operator": "++",
                                                                                                        "argument": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xc1a34b"
                                                                                                        },
                                                                                                        "prefix": false
                                                                                                    },
                                                                                                    "body": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "ThisExpression"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "collideHandler",
                                                                                                                            "raw": "'collideHandler'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x34a82e"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0xc1a34b"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x29fe67"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x246616"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x1f37a4"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x19d843"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x4e0d45"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "jlvJH",
                                                                                    "raw": "'jlvJH'"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "jlvJH",
                                                                                    "raw": "'jlvJH'"
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ForStatement",
                                                                                        "init": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xc1a34b"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            }
                                                                                        },
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "<",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xc1a34b"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x34a82e"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "length",
                                                                                                    "raw": "'length'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "update": {
                                                                                            "type": "UpdateExpression",
                                                                                            "operator": "++",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xc1a34b"
                                                                                            },
                                                                                            "prefix": false
                                                                                        },
                                                                                        "body": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ForStatement",
                                                                                                    "init": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3675ec"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 0,
                                                                                                            "raw": "0x0"
                                                                                                        }
                                                                                                    },
                                                                                                    "test": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "<",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3675ec"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x29fe67"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "length",
                                                                                                                "raw": "'length'"
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "update": {
                                                                                                        "type": "UpdateExpression",
                                                                                                        "operator": "++",
                                                                                                        "argument": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x3675ec"
                                                                                                        },
                                                                                                        "prefix": false
                                                                                                    },
                                                                                                    "body": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "ThisExpression"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "collideHandler",
                                                                                                                            "raw": "'collideHandler'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x34a82e"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0xc1a34b"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x29fe67"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x3675ec"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x246616"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x1f37a4"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x19d843"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x4e0d45"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "_total",
                                                                    "raw": "'_total'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideHandler",
                                            "raw": "'collideHandler'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x58a4f5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x36b3cf"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x40431f"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x31896a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x400130"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2ec69a"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x36b3cf"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x58a4f5"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isParent",
                                                                    "raw": "'isParent'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collideGroupVsGroup",
                                                                                "raw": "'collideGroupVsGroup'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x58a4f5"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x58a4f5"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x40431f"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x31896a"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x400130"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2ec69a"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x58a4f5"
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x36b3cf"
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "hwneC",
                                                                            "raw": "'hwneC'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "zyuYD",
                                                                            "raw": "'zyuYD'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "wrapArray",
                                                                                            "raw": "'wrapArray'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "object"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "getChildren",
                                                                                                    "raw": "'getChildren'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": []
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "padding"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x58a4f5"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "body",
                                                                "raw": "'body'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x36b3cf"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "body",
                                                                            "raw": "'body'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "EDKbo",
                                                                                        "raw": "'EDKbo'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "EDKbo",
                                                                                        "raw": "'EDKbo'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "collideSpriteVsSprite",
                                                                                                        "raw": "'collideSpriteVsSprite'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x58a4f5"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x36b3cf"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x40431f"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x31896a"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x400130"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2ec69a"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": []
                                                                                                },
                                                                                                "prefix": true
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x36b3cf"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "isParent",
                                                                                "raw": "'isParent'"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideSpriteVsGroup",
                                                                                                "raw": "'collideSpriteVsGroup'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x58a4f5"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x36b3cf"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x40431f"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x31896a"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x400130"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2ec69a"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x36b3cf"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "isTilemap",
                                                                                    "raw": "'isTilemap'"
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "collideSpriteVsTilemapLayer",
                                                                                                    "raw": "'collideSpriteVsTilemapLayer'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x58a4f5"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x36b3cf"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x40431f"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x31896a"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x400130"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x2ec69a"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": null
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x58a4f5"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "isParent",
                                                                    "raw": "'isParent'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "qLzRM",
                                                                                "raw": "'qLzRM'"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "VftSO",
                                                                                "raw": "'VftSO'"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "up"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "ArrayExpression",
                                                                                                    "elements": []
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x36b3cf"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "body",
                                                                                            "raw": "'body'"
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ReturnStatement",
                                                                                                "argument": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "collideSpriteVsGroup",
                                                                                                            "raw": "'collideSpriteVsGroup'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x36b3cf"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x58a4f5"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x40431f"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x31896a"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x400130"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x2ec69a"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x36b3cf"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "isParent",
                                                                                                "raw": "'isParent'"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "IfStatement",
                                                                                                    "test": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "===",
                                                                                                        "left": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "FAgZy",
                                                                                                            "raw": "'FAgZy'"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "FAgZy",
                                                                                                            "raw": "'FAgZy'"
                                                                                                        }
                                                                                                    },
                                                                                                    "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ReturnStatement",
                                                                                                                "argument": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "ThisExpression"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "collideGroupVsGroup",
                                                                                                                            "raw": "'collideGroupVsGroup'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x58a4f5"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x36b3cf"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x40431f"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x31896a"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x400130"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x2ec69a"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "alternate": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                            {
                                                                                                                "type": "ReturnStatement",
                                                                                                                "argument": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "ThisExpression"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "collideSpriteVsTilesHandler",
                                                                                                                            "raw": "'collideSpriteVsTilesHandler'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "sprite"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "mapData"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x40431f"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x31896a"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x400130"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x2ec69a"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "UnaryExpression",
                                                                                                                            "operator": "!",
                                                                                                                            "argument": {
                                                                                                                                "type": "UnaryExpression",
                                                                                                                                "operator": "!",
                                                                                                                                "argument": {
                                                                                                                                    "type": "ArrayExpression",
                                                                                                                                    "elements": []
                                                                                                                                },
                                                                                                                                "prefix": true
                                                                                                                            },
                                                                                                                            "prefix": true
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x36b3cf"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isTilemap",
                                                                                                    "raw": "'isTilemap'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "===",
                                                                                                            "left": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "cbrxR",
                                                                                                                "raw": "'cbrxR'"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "cbrxR",
                                                                                                                "raw": "'cbrxR'"
                                                                                                            }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ReturnStatement",
                                                                                                                    "argument": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "collideGroupVsTilemapLayer",
                                                                                                                                "raw": "'collideGroupVsTilemapLayer'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x58a4f5"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x36b3cf"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x40431f"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x31896a"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x400130"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x2ec69a"
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ReturnStatement",
                                                                                                                    "argument": {
                                                                                                                        "type": "UnaryExpression",
                                                                                                                        "operator": "!",
                                                                                                                        "argument": {
                                                                                                                            "type": "ArrayExpression",
                                                                                                                            "elements": []
                                                                                                                        },
                                                                                                                        "prefix": true
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x58a4f5"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "isTilemap",
                                                                        "raw": "'isTilemap'"
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "jLXHF",
                                                                                    "raw": "'jLXHF'"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "jLXHF",
                                                                                    "raw": "'jLXHF'"
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x36b3cf"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "body",
                                                                                                "raw": "'body'"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ReturnStatement",
                                                                                                    "argument": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "collideSpriteVsTilemapLayer",
                                                                                                                "raw": "'collideSpriteVsTilemapLayer'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x36b3cf"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x58a4f5"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x40431f"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x31896a"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x400130"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x2ec69a"
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x36b3cf"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "isParent",
                                                                                                    "raw": "'isParent'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ReturnStatement",
                                                                                                        "argument": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "collideGroupVsTilemapLayer",
                                                                                                                    "raw": "'collideGroupVsTilemapLayer'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x36b3cf"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x58a4f5"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x40431f"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x31896a"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x400130"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2ec69a"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "===",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "overlapCallback"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "undefined"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "overlapCallback"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": null,
                                                                                                            "raw": "null"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": null
                                                                                    },
                                                                                    {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "===",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x31896a"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "undefined"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x31896a"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": null,
                                                                                                            "raw": "null"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": null
                                                                                    },
                                                                                    {
                                                                                        "type": "IfStatement",
                                                                                        "test": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "===",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x400130"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "undefined"
                                                                                            }
                                                                                        },
                                                                                        "consequent": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                                {
                                                                                                    "type": "ExpressionStatement",
                                                                                                    "expression": {
                                                                                                        "type": "AssignmentExpression",
                                                                                                        "operator": "=",
                                                                                                        "left": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x400130"
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "overlapCallback"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "alternate": null
                                                                                    },
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "collideObjects",
                                                                                                    "raw": "'collideObjects'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x58a4f5"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x36b3cf"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "overlapCallback"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x31896a"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x400130"
                                                                                                },
                                                                                                {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "UnaryExpression",
                                                                                                        "operator": "!",
                                                                                                        "argument": {
                                                                                                            "type": "ArrayExpression",
                                                                                                            "elements": []
                                                                                                        },
                                                                                                        "prefix": true
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": null
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideSpriteVsSprite",
                                            "raw": "'collideSpriteVsSprite'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x134367"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x285acf"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x327a23"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2a406c"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4a126a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x161e04"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x134367"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x285acf"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "apwCk",
                                                                            "raw": "'apwCk'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "apwCk",
                                                                            "raw": "'apwCk'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "fixedDelta"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "delta"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0.001,
                                                                                            "raw": "0.001"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "willStep"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_elapsed",
                                                                                            "raw": "'_elapsed'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "separate",
                                                                    "raw": "'separate'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x134367"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x285acf"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2a406c"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4a126a"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x161e04"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x327a23"
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x327a23"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "call",
                                                                                            "raw": "'call'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4a126a"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x134367"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x285acf"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "_total",
                                                                                "raw": "'_total'"
                                                                            }
                                                                        },
                                                                        "prefix": false
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideSpriteVsGroup",
                                            "raw": "'collideSpriteVsGroup'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3743a0"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2084e2"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x39315c"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x137994"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x17e0c0"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x34e0ac"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x476c53"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3743a0"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2084e2"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "length",
                                                                                "raw": "'length'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x476c53"
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x476c53"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "enable",
                                                                            "raw": "'enable'"
                                                                        }
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x476c53"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "checkCollision",
                                                                        "raw": "'checkCollision'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "none",
                                                                    "raw": "'none'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "REsDp",
                                                                            "raw": "'REsDp'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "REsDp",
                                                                            "raw": "'REsDp'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideSpriteVsTilemapLayer",
                                                                                            "raw": "'collideSpriteVsTilemapLayer'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object1"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "object2"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x39315c"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x137994"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x17e0c0"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x34e0ac"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": null
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x54fd1a"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3a12b3"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x568615"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "useTree",
                                                                    "raw": "'useTree'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2084e2"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "physicsType",
                                                                        "raw": "'physicsType'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "CONST"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "STATIC_BODY",
                                                                        "raw": "'STATIC_BODY'"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "BRwxj",
                                                                            "raw": "'BRwxj'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "pzZJE",
                                                                            "raw": "'pzZJE'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "body2"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "overlapX"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "+=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "body2"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "overlapY"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "body2"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "updateCenter",
                                                                                            "raw": "'updateCenter'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x320d12"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "treeMinMax",
                                                                                                "raw": "'treeMinMax'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x320d12"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "minX",
                                                                                            "raw": "'minX'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x476c53"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "left",
                                                                                            "raw": "'left'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x320d12"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "minY",
                                                                                            "raw": "'minY'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x476c53"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "top",
                                                                                            "raw": "'top'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x320d12"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "maxX",
                                                                                            "raw": "'maxX'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x476c53"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "right",
                                                                                            "raw": "'right'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x320d12"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "maxY",
                                                                                            "raw": "'maxY'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x476c53"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "bottom",
                                                                                            "raw": "'bottom'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4a07af"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2084e2"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "physicsType",
                                                                                                        "raw": "'physicsType'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "CONST"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "DYNAMIC_BODY",
                                                                                                        "raw": "'DYNAMIC_BODY'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "tree",
                                                                                                            "raw": "'tree'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "search",
                                                                                                        "raw": "'search'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x320d12"
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "staticTree",
                                                                                                            "raw": "'staticTree'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "search",
                                                                                                        "raw": "'search'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x320d12"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3a12b3"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4a07af"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "length",
                                                                                            "raw": "'length'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ForStatement",
                                                                                "init": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x54fd1a"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                },
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x54fd1a"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3a12b3"
                                                                                    }
                                                                                },
                                                                                "update": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x54fd1a"
                                                                                    },
                                                                                    "prefix": false
                                                                                },
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x568615"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4a07af"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x54fd1a"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "||",
                                                                                                "left": {
                                                                                                    "type": "LogicalExpression",
                                                                                                    "operator": "||",
                                                                                                    "left": {
                                                                                                        "type": "LogicalExpression",
                                                                                                        "operator": "||",
                                                                                                        "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "===",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x476c53"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x568615"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "UnaryExpression",
                                                                                                            "operator": "!",
                                                                                                            "argument": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x568615"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "enable",
                                                                                                                    "raw": "'enable'"
                                                                                                                }
                                                                                                            },
                                                                                                            "prefix": true
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x568615"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "checkCollision",
                                                                                                                "raw": "'checkCollision'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "none",
                                                                                                            "raw": "'none'"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x2084e2"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "contains",
                                                                                                                "raw": "'contains'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x568615"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "gameObject",
                                                                                                                    "raw": "'gameObject'"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "!==",
                                                                                                            "left": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "xpWsD",
                                                                                                                "raw": "'xpWsD'"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "xpWsD",
                                                                                                                "raw": "'xpWsD'"
                                                                                                            }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "createDebugGraphic",
                                                                                                                                "raw": "'createDebugGraphic'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": []
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ContinueStatement",
                                                                                                                    "label": null
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "separate",
                                                                                                        "raw": "'separate'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x476c53"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x568615"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x137994"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x17e0c0"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x34e0ac"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "UnaryExpression",
                                                                                                        "operator": "!",
                                                                                                        "argument": {
                                                                                                            "type": "UnaryExpression",
                                                                                                            "operator": "!",
                                                                                                            "argument": {
                                                                                                                "type": "ArrayExpression",
                                                                                                                "elements": []
                                                                                                            },
                                                                                                            "prefix": true
                                                                                                        },
                                                                                                        "prefix": true
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x39315c"
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x39315c"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "call",
                                                                                                                                "raw": "'call'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x17e0c0"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x476c53"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "gameObject",
                                                                                                                                    "raw": "'gameObject'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x568615"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "gameObject",
                                                                                                                                    "raw": "'gameObject'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": null
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "UpdateExpression",
                                                                                                            "operator": "++",
                                                                                                            "argument": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "_total",
                                                                                                                    "raw": "'_total'"
                                                                                                                }
                                                                                                            },
                                                                                                            "prefix": false
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "gSSNH",
                                                                            "raw": "'gSSNH'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "AXQpX",
                                                                            "raw": "'AXQpX'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x21d527"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x2084e2"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "getChildren",
                                                                                                    "raw": "'getChildren'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": []
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x201752"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x2084e2"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "children",
                                                                                                            "raw": "'children'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "entries",
                                                                                                        "raw": "'entries'"
                                                                                                    }
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "indexOf",
                                                                                                    "raw": "'indexOf'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x3743a0"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3a12b3"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x21d527"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "length",
                                                                                            "raw": "'length'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ForStatement",
                                                                                "init": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x54fd1a"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    }
                                                                                },
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "<",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x54fd1a"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3a12b3"
                                                                                    }
                                                                                },
                                                                                "update": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x54fd1a"
                                                                                    },
                                                                                    "prefix": false
                                                                                },
                                                                                "body": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "wOMDL",
                                                                                                    "raw": "'wOMDL'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "qZwhf",
                                                                                                    "raw": "'qZwhf'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x568615"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x21d527"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x54fd1a"
                                                                                                                    }
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "body",
                                                                                                                    "raw": "'body'"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "LogicalExpression",
                                                                                                            "operator": "||",
                                                                                                            "left": {
                                                                                                                "type": "LogicalExpression",
                                                                                                                "operator": "||",
                                                                                                                "left": {
                                                                                                                    "type": "UnaryExpression",
                                                                                                                    "operator": "!",
                                                                                                                    "argument": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x568615"
                                                                                                                    },
                                                                                                                    "prefix": true
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "===",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x54fd1a"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x201752"
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "UnaryExpression",
                                                                                                                "operator": "!",
                                                                                                                "argument": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x568615"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "enable",
                                                                                                                        "raw": "'enable'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "prefix": true
                                                                                                            }
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "ContinueStatement",
                                                                                                                    "label": null
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": null
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "separate",
                                                                                                                    "raw": "'separate'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x476c53"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x568615"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x137994"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x17e0c0"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x34e0ac"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "BlockStatement",
                                                                                                            "body": [
                                                                                                                {
                                                                                                                    "type": "IfStatement",
                                                                                                                    "test": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x39315c"
                                                                                                                    },
                                                                                                                    "consequent": {
                                                                                                                        "type": "BlockStatement",
                                                                                                                        "body": [
                                                                                                                            {
                                                                                                                                "type": "ExpressionStatement",
                                                                                                                                "expression": {
                                                                                                                                    "type": "CallExpression",
                                                                                                                                    "callee": {
                                                                                                                                        "type": "MemberExpression",
                                                                                                                                        "computed": true,
                                                                                                                                        "object": {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x39315c"
                                                                                                                                        },
                                                                                                                                        "property": {
                                                                                                                                            "type": "Literal",
                                                                                                                                            "value": "call",
                                                                                                                                            "raw": "'call'"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "arguments": [
                                                                                                                                        {
                                                                                                                                            "type": "Identifier",
                                                                                                                                            "name": "_0x17e0c0"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x476c53"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "gameObject",
                                                                                                                                                "raw": "'gameObject'"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "MemberExpression",
                                                                                                                                            "computed": true,
                                                                                                                                            "object": {
                                                                                                                                                "type": "Identifier",
                                                                                                                                                "name": "_0x568615"
                                                                                                                                            },
                                                                                                                                            "property": {
                                                                                                                                                "type": "Literal",
                                                                                                                                                "value": "gameObject",
                                                                                                                                                "raw": "'gameObject'"
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "alternate": null
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "ExpressionStatement",
                                                                                                                    "expression": {
                                                                                                                        "type": "UpdateExpression",
                                                                                                                        "operator": "++",
                                                                                                                        "argument": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "_total",
                                                                                                                                "raw": "'_total'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "prefix": false
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "alternate": null
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "emit",
                                                                                                                    "raw": "'emit'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "Events"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "COLLIDE",
                                                                                                                        "raw": "'COLLIDE'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "body1"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "gameObject",
                                                                                                                        "raw": "'gameObject'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "body2"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "gameObject",
                                                                                                                        "raw": "'gameObject'"
                                                                                                                    }
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "body1"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "body2"
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideGroupVsTilemapLayer",
                                            "raw": "'collideGroupVsTilemapLayer'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4fc835"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2005c4"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1df34f"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4bf008"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x270772"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xc7b7a1"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x528516"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4fc835"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getChildren",
                                                                            "raw": "'getChildren'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x528516"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x50aafd"
                                                                },
                                                                "init": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3be1ff"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3be1ff"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x528516"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x3be1ff"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x528516"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3be1ff"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "body",
                                                                            "raw": "'body'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideSpriteVsTilemapLayer",
                                                                                            "raw": "'collideSpriteVsTilemapLayer'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x528516"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x3be1ff"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2005c4"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1df34f"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4bf008"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x270772"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xc7b7a1"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "===",
                                                                                                "left": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "jTRuJ",
                                                                                                    "raw": "'jTRuJ'"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "jTRuJ",
                                                                                                    "raw": "'jTRuJ'"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x50aafd"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "UnaryExpression",
                                                                                                                "operator": "!",
                                                                                                                "argument": {
                                                                                                                    "type": "UnaryExpression",
                                                                                                                    "operator": "!",
                                                                                                                    "argument": {
                                                                                                                        "type": "ArrayExpression",
                                                                                                                        "elements": []
                                                                                                                    },
                                                                                                                    "prefix": true
                                                                                                                },
                                                                                                                "prefix": true
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ExpressionStatement",
                                                                                                        "expression": {
                                                                                                            "type": "AssignmentExpression",
                                                                                                            "operator": "=",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "object"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "ArrayExpression",
                                                                                                                "elements": [
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "object"
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x50aafd"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideTiles",
                                            "raw": "'collideTiles'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x224e5d"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x406bd6"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x39bc6c"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4df001"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4aaf9d"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x224e5d"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "body",
                                                                            "raw": "'body'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "enable",
                                                                        "raw": "'enable'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x406bd6"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "GADgD",
                                                                            "raw": "'GADgD'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "QgEpv",
                                                                            "raw": "'QgEpv'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dragX"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Math"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "pow",
                                                                                                "raw": "'pow'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "dragX"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "delta"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "*=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "velocityX"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "dragX"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "speed"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Math"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "sqrt",
                                                                                                "raw": "'sqrt'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "velocityX"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "velocityX"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "velocityY"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "velocityY"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "FuzzyEqual"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "speed"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 0.001,
                                                                                            "raw": "0.001"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "velocityX"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 0,
                                                                                                    "raw": "0x0"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collideSpriteVsTilesHandler",
                                                                                "raw": "'collideSpriteVsTilesHandler'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x224e5d"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x406bd6"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x39bc6c"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4df001"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4aaf9d"
                                                                            },
                                                                            {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "overlapTiles",
                                            "raw": "'overlapTiles'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5c1815"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x12856f"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xe993d1"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4e5c1d"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1c1550"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5c1815"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "body",
                                                                            "raw": "'body'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "enable",
                                                                        "raw": "'enable'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x12856f"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collideSpriteVsTilesHandler",
                                                                                "raw": "'collideSpriteVsTilesHandler'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5c1815"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x12856f"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0xe993d1"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4e5c1d"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1c1550"
                                                                            },
                                                                            {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideSpriteVsTilemapLayer",
                                            "raw": "'collideSpriteVsTilemapLayer'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x37bf46"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x11bb0a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x155021"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x13347e"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4d01bb"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x14d60e"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1f498f"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x37bf46"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1f498f"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "enable",
                                                                        "raw": "'enable'"
                                                                    }
                                                                },
                                                                "prefix": true
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1f498f"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "checkCollision",
                                                                        "raw": "'checkCollision'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "none",
                                                                    "raw": "'none'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "luCwM",
                                                                            "raw": "'luCwM'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "ZMMLH",
                                                                            "raw": "'ZMMLH'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x155021"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "call",
                                                                                            "raw": "'call'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4d01bb"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "sprite1"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "sprite2"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x565921"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1f498f"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "position",
                                                                            "raw": "'position'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "x",
                                                                        "raw": "'x'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x14b292"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1f498f"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "position",
                                                                            "raw": "'position'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "y",
                                                                        "raw": "'y'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x519aa9"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1f498f"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "width",
                                                                        "raw": "'width'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1f94fb"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1f498f"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "height",
                                                                        "raw": "'height'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5099cc"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x11bb0a"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "layer",
                                                                        "raw": "'layer'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5099cc"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "tileWidth",
                                                                    "raw": "'tileWidth'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5099cc"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "baseTileWidth",
                                                                    "raw": "'baseTileWidth'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0xfcb898"
                                                                            },
                                                                            "init": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5099cc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "tileWidth",
                                                                                            "raw": "'tileWidth'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5099cc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "baseTileWidth",
                                                                                            "raw": "'baseTileWidth'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x11bb0a"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "scaleX",
                                                                                        "raw": "'scaleX'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "-=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x565921"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xfcb898"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x519aa9"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xfcb898"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5099cc"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "tileHeight",
                                                                    "raw": "'tileHeight'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5099cc"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "baseTileHeight",
                                                                    "raw": "'baseTileHeight'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x6b64fb"
                                                                            },
                                                                            "init": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5099cc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "tileHeight",
                                                                                            "raw": "'tileHeight'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5099cc"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "baseTileHeight",
                                                                                            "raw": "'baseTileHeight'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x11bb0a"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "scaleY",
                                                                                        "raw": "'scaleY'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1f94fb"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x6b64fb"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5386f0"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "GetTilesWithinWorldXY"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x565921"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x14b292"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x519aa9"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1f94fb"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x11bb0a"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "scene",
                                                                                        "raw": "'scene'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "cameras",
                                                                                    "raw": "'cameras'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "main",
                                                                                "raw": "'main'"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x11bb0a"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "layer",
                                                                                "raw": "'layer'"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5386f0"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                            "type": "ArrayExpression",
                                                                            "elements": []
                                                                        },
                                                                        "prefix": true
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collideSpriteVsTilesHandler",
                                                                                "raw": "'collideSpriteVsTilesHandler'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x37bf46"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5386f0"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x155021"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x13347e"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4d01bb"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x14d60e"
                                                                            },
                                                                            {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "prefix": true
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideSpriteVsTilesHandler",
                                            "raw": "'collideSpriteVsTilesHandler'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x56c7d2"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3d5365"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x33add7"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1c8307"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x384509"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2fa889"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4ee133"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x32a70d"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x56c7d2"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "body",
                                                                        "raw": "'body'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x547678"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2f9e5d"
                                                                },
                                                                "init": null
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3be2ac"
                                                                },
                                                                "init": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0xc24308"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0xc24308"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3d5365"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0xc24308"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x547678"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3d5365"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_0xc24308"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2f9e5d"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x547678"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "tilemapLayer",
                                                                                "raw": "'tilemapLayer'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x42bb30"
                                                                            },
                                                                            "init": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2f9e5d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "tileToWorldXY",
                                                                                        "raw": "'tileToWorldXY'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x547678"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "x",
                                                                                            "raw": "'x'"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x547678"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "y",
                                                                                            "raw": "'y'"
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x42bb30"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "x",
                                                                                "raw": "'x'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x42bb30"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x547678"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "baseHeight",
                                                                                "raw": "'baseHeight'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x547678"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "height",
                                                                                "raw": "'height'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "-=",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": 0,
                                                                                        "raw": "0x0"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "-",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x547678"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "height",
                                                                                                    "raw": "'height'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x547678"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "baseHeight",
                                                                                                    "raw": "'baseHeight'"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2f9e5d"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "scaleY",
                                                                                                "raw": "'scaleY'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x547678"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "width",
                                                                                        "raw": "'width'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2f9e5d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "scaleX",
                                                                                        "raw": "'scaleX'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x547678"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "height",
                                                                                        "raw": "'height'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2f9e5d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "scaleY",
                                                                                        "raw": "'scaleY'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "TileIntersectsBody"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2466c3"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x32a70d"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1c8307"
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1c8307"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "call",
                                                                                                "raw": "'call'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x384509"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x56c7d2"
                                                                                            },
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x547678"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "ProcessTileCallbacks"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x547678"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x56c7d2"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2fa889"
                                                                            },
                                                                            "right": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "SeparateTile"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xc24308"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x32a70d"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x547678"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2466c3"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2f9e5d"
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "TILE_BIAS",
                                                                                            "raw": "'TILE_BIAS'"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x4ee133"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "_total",
                                                                                            "raw": "'_total'"
                                                                                        }
                                                                                    },
                                                                                    "prefix": false
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3be2ac"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x33add7"
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x33add7"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "call",
                                                                                                        "raw": "'call'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x384509"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x56c7d2"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x547678"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "&&",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2fa889"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x32a70d"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "onOverlap",
                                                                                            "raw": "'onOverlap'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "emit",
                                                                                                        "raw": "'emit'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "Events"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "TILE_OVERLAP",
                                                                                                            "raw": "'TILE_OVERLAP'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x56c7d2"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x547678"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x32a70d"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x32a70d"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "onCollide",
                                                                                            "raw": "'onCollide'"
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "!==",
                                                                                                    "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "aUhNW",
                                                                                                        "raw": "'aUhNW'"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "eyRTZ",
                                                                                                        "raw": "'eyRTZ'"
                                                                                                    }
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                                "type": "CallExpression",
                                                                                                                "callee": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "emit",
                                                                                                                        "raw": "'emit'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "arguments": [
                                                                                                                    {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "Events"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "TILE_COLLIDE",
                                                                                                                            "raw": "'TILE_COLLIDE'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x56c7d2"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x547678"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x32a70d"
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "BlockStatement",
                                                                                                    "body": [
                                                                                                        {
                                                                                                            "type": "VariableDeclaration",
                                                                                                            "declarations": [
                                                                                                                {
                                                                                                                    "type": "VariableDeclarator",
                                                                                                                    "id": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x3e1d93"
                                                                                                                    },
                                                                                                                    "init": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "colliders"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0xc24308"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            ],
                                                                                                            "kind": "var"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "IfStatement",
                                                                                                            "test": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x3e1d93"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "active",
                                                                                                                    "raw": "'active'"
                                                                                                                }
                                                                                                            },
                                                                                                            "consequent": {
                                                                                                                "type": "BlockStatement",
                                                                                                                "body": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x3e1d93"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "update",
                                                                                                                                    "raw": "'update'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": []
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "alternate": null
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": null
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x3be2ac"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collideGroupVsGroup",
                                            "raw": "'collideGroupVsGroup'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x476cf6"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x13e706"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x6a96d5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3438a8"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1657f7"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4fa18a"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x476cf6"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x13e706"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x14fadd"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x476cf6"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getChildren",
                                                                            "raw": "'getChildren'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4562fb"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4562fb"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x14fadd"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x4562fb"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "JaorN",
                                                                            "raw": "'JaorN'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "JaorN",
                                                                            "raw": "'JaorN'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "body"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "bodies"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4562fb"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "body"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "willDrawDebug",
                                                                                            "raw": "'willDrawDebug'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "body"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "drawDebug",
                                                                                                        "raw": "'drawDebug'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "graphics"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideSpriteVsGroup",
                                                                                            "raw": "'collideSpriteVsGroup'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x14fadd"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4562fb"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x13e706"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x6a96d5"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3438a8"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1657f7"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x4fa18a"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "wrap",
                                            "raw": "'wrap'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2c82b5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3c37a7"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x2c82b5"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "body",
                                                                "raw": "'body'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "xFJMb",
                                                                            "raw": "'xFJMb'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "xFJMb",
                                                                            "raw": "'xFJMb'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "wrapObject",
                                                                                            "raw": "'wrapObject'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2c82b5"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3c37a7"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "isPaused",
                                                                                            "raw": "'isPaused'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "emit",
                                                                                            "raw": "'emit'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Events"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "PAUSE",
                                                                                                "raw": "'PAUSE'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "ThisExpression"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2c82b5"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "getChildren",
                                                                    "raw": "'getChildren'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "wrapArray",
                                                                                    "raw": "'wrapArray'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2c82b5"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "getChildren",
                                                                                            "raw": "'getChildren'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": []
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3c37a7"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Array"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "isArray",
                                                                            "raw": "'isArray'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2c82b5"
                                                                        }
                                                                    ]
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "wrapArray",
                                                                                        "raw": "'wrapArray'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2c82b5"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3c37a7"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "wrapObject",
                                                                                        "raw": "'wrapObject'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2c82b5"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3c37a7"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "wrapArray",
                                            "raw": "'wrapArray'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x483c75"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x217332"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ForStatement",
                                                        "init": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3fce20"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3fce20"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x483c75"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "length",
                                                                    "raw": "'length'"
                                                                }
                                                            }
                                                        },
                                                        "update": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                                "type": "Identifier",
                                                                "name": "_0x3fce20"
                                                            },
                                                            "prefix": false
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "wrapObject",
                                                                                "raw": "'wrapObject'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x483c75"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3fce20"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x217332"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "wrapObject",
                                            "raw": "'wrapObject'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x56bc5b"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xd0daf0"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0xd0daf0"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xd0daf0"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x56bc5b"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "x",
                                                                    "raw": "'x'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Wrap"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x56bc5b"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "x",
                                                                            "raw": "'x'"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "bounds",
                                                                                    "raw": "'bounds'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "left",
                                                                                "raw": "'left'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xd0daf0"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "bounds",
                                                                                    "raw": "'bounds'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "right",
                                                                                "raw": "'right'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xd0daf0"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x56bc5b"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "y",
                                                                    "raw": "'y'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Wrap"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x56bc5b"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "y",
                                                                            "raw": "'y'"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "bounds",
                                                                                    "raw": "'bounds'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "top",
                                                                                "raw": "'top'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xd0daf0"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "bounds",
                                                                                    "raw": "'bounds'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "bottom",
                                                                                "raw": "'bottom'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xd0daf0"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "shutdown",
                                            "raw": "'shutdown'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "tree",
                                                                        "raw": "'tree'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "clear",
                                                                    "raw": "'clear'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "staticTree",
                                                                        "raw": "'staticTree'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "clear",
                                                                    "raw": "'clear'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "bodies",
                                                                        "raw": "'bodies'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "clear",
                                                                    "raw": "'clear'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "staticBodies",
                                                                        "raw": "'staticBodies'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "clear",
                                                                    "raw": "'clear'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "colliders",
                                                                        "raw": "'colliders'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "destroy",
                                                                    "raw": "'destroy'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "removeAllListeners",
                                                                    "raw": "'removeAllListeners'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "destroy",
                                            "raw": "'destroy'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "shutdown",
                                                                    "raw": "'shutdown'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "scene",
                                                                    "raw": "'scene'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "World"
                }
            }
        }
    ],
    "sourceType": "script"
}