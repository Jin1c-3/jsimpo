{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "toString"
                    },
                    "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Object"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "prototype",
                                "raw": "'prototype'"
                            }
                        },
                        "property": {
                            "type": "Literal",
                            "value": "toString",
                            "raw": "'toString'"
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "colors"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "ansi-colors",
                                "raw": "'ansi-colors'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "called"
                    },
                    "init": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                            "type": "ArrayExpression",
                            "elements": []
                        },
                        "prefix": true
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "fns"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "complements"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "longest",
                        "raw": "'longest'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x1c9844"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x19f562"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x1c9844"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "reduce",
                                            "raw": "'reduce'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x212e03"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x6caa69"
                                                }
                                            ],
                                            "body": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "max",
                                                        "raw": "'max'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x212e03"
                                                    },
                                                    {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x19f562"
                                                        },
                                                        "consequent": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x6caa69"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x19f562"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "length",
                                                                "raw": "'length'"
                                                            }
                                                        },
                                                        "alternate": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x6caa69"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "length",
                                                                "raw": "'length'"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": true,
                                            "async": false
                                        },
                                        {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "hasColor",
                        "raw": "'hasColor'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0xf041ac"
                        }
                    ],
                    "body": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0xf041ac"
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "colors"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "hasColor",
                                    "raw": "'hasColor'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0xf041ac"
                                }
                            ]
                        }
                    },
                    "generator": false,
                    "expression": true,
                    "async": false
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "isObject"
                    },
                    "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "exports"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "isObject",
                                "raw": "'isObject'"
                            }
                        },
                        "right": {
                            "type": "ArrowFunctionExpression",
                            "id": null,
                            "params": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x530388"
                                }
                            ],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "!==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x530388"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": null,
                                                        "raw": "null"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                        "type": "UnaryExpression",
                                                        "operator": "typeof",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x530388"
                                                        },
                                                        "prefix": true
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "object",
                                                        "raw": "'object'"
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Array"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "isArray",
                                                            "raw": "'isArray'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x530388"
                                                        }
                                                    ]
                                                },
                                                "prefix": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "nativeType",
                        "raw": "'nativeType'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x1170b3"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "call",
                                                                    "raw": "'call'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1170b3"
                                                                }
                                                            ]
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "slice",
                                                            "raw": "'slice'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 8,
                                                            "raw": "0x8"
                                                        },
                                                        {
                                                            "type": "UnaryExpression",
                                                            "operator": "-",
                                                            "argument": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            },
                                                            "prefix": true
                                                        }
                                                    ]
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "toLowerCase",
                                                    "raw": "'toLowerCase'"
                                                }
                                            },
                                            "arguments": []
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "replace",
                                            "raw": "'replace'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": {},
                                            "raw": "/\\s/g",
                                            "regex": {
                                                "pattern": "\\s",
                                                "flags": "g"
                                            }
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "",
                                            "raw": "''"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "isAsyncFn",
                        "raw": "'isAsyncFn'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x35168e"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "exports"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "nativeType",
                                                "raw": "'nativeType'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x35168e"
                                            }
                                        ]
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "asyncfunction",
                                        "raw": "'asyncfunction'"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "isPrimitive",
                        "raw": "'isPrimitive'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x25ebfb"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0x25ebfb"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryExpression",
                                            "operator": "!==",
                                            "left": {
                                                "type": "UnaryExpression",
                                                "operator": "typeof",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "_0x25ebfb"
                                                },
                                                "prefix": true
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "object",
                                                "raw": "'object'"
                                            }
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_0x25ebfb"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "function",
                                            "raw": "'function'"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "resolve",
                        "raw": "'resolve'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0xb02558"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x5ea403"
                        },
                        {
                            "type": "RestElement",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x103ea3"
                            }
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x5ea403"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "function",
                                        "raw": "'function'"
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x5ea403"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "call",
                                                        "raw": "'call'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0xb02558"
                                                    },
                                                    {
                                                        "type": "SpreadElement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x103ea3"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x5ea403"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "scrollDown",
                        "raw": "'scrollDown'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x19eb2e"
                            },
                            "right": {
                                "type": "ArrayExpression",
                                "elements": []
                            }
                        }
                    ],
                    "body": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "SpreadElement",
                                "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x19eb2e"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "slice",
                                            "raw": "'slice'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 1,
                                            "raw": "0x1"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x19eb2e"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": 0,
                                    "raw": "0x0"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": true,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "scrollUp",
                        "raw": "'scrollUp'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x3235e2"
                            },
                            "right": {
                                "type": "ArrayExpression",
                                "elements": []
                            }
                        }
                    ],
                    "body": {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x3235e2"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pop",
                                        "raw": "'pop'"
                                    }
                                },
                                "arguments": []
                            },
                            {
                                "type": "SpreadElement",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x3235e2"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": true,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "reorder",
                        "raw": "'reorder'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x26b02"
                            },
                            "right": {
                                "type": "ArrayExpression",
                                "elements": []
                            }
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x134fd6"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x26b02"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "slice",
                                                    "raw": "'slice'"
                                                }
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x134fd6"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "sort",
                                            "raw": "'sort'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2d6790"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x56bb41"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "jjHBn",
                                                                "raw": "'jjHBn'"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "JVlpA",
                                                                "raw": "'JVlpA'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2d6790"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "index",
                                                                                "raw": "'index'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x56bb41"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "index",
                                                                                "raw": "'index'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                            "type": "Literal",
                                                                            "value": 1,
                                                                            "raw": "0x1"
                                                                        }
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2d6790"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "index",
                                                                                "raw": "'index'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x56bb41"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "index",
                                                                                "raw": "'index'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "-",
                                                                            "argument": {
                                                                                "type": "Literal",
                                                                                "value": 1,
                                                                                "raw": "0x1"
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "options"
                                                                        },
                                                                        "right": {
                                                                            "type": "ObjectExpression",
                                                                            "properties": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "key": {
                                                                                        "type": "Literal",
                                                                                        "value": "width",
                                                                                        "raw": "'width'"
                                                                                    },
                                                                                    "computed": false,
                                                                                    "value": {
                                                                                        "type": "Identifier",
                                                                                        "name": "options"
                                                                                    },
                                                                                    "kind": "init",
                                                                                    "method": false,
                                                                                    "shorthand": false
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x134fd6"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "swap",
                        "raw": "'swap'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x5e91ae"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x25887c"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x3a22f0"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x2c28e5"
                                        },
                                        "init": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5e91ae"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "length",
                                                "raw": "'length'"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x50bd09"
                                        },
                                        "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x3a22f0"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x2c28e5"
                                                }
                                            },
                                            "consequent": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            },
                                            "alternate": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x3a22f0"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 0,
                                                        "raw": "0x0"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_0x2c28e5"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "0x1"
                                                    }
                                                },
                                                "alternate": {
                                                    "type": "Identifier",
                                                    "name": "_0x3a22f0"
                                                }
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x2c77ec"
                                        },
                                        "init": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5e91ae"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "_0x25887c"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x5e91ae"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_0x25887c"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x5e91ae"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_0x50bd09"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x5e91ae"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_0x50bd09"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x2c77ec"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "width",
                        "raw": "'width'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x823319"
                        },
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x4b2709"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 80,
                                "raw": "0x50"
                            }
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x5eae96"
                                        },
                                        "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x823319"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x823319"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "columns",
                                                        "raw": "'columns'"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x823319"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "columns",
                                                    "raw": "'columns'"
                                                }
                                            },
                                            "alternate": {
                                                "type": "Identifier",
                                                "name": "_0x4b2709"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x823319"
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x823319"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "getWindowSize",
                                                    "raw": "'getWindowSize'"
                                                }
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "function",
                                            "raw": "'function'"
                                        }
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "NllEP",
                                                    "raw": "'NllEP'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "NllEP",
                                                    "raw": "'NllEP'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5eae96"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x823319"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getWindowSize",
                                                                            "raw": "'getWindowSize'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ForOfStatement",
                                                        "left": {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4dd292"
                                                                    },
                                                                    "init": null
                                                                }
                                                            ],
                                                            "kind": "let"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "args"
                                                        },
                                                        "body": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "exports"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "mixin",
                                                                        "raw": "'mixin'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2f7b81"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4dd292"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x2f7b81"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "process"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "platform",
                                            "raw": "'platform'"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "win32",
                                        "raw": "'win32'"
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "WgqgD",
                                                    "raw": "'WgqgD'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "dqcCX",
                                                    "raw": "'dqcCX'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Reflect"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "defineProperty",
                                                                    "raw": "'defineProperty'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "target"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "desc"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5eae96"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x5eae96"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "height",
                        "raw": "'height'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x43dc95"
                        },
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x4c6104"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 20,
                                "raw": "0x14"
                            }
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x2a2a12"
                                        },
                                        "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x43dc95"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x43dc95"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "rows",
                                                        "raw": "'rows'"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x43dc95"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "rows",
                                                    "raw": "'rows'"
                                                }
                                            },
                                            "alternate": {
                                                "type": "Identifier",
                                                "name": "_0x4c6104"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x43dc95"
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x43dc95"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "getWindowSize",
                                                    "raw": "'getWindowSize'"
                                                }
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "function",
                                            "raw": "'function'"
                                        }
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x2a2a12"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x43dc95"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "getWindowSize",
                                                                "raw": "'getWindowSize'"
                                                            }
                                                        },
                                                        "arguments": []
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": 1,
                                                        "raw": "0x1"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x2a2a12"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "wordWrap",
                        "raw": "'wordWrap'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x429523"
                        },
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x21d23f"
                            },
                            "right": {
                                "type": "ObjectExpression",
                                "properties": []
                            }
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x429523"
                                    },
                                    "prefix": true
                                },
                                "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x429523"
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x21d23f"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "number",
                                        "raw": "'number'"
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "PtUIW",
                                                    "raw": "'PtUIW'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "zbVer",
                                                    "raw": "'zbVer'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "columns"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "stream"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getWindowSize",
                                                                            "raw": "'getWindowSize'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x21d23f"
                                                            },
                                                            "right": {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "width",
                                                                            "raw": "'width'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x21d23f"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "ObjectPattern",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "indent"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "AssignmentPattern",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "indent"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                        }
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": true
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "newline"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "AssignmentPattern",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "newline"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "\n",
                                                                "raw": "'\\x0a'"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "indent"
                                                            }
                                                        }
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": true
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "width"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "AssignmentPattern",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "width"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 80,
                                                            "raw": "0x50"
                                                        }
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": true
                                                }
                                            ]
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "_0x21d23f"
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x4857aa"
                                        },
                                        "init": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "newline"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "indent"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "match",
                                                        "raw": "'match'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": {},
                                                        "raw": "/[^\\S\\n]/g",
                                                        "regex": {
                                                            "pattern": "[^\\S\\n]",
                                                            "flags": "g"
                                                        }
                                                    }
                                                ]
                                            },
                                            "right": {
                                                "type": "ArrayExpression",
                                                "elements": []
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "-=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "width"
                                    },
                                    "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x4857aa"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "length",
                                            "raw": "'length'"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x54c898"
                                        },
                                        "init": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": ".{1,",
                                                    "raw": "'.{1,'"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "width"
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": "}([\\s\\u200B]+|$)|[^\\s\\u200B]+?([\\s\\u200B]+|$)",
                                                "raw": "'}([\\x5cs\\x5cu200B]+|$)|[^\\x5cs\\x5cu200B]+?([\\x5cs\\x5cu200B]+|$)'"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x38b715"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x429523"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "trim",
                                                    "raw": "'trim'"
                                                }
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x293b64"
                                        },
                                        "init": {
                                            "type": "NewExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "RegExp"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x54c898"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "g",
                                                    "raw": "'g'"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x5a1027"
                                        },
                                        "init": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x38b715"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "match",
                                                        "raw": "'match'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x293b64"
                                                    }
                                                ]
                                            },
                                            "right": {
                                                "type": "ArrayExpression",
                                                "elements": []
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x5a1027"
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5a1027"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "map",
                                                "raw": "'map'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "ArrowFunctionExpression",
                                                "id": null,
                                                "params": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x175c29"
                                                    }
                                                ],
                                                "body": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x175c29"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "replace",
                                                            "raw": "'replace'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": {},
                                                            "raw": "/\\n$/",
                                                            "regex": {
                                                                "pattern": "\\n$",
                                                                "flags": ""
                                                            }
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "",
                                                            "raw": "''"
                                                        }
                                                    ]
                                                },
                                                "generator": false,
                                                "expression": true,
                                                "async": false
                                            }
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x21d23f"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "padEnd",
                                        "raw": "'padEnd'"
                                    }
                                },
                                "consequent": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x5a1027"
                                        },
                                        "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x5a1027"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "map",
                                                    "raw": "'map'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x2bbdfc"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x2bbdfc"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "padEnd",
                                                                "raw": "'padEnd'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "width"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": " ",
                                                                "raw": "'\\x20'"
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x21d23f"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "padStart",
                                        "raw": "'padStart'"
                                    }
                                },
                                "consequent": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x5a1027"
                                        },
                                        "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x5a1027"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "map",
                                                    "raw": "'map'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4bc417"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x4bc417"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "padStart",
                                                                "raw": "'padStart'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "width"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": " ",
                                                                "raw": "'\\x20'"
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "indent"
                                    },
                                    "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5a1027"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "join",
                                                "raw": "'join'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "newline"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "unmute",
                        "raw": "'unmute'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x310cd2"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x59b047"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x310cd2"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "stack",
                                                        "raw": "'stack'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "find",
                                                    "raw": "'find'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x3874bf"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "colors"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "keys",
                                                                        "raw": "'keys'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "color",
                                                                    "raw": "'color'"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "includes",
                                                                "raw": "'includes'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x3874bf"
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "Identifier",
                                    "name": "_0x59b047"
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "colors"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "_0x59b047"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0xbd13c6"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x310cd2"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "stack",
                                                        "raw": "'stack'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "find",
                                                    "raw": "'find'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x5d6895"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5d6895"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "slice",
                                                                    "raw": "'slice'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 2,
                                                                    "raw": "0x2"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "bg",
                                                            "raw": "'bg'"
                                                        }
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "Identifier",
                                    "name": "_0xbd13c6"
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "colors"
                                                },
                                                "property": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x59b047"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "slice",
                                                            "raw": "'slice'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "0x2"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "ArrowFunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x14aca9"
                                        }
                                    ],
                                    "body": {
                                        "type": "Identifier",
                                        "name": "_0x14aca9"
                                    },
                                    "generator": false,
                                    "expression": true,
                                    "async": false
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "pascal",
                        "raw": "'pascal'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x31bce3"
                        }
                    ],
                    "body": {
                        "type": "ConditionalExpression",
                        "test": {
                            "type": "Identifier",
                            "name": "_0x31bce3"
                        },
                        "consequent": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x31bce3"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        }
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "toUpperCase",
                                        "raw": "'toUpperCase'"
                                    }
                                },
                                "arguments": []
                            },
                            "right": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x31bce3"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "slice",
                                        "raw": "'slice'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "0x1"
                                    }
                                ]
                            }
                        },
                        "alternate": {
                            "type": "Literal",
                            "value": "",
                            "raw": "''"
                        }
                    },
                    "generator": false,
                    "expression": true,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "inverse",
                        "raw": "'inverse'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x56b78f"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "LogicalExpression",
                                    "operator": "||",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x56b78f"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x56b78f"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "stack",
                                                "raw": "'stack'"
                                            }
                                        },
                                        "prefix": true
                                    }
                                },
                                "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x56b78f"
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x12788b"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x56b78f"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "stack",
                                                        "raw": "'stack'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "find",
                                                    "raw": "'find'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0xbf60e6"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "colors"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "keys",
                                                                        "raw": "'keys'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "color",
                                                                    "raw": "'color'"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "includes",
                                                                "raw": "'includes'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0xbf60e6"
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "Identifier",
                                    "name": "_0x12788b"
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "RmTbq",
                                                    "raw": "'RmTbq'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "RmTbq",
                                                    "raw": "'RmTbq'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5b4767"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "colors"
                                                                    },
                                                                    "property": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "bg",
                                                                            "raw": "'bg'"
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "exports"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "pascal",
                                                                                    "raw": "'pascal'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x12788b"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "Identifier",
                                                                "name": "_0x5b4767"
                                                            },
                                                            "consequent": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5b4767"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "black",
                                                                    "raw": "'black'"
                                                                }
                                                            },
                                                            "alternate": {
                                                                "type": "Identifier",
                                                                "name": "_0x56b78f"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2e7e96"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Object"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getOwnPropertyDescriptor",
                                                                            "raw": "'getOwnPropertyDescriptor'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "target"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "key"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "isObject"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2e7e96"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "value",
                                                                        "raw": "'value'"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "target"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "key"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "exports"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "merge",
                                                                                    "raw": "'merge'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "ObjectExpression",
                                                                                    "properties": []
                                                                                },
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "target"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "key"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "b"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "key"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Reflect"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "defineProperty",
                                                                                "raw": "'defineProperty'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "target"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "key"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "desc"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x547889"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x56b78f"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "stack",
                                                        "raw": "'stack'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "find",
                                                    "raw": "'find'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x2ce282"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2ce282"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "slice",
                                                                    "raw": "'slice'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 2,
                                                                    "raw": "0x2"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "bg",
                                                            "raw": "'bg'"
                                                        }
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "Identifier",
                                    "name": "_0x547889"
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "colors"
                                                    },
                                                    "property": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x547889"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "slice",
                                                                        "raw": "'slice'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 2,
                                                                        "raw": "0x2"
                                                                    }
                                                                ]
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "toLowerCase",
                                                                "raw": "'toLowerCase'"
                                                            }
                                                        },
                                                        "arguments": []
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x56b78f"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "colors"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "none",
                                        "raw": "'none'"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "complement",
                        "raw": "'complement'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x31196e"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "LogicalExpression",
                                    "operator": "||",
                                    "left": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x31196e"
                                        },
                                        "prefix": true
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x31196e"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "stack",
                                                "raw": "'stack'"
                                            }
                                        },
                                        "prefix": true
                                    }
                                },
                                "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x31196e"
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x529e57"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x31196e"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "stack",
                                                        "raw": "'stack'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "find",
                                                    "raw": "'find'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x462f59"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "colors"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "keys",
                                                                        "raw": "'keys'"
                                                                    }
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "color",
                                                                    "raw": "'color'"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "includes",
                                                                "raw": "'includes'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x462f59"
                                                            }
                                                        ]
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x584e9f"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x31196e"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "stack",
                                                        "raw": "'stack'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "find",
                                                    "raw": "'find'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "ArrowFunctionExpression",
                                                    "id": null,
                                                    "params": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x3367fc"
                                                        }
                                                    ],
                                                    "body": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3367fc"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "slice",
                                                                    "raw": "'slice'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 2,
                                                                    "raw": "0x2"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": "bg",
                                                            "raw": "'bg'"
                                                        }
                                                    },
                                                    "generator": false,
                                                    "expression": true,
                                                    "async": false
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x529e57"
                                    },
                                    "right": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x584e9f"
                                        },
                                        "prefix": true
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "PYDdR",
                                                    "raw": "'PYDdR'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "CqfTr",
                                                    "raw": "'CqfTr'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "colors"
                                                            },
                                                            "property": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "complements"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x529e57"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x529e57"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "a"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "index",
                                                                    "raw": "'index'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "b"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "index",
                                                                    "raw": "'index'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "a"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "index",
                                                                    "raw": "'index'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "b"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "index",
                                                                    "raw": "'index'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                    "type": "Literal",
                                                                    "value": 1,
                                                                    "raw": "0x1"
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "Identifier",
                                    "name": "_0x584e9f"
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x3a3e97"
                                                    },
                                                    "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x584e9f"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "slice",
                                                                        "raw": "'slice'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 2,
                                                                        "raw": "0x2"
                                                                    }
                                                                ]
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "toLowerCase",
                                                                "raw": "'toLowerCase'"
                                                            }
                                                        },
                                                        "arguments": []
                                                    }
                                                }
                                            ],
                                            "kind": "let"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x5e66e3"
                                                    },
                                                    "init": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "complements"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_0x3a3e97"
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "let"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "_0x5e66e3"
                                                },
                                                "prefix": true
                                            },
                                            "consequent": {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "_0x31196e"
                                                }
                                            },
                                            "alternate": null
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "colors"
                                                    },
                                                    "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "Literal",
                                                            "value": "bg",
                                                            "raw": "'bg'"
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "exports"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "pascal",
                                                                    "raw": "'pascal'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5e66e3"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x31196e"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "colors"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "none",
                                        "raw": "'none'"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "meridiem",
                        "raw": "'meridiem'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x173266"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x452be7"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x173266"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "getHours",
                                                    "raw": "'getHours'"
                                                }
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x546123"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x173266"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "getMinutes",
                                                    "raw": "'getMinutes'"
                                                }
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x4cb9bc"
                                        },
                                        "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x452be7"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 12,
                                                    "raw": "0xc"
                                                }
                                            },
                                            "consequent": {
                                                "type": "Literal",
                                                "value": "pm",
                                                "raw": "'pm'"
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": "am",
                                                "raw": "'am'"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x452be7"
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "%",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x452be7"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 12,
                                            "raw": "0xc"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x2ffde9"
                                        },
                                        "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x452be7"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0x0"
                                                }
                                            },
                                            "consequent": {
                                                "type": "Literal",
                                                "value": 12,
                                                "raw": "0xc"
                                            },
                                            "alternate": {
                                                "type": "Identifier",
                                                "name": "_0x452be7"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x1f5207"
                                        },
                                        "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x546123"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 10,
                                                    "raw": "0xa"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "0",
                                                    "raw": "'0'"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x546123"
                                                }
                                            },
                                            "alternate": {
                                                "type": "Identifier",
                                                "name": "_0x546123"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x47848d"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "KBQCM",
                                                        "raw": "'KBQCM'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x2ffde9"
                                                    },
                                                    {
                                                        "type": "Literal",
                                                        "value": ":",
                                                        "raw": "':'"
                                                    }
                                                ]
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x1f5207"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": " ",
                                            "raw": "'\\x20'"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x4cb9bc"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "set",
                        "raw": "'set'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x50c7a6"
                            },
                            "right": {
                                "type": "ObjectExpression",
                                "properties": []
                            }
                        },
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x1b1523"
                            },
                            "right": {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x952a02"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x1b1523"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "split",
                                                    "raw": "'split'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": ".",
                                                    "raw": "'.'"
                                                }
                                            ]
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "reduce",
                                            "raw": "'reduce'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x440ece"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x508ffc"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x37b483"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1a0d93"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "CZkxc",
                                                                "raw": "'CZkxc'"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "HzoKa",
                                                                "raw": "'HzoKa'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x47c57e"
                                                                            },
                                                                            "init": {
                                                                                "type": "ConditionalExpression",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": ">",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "-",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1a0d93"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "0x1"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x37b483"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x440ece"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x508ffc"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "ObjectExpression",
                                                                                        "properties": []
                                                                                    }
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x952a02"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "let"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "exports"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "isObject",
                                                                                        "raw": "'isObject'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x47c57e"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x37b483"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1a0d93"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "length",
                                                                                        "raw": "'length'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1,
                                                                                    "raw": "0x1"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x47c57e"
                                                                            },
                                                                            "right": {
                                                                                "type": "ObjectExpression",
                                                                                "properties": []
                                                                            }
                                                                        }
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x440ece"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x508ffc"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x47c57e"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2e3a5d"
                                                                            },
                                                                            "init": {
                                                                                "type": "ConditionalExpression",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": ">",
                                                                                    "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "-",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1a0d93"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "length",
                                                                                                "raw": "'length'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 1,
                                                                                            "raw": "0x1"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x37b483"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x440ece"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x508ffc"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "ObjectExpression",
                                                                                        "properties": []
                                                                                    }
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x952a02"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "let"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "exports"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "isObject",
                                                                                        "raw": "'isObject'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2e3a5d"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x37b483"
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1a0d93"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "length",
                                                                                        "raw": "'length'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1,
                                                                                    "raw": "0x1"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2e3a5d"
                                                                            },
                                                                            "right": {
                                                                                "type": "ObjectExpression",
                                                                                "properties": []
                                                                            }
                                                                        }
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x440ece"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x508ffc"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2e3a5d"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x50c7a6"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "get",
                        "raw": "'get'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x7a4e42"
                            },
                            "right": {
                                "type": "ObjectExpression",
                                "properties": []
                            }
                        },
                        {
                            "type": "AssignmentPattern",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x2fcfc5"
                            },
                            "right": {
                                "type": "Literal",
                                "value": "",
                                "raw": "''"
                            }
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x301e8d"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x5d63e5"
                                        },
                                        "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x7a4e42"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "_0x2fcfc5"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                }
                                            },
                                            "consequent": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x2fcfc5"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "split",
                                                                "raw": "'split'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": ".",
                                                                "raw": "'.'"
                                                            }
                                                        ]
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "reduce",
                                                        "raw": "'reduce'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "ArrowFunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x69582c"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x4686b0"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x69582c"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x69582c"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4686b0"
                                                                }
                                                            }
                                                        },
                                                        "generator": false,
                                                        "expression": true,
                                                        "async": false
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x7a4e42"
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x7a4e42"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "_0x2fcfc5"
                                                }
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x5d63e5"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": null,
                                            "raw": "null"
                                        }
                                    },
                                    "consequent": {
                                        "type": "Identifier",
                                        "name": "_0x301e8d"
                                    },
                                    "alternate": {
                                        "type": "Identifier",
                                        "name": "_0x5d63e5"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "mixin",
                        "raw": "'mixin'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x395249"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x19809c"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "isObject"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x395249"
                                            }
                                        ]
                                    },
                                    "prefix": true
                                },
                                "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x19809c"
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "isObject"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x19809c"
                                            }
                                        ]
                                    },
                                    "prefix": true
                                },
                                "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0x395249"
                                    }
                                },
                                "alternate": null
                            },
                            {
                                "type": "ForOfStatement",
                                "left": {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x4792bd"
                                            },
                                            "init": null
                                        }
                                    ],
                                    "kind": "let"
                                },
                                "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "keys",
                                            "raw": "'keys'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x19809c"
                                        }
                                    ]
                                },
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "ZJPxn",
                                                    "raw": "'ZJPxn'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "ZJPxn",
                                                    "raw": "'ZJPxn'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x32785c"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Object"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getOwnPropertyDescriptor",
                                                                            "raw": "'getOwnPropertyDescriptor'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x19809c"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4792bd"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x32785c"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "hasOwnProperty",
                                                                    "raw": "'hasOwnProperty'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "value",
                                                                    "raw": "'value'"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x395249"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "hasOwnProperty",
                                                                                    "raw": "'hasOwnProperty'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x4792bd"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "isObject"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x32785c"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "value",
                                                                                        "raw": "'value'"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1a268c"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Object"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "getOwnPropertyDescriptor",
                                                                                                    "raw": "'getOwnPropertyDescriptor'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x395249"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4792bd"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "let"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "isObject"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1a268c"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "value",
                                                                                                "raw": "'value'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x395249"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4792bd"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "exports"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "merge",
                                                                                                            "raw": "'merge'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "ObjectExpression",
                                                                                                            "properties": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x395249"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x4792bd"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x19809c"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x4792bd"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "Reflect"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "defineProperty",
                                                                                                        "raw": "'defineProperty'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x395249"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4792bd"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x32785c"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "!==",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "GtRgF",
                                                                                        "raw": "'GtRgF'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "GtRgF",
                                                                                        "raw": "'GtRgF'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "||",
                                                                                                "left": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "color"
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "color"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "stack",
                                                                                                            "raw": "'stack'"
                                                                                                        }
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "ReturnStatement",
                                                                                                "argument": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "color"
                                                                                                }
                                                                                            },
                                                                                            "alternate": null
                                                                                        },
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x36d743"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "color"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "stack",
                                                                                                                    "raw": "'stack'"
                                                                                                                }
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "find",
                                                                                                                "raw": "'find'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "ArrowFunctionExpression",
                                                                                                                "id": null,
                                                                                                                "params": [
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x1cf57b"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "body": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "colors"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "keys",
                                                                                                                                    "raw": "'keys'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "color",
                                                                                                                                "raw": "'color'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "includes",
                                                                                                                            "raw": "'includes'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_0x1cf57b"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "generator": false,
                                                                                                                "expression": true,
                                                                                                                "async": false
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "let"
                                                                                        },
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x42c8c7"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "color"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "stack",
                                                                                                                    "raw": "'stack'"
                                                                                                                }
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "find",
                                                                                                                "raw": "'find'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "ArrowFunctionExpression",
                                                                                                                "id": null,
                                                                                                                "params": [
                                                                                                                    {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x585c7e"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "body": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "===",
                                                                                                                    "left": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x585c7e"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "slice",
                                                                                                                                "raw": "'slice'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": 0,
                                                                                                                                "raw": "0x0"
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": 2,
                                                                                                                                "raw": "0x2"
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "bg",
                                                                                                                        "raw": "'bg'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "generator": false,
                                                                                                                "expression": true,
                                                                                                                "async": false
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "let"
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "&&",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x36d743"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x42c8c7"
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ReturnStatement",
                                                                                                        "argument": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "colors"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "LogicalExpression",
                                                                                                                "operator": "||",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "complements"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x36d743"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x36d743"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x42c8c7"
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "VariableDeclaration",
                                                                                                        "declarations": [
                                                                                                            {
                                                                                                                "type": "VariableDeclarator",
                                                                                                                "id": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x32f9a7"
                                                                                                                },
                                                                                                                "init": {
                                                                                                                    "type": "CallExpression",
                                                                                                                    "callee": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "_0x42c8c7"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "slice",
                                                                                                                                    "raw": "'slice'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": 2,
                                                                                                                                    "raw": "0x2"
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "toLowerCase",
                                                                                                                            "raw": "'toLowerCase'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "arguments": []
                                                                                                                }
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "let"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "VariableDeclaration",
                                                                                                        "declarations": [
                                                                                                            {
                                                                                                                "type": "VariableDeclarator",
                                                                                                                "id": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x157c07"
                                                                                                                },
                                                                                                                "init": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "complements"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0x32f9a7"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "let"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "IfStatement",
                                                                                                        "test": {
                                                                                                            "type": "UnaryExpression",
                                                                                                            "operator": "!",
                                                                                                            "argument": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x157c07"
                                                                                                            },
                                                                                                            "prefix": true
                                                                                                        },
                                                                                                        "consequent": {
                                                                                                            "type": "ReturnStatement",
                                                                                                            "argument": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "color"
                                                                                                            }
                                                                                                        },
                                                                                                        "alternate": null
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "ReturnStatement",
                                                                                                        "argument": {
                                                                                                            "type": "LogicalExpression",
                                                                                                            "operator": "||",
                                                                                                            "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "colors"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "+",
                                                                                                                    "left": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "bg",
                                                                                                                        "raw": "'bg'"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "exports"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "pascal",
                                                                                                                                "raw": "'pascal'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": [
                                                                                                                            {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_0x157c07"
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "color"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        },
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "colors"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "none",
                                                                                                    "raw": "'none'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "Reflect"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "defineProperty",
                                                                                                        "raw": "'defineProperty'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x395249"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x4792bd"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x32785c"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Reflect"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "defineProperty",
                                                                                "raw": "'defineProperty'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x395249"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4792bd"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x32785c"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2e5f7e"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "color"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "stack",
                                                                                "raw": "'stack'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "find",
                                                                            "raw": "'find'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ArrowFunctionExpression",
                                                                            "id": null,
                                                                            "params": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1127ea"
                                                                                }
                                                                            ],
                                                                            "body": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "colors"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "keys",
                                                                                                "raw": "'keys'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "color",
                                                                                            "raw": "'color'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "includes",
                                                                                        "raw": "'includes'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1127ea"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "generator": false,
                                                                            "expression": true,
                                                                            "async": false
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x2e5f7e"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "colors"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2e5f7e"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3d0f8b"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "color"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "stack",
                                                                                "raw": "'stack'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "find",
                                                                            "raw": "'find'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "ArrowFunctionExpression",
                                                                            "id": null,
                                                                            "params": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3aead3"
                                                                                }
                                                                            ],
                                                                            "body": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "===",
                                                                                "left": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3aead3"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "slice",
                                                                                            "raw": "'slice'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": 2,
                                                                                            "raw": "0x2"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "bg",
                                                                                    "raw": "'bg'"
                                                                                }
                                                                            },
                                                                            "generator": false,
                                                                            "expression": true,
                                                                            "async": false
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "let"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x3d0f8b"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "colors"
                                                                        },
                                                                        "property": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x2e5f7e"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "slice",
                                                                                    "raw": "'slice'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": 2,
                                                                                    "raw": "0x2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ArrowFunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x37d6d7"
                                                                }
                                                            ],
                                                            "body": {
                                                                "type": "Identifier",
                                                                "name": "_0x37d6d7"
                                                            },
                                                            "generator": false,
                                                            "expression": true,
                                                            "async": false
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x395249"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "merge",
                        "raw": "'merge'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "RestElement",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x5f5b1d"
                            }
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x2c89db"
                                        },
                                        "init": {
                                            "type": "ObjectExpression",
                                            "properties": []
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ForOfStatement",
                                "left": {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x4443df"
                                            },
                                            "init": null
                                        }
                                    ],
                                    "kind": "let"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0x5f5b1d"
                                },
                                "body": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "exports"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "mixin",
                                                "raw": "'mixin'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2c89db"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4443df"
                                            }
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "Identifier",
                                    "name": "_0x2c89db"
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "mixinEmitter",
                        "raw": "'mixinEmitter'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x1a00e4"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x133ea3"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x1ad918"
                                        },
                                        "init": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x133ea3"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "constructor",
                                                    "raw": "'constructor'"
                                                }
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "prototype",
                                                "raw": "'prototype'"
                                            }
                                        }
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ForOfStatement",
                                "left": {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x23d826"
                                            },
                                            "init": null
                                        }
                                    ],
                                    "kind": "let"
                                },
                                "right": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "keys",
                                            "raw": "'keys'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x1ad918"
                                        }
                                    ]
                                },
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                                {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                        "type": "Identifier",
                                                        "name": "_0x36dc68"
                                                    },
                                                    "init": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x1ad918"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "_0x23d826"
                                                        }
                                                    }
                                                }
                                            ],
                                            "kind": "let"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x36dc68"
                                                    },
                                                    "prefix": true
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "function",
                                                    "raw": "'function'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "exports"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "define",
                                                                    "raw": "'define'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1a00e4"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x23d826"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x36dc68"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bind",
                                                                            "raw": "'bind'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x133ea3"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "Uccde",
                                                                "raw": "'Uccde'"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "Uccde",
                                                                "raw": "'Uccde'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "colors"
                                                                            },
                                                                            "property": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "bg"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "slice",
                                                                                                "raw": "'slice'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": 2,
                                                                                                "raw": "0x2"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "toLowerCase",
                                                                                        "raw": "'toLowerCase'"
                                                                                    }
                                                                                },
                                                                                "arguments": []
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "color"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "exports"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "define",
                                                                                "raw": "'define'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1a00e4"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x23d826"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x36dc68"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "onExit",
                        "raw": "'onExit'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x3094a2"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x3ef816"
                                        },
                                        "init": {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5085e0"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3fb515"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "called"
                                                        },
                                                        "consequent": {
                                                            "type": "ReturnStatement",
                                                            "argument": null
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "called"
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "fns"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "forEach",
                                                                    "raw": "'forEach'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ArrowFunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0xb6df6d"
                                                                        }
                                                                    ],
                                                                    "body": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xb6df6d"
                                                                        },
                                                                        "arguments": []
                                                                    },
                                                                    "generator": false,
                                                                    "expression": true,
                                                                    "async": false
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5085e0"
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "process"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "exit",
                                                                                "raw": "'exit'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": 128,
                                                                                    "raw": "0x80"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x3fb515"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    }
                                ],
                                "kind": "const"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "fns"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "length",
                                            "raw": "'length'"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "SBVhQ",
                                                    "raw": "'SBVhQ'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "SBVhQ",
                                                    "raw": "'SBVhQ'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "process"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "once",
                                                                    "raw": "'once'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "SIGTERM",
                                                                    "raw": "'SIGTERM'"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3ef816"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bind",
                                                                            "raw": "'bind'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        },
                                                                        {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 15,
                                                                            "raw": "0xf"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "process"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "once",
                                                                    "raw": "'once'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "SIGINT",
                                                                    "raw": "'SIGINT'"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3ef816"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bind",
                                                                            "raw": "'bind'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        },
                                                                        {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 2,
                                                                            "raw": "0x2"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "process"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "once",
                                                                    "raw": "'once'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "exit",
                                                                    "raw": "'exit'"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3ef816"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "columns"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 1,
                                                                "raw": "0x1"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "fns"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "push",
                                            "raw": "'push'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x3094a2"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "define",
                        "raw": "'define'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x345f75"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x4e79ec"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x3b30c6"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Reflect"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "defineProperty",
                                            "raw": "'defineProperty'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x345f75"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x4e79ec"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "value",
                                                        "raw": "'value'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "_0x3b30c6"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "defineExport",
                        "raw": "'defineExport'"
                    }
                },
                "right": {
                    "type": "ArrowFunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x54b97a"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x4a5ded"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0xb9759e"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x486927"
                                        },
                                        "init": null
                                    }
                                ],
                                "kind": "let"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Reflect"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "defineProperty",
                                            "raw": "'defineProperty'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x54b97a"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x4a5ded"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "enumerable",
                                                        "raw": "'enumerable'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "prefix": true
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "configurable",
                                                        "raw": "'configurable'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "prefix": true
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "set",
                                                        "raw": "'set'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x352888"
                                                            }
                                                        ],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "qtzSP",
                                                                            "raw": "'qtzSP'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "RKRpH",
                                                                            "raw": "'RKRpH'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x486927"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x352888"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "colors"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "||",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "complements"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "name"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "name"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": true,
                                                    "shorthand": false
                                                },
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "uBucW",
                                                                            "raw": "'uBucW'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "Doaqr",
                                                                            "raw": "'Doaqr'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x43c7ee"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "bg"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "slice",
                                                                                                            "raw": "'slice'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "0x2"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "toLowerCase",
                                                                                                    "raw": "'toLowerCase'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": []
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "let"
                                                                            },
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1df73f"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "complements"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x43c7ee"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "let"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1df73f"
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "Identifier",
                                                                                        "name": "color"
                                                                                    }
                                                                                },
                                                                                "alternate": null
                                                                            },
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "colors"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                                "type": "Literal",
                                                                                                "value": "bg",
                                                                                                "raw": "'bg'"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "exports"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "pascal",
                                                                                                        "raw": "'pascal'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x1df73f"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "color"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x486927"
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x486927"
                                                                                        },
                                                                                        "arguments": []
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xb9759e"
                                                                                        },
                                                                                        "arguments": []
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": true,
                                                    "shorthand": false
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        }
    ],
    "sourceType": "script"
}