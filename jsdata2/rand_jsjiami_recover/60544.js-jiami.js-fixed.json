{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "testSeal"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x4961ac"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Literal",
                                                    "value": "2|5|6|8|0|4|1|7|3",
                                                    "raw": "'2|5|6|8|0|4|1|7|3'"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "split",
                                                    "raw": "'split'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": "|",
                                                    "raw": "'|'"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x1780dc"
                                        },
                                        "init": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "WhileStatement",
                                "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "SwitchStatement",
                                            "discriminant": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x4961ac"
                                                },
                                                "property": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x1780dc"
                                                    },
                                                    "prefix": false
                                                }
                                            },
                                            "cases": [
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "0",
                                                        "raw": "'0'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertTrue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Object"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "isSealed",
                                                                                "raw": "'isSealed'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x78a7ee"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "1",
                                                        "raw": "'1'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertEquals"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 123,
                                                                        "raw": "0x7b"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x195b3d"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "value",
                                                                            "raw": "'value'"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "2",
                                                        "raw": "'2'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x78a7ee"
                                                                    },
                                                                    "init": {
                                                                        "type": "Identifier",
                                                                        "name": "arguments"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "3",
                                                        "raw": "'3'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertTrue"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x195b3d"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "writable",
                                                                            "raw": "'writable'"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "4",
                                                        "raw": "'4'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x195b3d"
                                                                    },
                                                                    "init": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Object"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "getOwnPropertyDescriptor",
                                                                                "raw": "'getOwnPropertyDescriptor'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x78a7ee"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1a947c"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "5",
                                                        "raw": "'5'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1a947c"
                                                                    },
                                                                    "init": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Symbol"
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "6",
                                                        "raw": "'6'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x78a7ee"
                                                                    },
                                                                    "property": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1a947c"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 123,
                                                                    "raw": "0x7b"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "7",
                                                        "raw": "'7'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertFalse"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x195b3d"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "configurable",
                                                                            "raw": "'configurable'"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "8",
                                                        "raw": "'8'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Object"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "seal",
                                                                        "raw": "'seal'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x78a7ee"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "BreakStatement",
                                            "label": null
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                },
                "arguments": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "testFreeze"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x11076e"
                                        },
                                        "init": {
                                            "type": "Identifier",
                                            "name": "arguments"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x47b23e"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "Symbol"
                                            },
                                            "arguments": []
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x11076e"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "_0x47b23e"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 123,
                                        "raw": "0x7b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "freeze",
                                            "raw": "'freeze'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x11076e"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "assertTrue"
                                    },
                                    "arguments": [
                                        {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Object"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "isFrozen",
                                                    "raw": "'isFrozen'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x11076e"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x133262"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "Object"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "getOwnPropertyDescriptor",
                                                    "raw": "'getOwnPropertyDescriptor'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x11076e"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x47b23e"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "assertEquals"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": 123,
                                            "raw": "0x7b"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x133262"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "value",
                                                "raw": "'value'"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "assertFalse"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x133262"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "configurable",
                                                "raw": "'configurable'"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "assertFalse"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x133262"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "writable",
                                                "raw": "'writable'"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                },
                "arguments": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "testIsFrozenAndIsSealed"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x3292e2"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Literal",
                                                    "value": "0|2|1|4|3",
                                                    "raw": "'0|2|1|4|3'"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "split",
                                                    "raw": "'split'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": "|",
                                                    "raw": "'|'"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x14985c"
                                        },
                                        "init": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "WhileStatement",
                                "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "SwitchStatement",
                                            "discriminant": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x3292e2"
                                                },
                                                "property": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x14985c"
                                                    },
                                                    "prefix": false
                                                }
                                            },
                                            "cases": [
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "0",
                                                        "raw": "'0'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1ae904"
                                                                    },
                                                                    "init": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "Symbol"
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "1",
                                                        "raw": "'1'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Object"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "preventExtensions",
                                                                        "raw": "'preventExtensions'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x515b46"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "2",
                                                        "raw": "'2'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x515b46"
                                                                    },
                                                                    "init": {
                                                                        "type": "ObjectExpression",
                                                                        "properties": [
                                                                            {
                                                                                "type": "Property",
                                                                                "key": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x1ae904"
                                                                                },
                                                                                "computed": true,
                                                                                "value": {
                                                                                    "type": "Literal",
                                                                                    "value": 123,
                                                                                    "raw": "0x7b"
                                                                                },
                                                                                "kind": "init",
                                                                                "method": false,
                                                                                "shorthand": false
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "3",
                                                        "raw": "'3'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertFalse"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Object"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "isSealed",
                                                                                "raw": "'isSealed'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x515b46"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "4",
                                                        "raw": "'4'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertFalse"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Object"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "isFrozen",
                                                                                "raw": "'isFrozen'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x515b46"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "BreakStatement",
                                            "label": null
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                },
                "arguments": []
            }
        }
    ],
    "sourceType": "script"
}