{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "path"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "path",
                                "raw": "'path'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "assert",
                                "raw": "'assert'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "testDir",
                        "raw": "'testDir'"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "path"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "dirname",
                            "raw": "'dirname'"
                        }
                    },
                    "arguments": [
                        {
                            "type": "Identifier",
                            "name": "__filename"
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "fixturesDir",
                        "raw": "'fixturesDir'"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "path"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "join",
                            "raw": "'join'"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "exports"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "testDir",
                                "raw": "'testDir'"
                            }
                        },
                        {
                            "type": "Literal",
                            "value": "fixtures",
                            "raw": "'fixtures'"
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "libDir",
                        "raw": "'libDir'"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "path"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "join",
                            "raw": "'join'"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "exports"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "testDir",
                                "raw": "'testDir'"
                            }
                        },
                        {
                            "type": "Literal",
                            "value": "../lib",
                            "raw": "'../lib'"
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "tmpDir",
                        "raw": "'tmpDir'"
                    }
                },
                "right": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "path"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "join",
                            "raw": "'join'"
                        }
                    },
                    "arguments": [
                        {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "exports"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "testDir",
                                "raw": "'testDir'"
                            }
                        },
                        {
                            "type": "Literal",
                            "value": "tmp",
                            "raw": "'tmp'"
                        }
                    ]
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "PORT",
                        "raw": "'PORT'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": 12346,
                    "raw": "0x303a"
                }
            }
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "process"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "platform",
                        "raw": "'platform'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": "win32",
                    "raw": "'win32'"
                }
            },
            "consequent": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "exports"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "PIPE",
                                    "raw": "'PIPE'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": "\\\\.\\pipe\\libuv-test",
                                "raw": "'\\\\.\\pipe\\libuv-test'"
                            }
                        }
                    }
                ]
            },
            "alternate": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "exports"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "PIPE",
                                    "raw": "'PIPE'"
                                }
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "exports"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "tmpDir",
                                        "raw": "'tmpDir'"
                                    }
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "/test.sock",
                                    "raw": "'/test.sock'"
                                }
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "util"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "util",
                                "raw": "'util'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "util"
            },
            "body": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "exports"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "i"
                        }
                    },
                    "right": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "util"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "i"
                        }
                    }
                }
            },
            "each": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "protoCtrChain"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x498289"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x4a1210"
                                },
                                "init": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ForStatement",
                        "init": null,
                        "test": {
                            "type": "Identifier",
                            "name": "_0x498289"
                        },
                        "update": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x498289"
                            },
                            "right": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x498289"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "__proto__",
                                    "raw": "'__proto__'"
                                }
                            }
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x4a1210"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "push",
                                                "raw": "'push'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x498289"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "constructor",
                                                    "raw": "'constructor'"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x4a1210"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "join",
                                    "raw": "'join'"
                                }
                            },
                            "arguments": []
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "indirectInstanceOf",
                        "raw": "'indirectInstanceOf'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x1af970"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x32c84e"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "instanceof",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x1af970"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x32c84e"
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "bioXx",
                                                    "raw": "'bioXx'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "bioXx",
                                                    "raw": "'bioXx'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x20b53a"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "mustCallChecks"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "filter",
                                                                            "raw": "'filter'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x11dfcd"
                                                                                }
                                                                            ],
                                                                            "body": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ReturnStatement",
                                                                                        "argument": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "!==",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x11dfcd"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "actual",
                                                                                                    "raw": "'actual'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x11dfcd"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "expected",
                                                                                                    "raw": "'expected'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "generator": false,
                                                                            "expression": false,
                                                                            "async": false
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x20b53a"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "forEach",
                                                                    "raw": "'forEach'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0xfa1724"
                                                                        }
                                                                    ],
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "console"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "log",
                                                                                            "raw": "'log'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "value": "Mismatched %s function calls. Expected %d, actual %d.",
                                                                                            "raw": "'Mismatched\\x20%s\\x20function\\x20calls.\\x20Expected\\x20%d,\\x20actual\\x20%d.'"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xfa1724"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "name",
                                                                                                "raw": "'name'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xfa1724"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "expected",
                                                                                                "raw": "'expected'"
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xfa1724"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "actual",
                                                                                                "raw": "'actual'"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "console"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "log",
                                                                                            "raw": "'log'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_0xfa1724"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "stack",
                                                                                                                        "raw": "'stack'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "split",
                                                                                                                    "raw": "'split'"
                                                                                                                }
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "\n",
                                                                                                                    "raw": "'\\x0a'"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "slice",
                                                                                                            "raw": "'slice'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "0x2"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "join",
                                                                                                    "raw": "'join'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "value": "\n",
                                                                                                    "raw": "'\\x0a'"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "generator": false,
                                                                    "expression": false,
                                                                    "async": false
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x20b53a"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "length",
                                                                "raw": "'length'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "process"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "exit",
                                                                        "raw": "'exit'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": 1,
                                                                        "raw": "0x1"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "alternate": null
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": null
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x8afad9"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "protoCtrChain"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x32c84e"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "prototype",
                                                        "raw": "'prototype'"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x4a4d36"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "protoCtrChain"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1af970"
                                                }
                                            ]
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x4a4d36"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "slice",
                                                "raw": "'slice'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x8afad9"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "length",
                                                        "raw": "'length'"
                                                    }
                                                },
                                                "prefix": true
                                            }
                                        ]
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0x8afad9"
                                    }
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "ddCommand",
                        "raw": "'ddCommand'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x33d1d8"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x33b483"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "process"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "platform",
                                            "raw": "'platform'"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "win32",
                                        "raw": "'win32'"
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "IfStatement",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                    "type": "Literal",
                                                    "value": "WXZOU",
                                                    "raw": "'WXZOU'"
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": "WXZOU",
                                                    "raw": "'WXZOU'"
                                                }
                                            },
                                            "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xeb3ded"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "require"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "child_process",
                                                                                "raw": "'child_process'"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "spawn",
                                                                        "raw": "'spawn'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "process"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "platform",
                                                                    "raw": "'platform'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "win32",
                                                                "raw": "'win32'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xeb3ded"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "cmd.exe",
                                                                                "raw": "'cmd.exe'"
                                                                            },
                                                                            {
                                                                                "type": "ArrayExpression",
                                                                                "elements": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": "/c",
                                                                                        "raw": "'/c'"
                                                                                    },
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": "cd",
                                                                                        "raw": "'cd'"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "options"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_0xeb3ded"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "pwd",
                                                                                "raw": "'pwd'"
                                                                            },
                                                                            {
                                                                                "type": "ArrayExpression",
                                                                                "elements": []
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "options"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x51f990"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "path"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "resolve",
                                                                            "raw": "'resolve'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "exports"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "fixturesDir",
                                                                                "raw": "'fixturesDir'"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "create-file.js",
                                                                            "raw": "'create-file.js'"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "\"",
                                                                                        "raw": "'\\x22'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "process"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "argv",
                                                                                                "raw": "'argv'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "\" \"",
                                                                                    "raw": "'\\x22\\x20\\x22'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x51f990"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "\" \"",
                                                                            "raw": "'\\x22\\x20\\x22'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x33d1d8"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "\" ",
                                                                    "raw": "'\\x22\\x20'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x33b483"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 1024,
                                                                    "raw": "0x400"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x2b3f87"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "rZWkB",
                                                                "raw": "'rZWkB'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "dd if=/dev/zero of=\"",
                                                                "raw": "'dd if=/dev/zero of=\"'"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x33d1d8"
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "\" bs=1024 count=",
                                                        "raw": "'\" bs=1024 count='"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x33b483"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "spawnPwd",
                        "raw": "'spawnPwd'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x3b9526"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x33d66c"
                                        },
                                        "init": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "child_process",
                                                        "raw": "'child_process'"
                                                    }
                                                ]
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "spawn",
                                                "raw": "'spawn'"
                                            }
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "IfStatement",
                                "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "process"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "platform",
                                            "raw": "'platform'"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": "win32",
                                        "raw": "'win32'"
                                    }
                                },
                                "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x33d66c"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "cmd.exe",
                                                        "raw": "'cmd.exe'"
                                                    },
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "/c",
                                                                "raw": "'/c'"
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "cd",
                                                                "raw": "'cd'"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x3b9526"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ReturnStatement",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0x33d66c"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "pwd",
                                                        "raw": "'pwd'"
                                                    },
                                                    {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x3b9526"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "globalCheck",
                        "raw": "'globalCheck'"
                    }
                },
                "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                            "type": "ArrayExpression",
                            "elements": []
                        },
                        "prefix": true
                    },
                    "prefix": true
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "process"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "on",
                        "raw": "'on'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "exit",
                        "raw": "'exit'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "exports"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "globalCheck",
                                                "raw": "'globalCheck'"
                                            }
                                        },
                                        "prefix": true
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": null
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x289b3d"
                                            },
                                            "init": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "setTimeout"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "setInterval"
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "global"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "setImmediate",
                                                            "raw": "'setImmediate'"
                                                        }
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "clearTimeout"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "clearInterval"
                                                    },
                                                    {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "global"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "clearImmediate",
                                                            "raw": "'clearImmediate'"
                                                        }
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "console"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "Buffer"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "process"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "global"
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "global"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "errno",
                                            "raw": "'errno'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x289b3d"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "push",
                                                            "raw": "'push'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "errno"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "global"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "gc",
                                            "raw": "'gc'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "rJyyF",
                                                        "raw": "'rJyyF'"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "rJyyF",
                                                        "raw": "'rJyyF'"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "gc"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "o"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "constructor",
                                                                            "raw": "'constructor'"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "global"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "DTRACE_HTTP_SERVER_RESPONSE",
                                            "raw": "'DTRACE_HTTP_SERVER_RESPONSE'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x10a795"
                                                        },
                                                        "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Literal",
                                                                    "value": "6|7|4|5|2|1|0|3",
                                                                    "raw": "'6|7|4|5|2|1|0|3'"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "split",
                                                                    "raw": "'split'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "|",
                                                                    "raw": "'|'"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x582b63"
                                                        },
                                                        "init": {
                                                            "type": "Literal",
                                                            "value": 0,
                                                            "raw": "0x0"
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "WhileStatement",
                                                "test": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                        },
                                                        "prefix": true
                                                    },
                                                    "prefix": true
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "SwitchStatement",
                                                            "discriminant": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x10a795"
                                                                },
                                                                "property": {
                                                                    "type": "UpdateExpression",
                                                                    "operator": "++",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x582b63"
                                                                    },
                                                                    "prefix": false
                                                                }
                                                            },
                                                            "cases": [
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "0",
                                                                        "raw": "'0'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_NET_SOCKET_READ"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "1",
                                                                        "raw": "'1'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_NET_SERVER_CONNECTION"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "2",
                                                                        "raw": "'2'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_NET_STREAM_END"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "3",
                                                                        "raw": "'3'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_NET_SOCKET_WRITE"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "4",
                                                                        "raw": "'4'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_HTTP_CLIENT_RESPONSE"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "5",
                                                                        "raw": "'5'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_HTTP_CLIENT_REQUEST"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "6",
                                                                        "raw": "'6'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_HTTP_SERVER_RESPONSE"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SwitchCase",
                                                                    "test": {
                                                                        "type": "Literal",
                                                                        "value": "7",
                                                                        "raw": "'7'"
                                                                    },
                                                                    "consequent": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x289b3d"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "push",
                                                                                        "raw": "'push'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "DTRACE_HTTP_SERVER_REQUEST"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ContinueStatement",
                                                                            "label": null
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "global"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "COUNTER_NET_SERVER_CONNECTION",
                                            "raw": "'COUNTER_NET_SERVER_CONNECTION'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "pqQFU",
                                                        "raw": "'pqQFU'"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "ayUVg",
                                                        "raw": "'ayUVg'"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "log",
                                                                        "raw": "'log'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "Mismatched %s function calls. Expected %d, actual %d.",
                                                                        "raw": "'Mismatched %s function calls. Expected %d, actual %d.'"
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "context"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "name",
                                                                            "raw": "'name'"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "context"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "expected",
                                                                            "raw": "'expected'"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "context"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "actual",
                                                                            "raw": "'actual'"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "console"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "log",
                                                                        "raw": "'log'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "context"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "stack",
                                                                                                    "raw": "'stack'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "split",
                                                                                                "raw": "'split'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": "\n",
                                                                                                "raw": "'\\x0a'"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "slice",
                                                                                        "raw": "'slice'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Literal",
                                                                                        "value": 2,
                                                                                        "raw": "0x2"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "join",
                                                                                "raw": "'join'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "\n",
                                                                                "raw": "'\\x0a'"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x1aef8e"
                                                                    },
                                                                    "init": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Literal",
                                                                                "value": "5|4|0|1|2|3",
                                                                                "raw": "'5|4|0|1|2|3'"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "split",
                                                                                "raw": "'split'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "|",
                                                                                "raw": "'|'"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x376612"
                                                                    },
                                                                    "init": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "WhileStatement",
                                                            "test": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            },
                                                            "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "SwitchStatement",
                                                                        "discriminant": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1aef8e"
                                                                            },
                                                                            "property": {
                                                                                "type": "UpdateExpression",
                                                                                "operator": "++",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x376612"
                                                                                },
                                                                                "prefix": false
                                                                            }
                                                                        },
                                                                        "cases": [
                                                                            {
                                                                                "type": "SwitchCase",
                                                                                "test": {
                                                                                    "type": "Literal",
                                                                                    "value": "0",
                                                                                    "raw": "'0'"
                                                                                },
                                                                                "consequent": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x289b3d"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "push",
                                                                                                    "raw": "'push'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "COUNTER_HTTP_SERVER_REQUEST"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "ContinueStatement",
                                                                                        "label": null
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "SwitchCase",
                                                                                "test": {
                                                                                    "type": "Literal",
                                                                                    "value": "1",
                                                                                    "raw": "'1'"
                                                                                },
                                                                                "consequent": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x289b3d"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "push",
                                                                                                    "raw": "'push'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "COUNTER_HTTP_SERVER_RESPONSE"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "ContinueStatement",
                                                                                        "label": null
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "SwitchCase",
                                                                                "test": {
                                                                                    "type": "Literal",
                                                                                    "value": "2",
                                                                                    "raw": "'2'"
                                                                                },
                                                                                "consequent": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x289b3d"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "push",
                                                                                                    "raw": "'push'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "COUNTER_HTTP_CLIENT_REQUEST"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "ContinueStatement",
                                                                                        "label": null
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "SwitchCase",
                                                                                "test": {
                                                                                    "type": "Literal",
                                                                                    "value": "3",
                                                                                    "raw": "'3'"
                                                                                },
                                                                                "consequent": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x289b3d"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "push",
                                                                                                    "raw": "'push'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "COUNTER_HTTP_CLIENT_RESPONSE"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "ContinueStatement",
                                                                                        "label": null
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "SwitchCase",
                                                                                "test": {
                                                                                    "type": "Literal",
                                                                                    "value": "4",
                                                                                    "raw": "'4'"
                                                                                },
                                                                                "consequent": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x289b3d"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "push",
                                                                                                    "raw": "'push'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "COUNTER_NET_SERVER_CONNECTION_CLOSE"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "ContinueStatement",
                                                                                        "label": null
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "SwitchCase",
                                                                                "test": {
                                                                                    "type": "Literal",
                                                                                    "value": "5",
                                                                                    "raw": "'5'"
                                                                                },
                                                                                "consequent": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x289b3d"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "push",
                                                                                                    "raw": "'push'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "COUNTER_NET_SERVER_CONNECTION"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "ContinueStatement",
                                                                                        "label": null
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "BreakStatement",
                                                                        "label": null
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "global"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "ArrayBuffer",
                                            "raw": "'ArrayBuffer'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "!==",
                                                    "left": {
                                                        "type": "Literal",
                                                        "value": "TfTCo",
                                                        "raw": "'TfTCo'"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": "ukLTX",
                                                        "raw": "'ukLTX'"
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "ArrayBuffer"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Int8Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Uint8Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Uint8ClampedArray"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Int16Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Uint16Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Int32Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Uint32Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Float32Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "Float64Array"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x289b3d"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "DataView"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3b1b44"
                                                                    },
                                                                    "init": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "path"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "resolve",
                                                                                "raw": "'resolve'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "exports"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "fixturesDir",
                                                                                    "raw": "'fixturesDir'"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "create-file.js",
                                                                                "raw": "'create-file.js'"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x191ce5"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "ApkOc",
                                                                                        "raw": "'ApkOc'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x191ce5"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "sUGZs",
                                                                                                    "raw": "'sUGZs'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "value": "\"",
                                                                                                    "raw": "'\\x22'"
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "process"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "argv",
                                                                                                            "raw": "'argv'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "\" \"",
                                                                                            "raw": "'\" \"'"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3b1b44"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "\" \"",
                                                                                "raw": "'\" \"'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "filename"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": "\" ",
                                                                        "raw": "'\\x22\\x20'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "kilobytes"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 1024,
                                                                        "raw": "0x400"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": null
                                },
                                {
                                    "type": "ForInStatement",
                                    "left": {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0x59f84e"
                                                },
                                                "init": null
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "global"
                                    },
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x3d6eda"
                                                        },
                                                        "init": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                ],
                                                "kind": "var"
                                            },
                                            {
                                                "type": "ForInStatement",
                                                "left": {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x479607"
                                                            },
                                                            "init": null
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_0x289b3d"
                                                },
                                                "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "dkXNO",
                                                                    "raw": "'dkXNO'"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "dkXNO",
                                                                    "raw": "'dkXNO'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "global"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x59f84e"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x289b3d"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x479607"
                                                                                }
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "!==",
                                                                                        "left": {
                                                                                            "type": "Literal",
                                                                                            "value": "umrlW",
                                                                                            "raw": "'umrlW'"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "umrlW",
                                                                                            "raw": "'umrlW'"
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x289b3d"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "push",
                                                                                                            "raw": "'push'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "errno"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "AssignmentExpression",
                                                                                                    "operator": "=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x3d6eda"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "UnaryExpression",
                                                                                                        "operator": "!",
                                                                                                        "argument": {
                                                                                                            "type": "UnaryExpression",
                                                                                                            "operator": "!",
                                                                                                            "argument": {
                                                                                                                "type": "ArrayExpression",
                                                                                                                "elements": []
                                                                                                            },
                                                                                                            "prefix": true
                                                                                                        },
                                                                                                        "prefix": true
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "BreakStatement",
                                                                                                "label": null
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": null
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "console"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "error",
                                                                                    "raw": "'error'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "Unknown global: %s",
                                                                                    "raw": "'Unknown global: %s'"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x59f84e"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "ok",
                                                                                    "raw": "'ok'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "Unknown global found",
                                                                                    "raw": "'Unknown global found'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "each": false
                                            },
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x3d6eda"
                                                    },
                                                    "prefix": true
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "Literal",
                                                                    "value": "NZbun",
                                                                    "raw": "'NZbun'"
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "XPalu",
                                                                    "raw": "'XPalu'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "context"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "actual",
                                                                                    "raw": "'actual'"
                                                                                }
                                                                            },
                                                                            "prefix": false
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "fn"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "apply",
                                                                                    "raw": "'apply'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "arguments"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "console"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "error",
                                                                                    "raw": "'error'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "Unknown global: %s",
                                                                                    "raw": "'Unknown global: %s'"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x59f84e"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "assert"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "ok",
                                                                                    "raw": "'ok'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "ArrayExpression",
                                                                                        "elements": []
                                                                                    },
                                                                                    "prefix": true
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "Unknown global found",
                                                                                    "raw": "'Unknown global found'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": null
                                            }
                                        ]
                                    },
                                    "each": false
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "mustCallChecks"
                    },
                    "init": {
                        "type": "ArrayExpression",
                        "elements": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "runCallChecks"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x5a8349"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "mustCallChecks"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "filter",
                                            "raw": "'filter'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x409f6b"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "XcFTT",
                                                                "raw": "'XcFTT'"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "mEGxP",
                                                                "raw": "'mEGxP'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "exports"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "PIPE",
                                                                                "raw": "'PIPE'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "\\\\.\\pipe\\libuv-test",
                                                                            "raw": "'\\\\.\\pipe\\libuv-test'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x409f6b"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "actual",
                                                                                "raw": "'actual'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x409f6b"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "expected",
                                                                                "raw": "'expected'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x5a8349"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "forEach",
                                    "raw": "'forEach'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x3504d4"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "console"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "log",
                                                            "raw": "'log'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "Mismatched %s function calls. Expected %d, actual %d.",
                                                            "raw": "'Mismatched %s function calls. Expected %d, actual %d.'"
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x3504d4"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "name",
                                                                "raw": "'name'"
                                                            }
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x3504d4"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "expected",
                                                                "raw": "'expected'"
                                                            }
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x3504d4"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "actual",
                                                                "raw": "'actual'"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "console"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "log",
                                                            "raw": "'log'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3504d4"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "stack",
                                                                                        "raw": "'stack'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "split",
                                                                                    "raw": "'split'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "\n",
                                                                                    "raw": "'\\x0a'"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "slice",
                                                                            "raw": "'slice'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 2,
                                                                            "raw": "0x2"
                                                                        }
                                                                    ]
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "join",
                                                                    "raw": "'join'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "\n",
                                                                    "raw": "'\\x0a'"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            ]
                        }
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "_0x5a8349"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "length",
                                "raw": "'length'"
                            }
                        },
                        "consequent": {
                            "type": "ExpressionStatement",
                            "expression": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "process"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "exit",
                                        "raw": "'exit'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "0x1"
                                    }
                                ]
                            }
                        },
                        "alternate": null
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "mustCall",
                        "raw": "'mustCall'"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "_0x5a9c46"
                        },
                        {
                            "type": "Identifier",
                            "name": "_0x974dd9"
                        }
                    ],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x194775"
                                        },
                                        "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Literal",
                                                    "value": "2|0|1|3|4",
                                                    "raw": "'2|0|1|3|4'"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "split",
                                                    "raw": "'split'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": "|",
                                                    "raw": "'|'"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x199785"
                                        },
                                        "init": {
                                            "type": "Literal",
                                            "value": 0,
                                            "raw": "0x0"
                                        }
                                    }
                                ],
                                "kind": "var"
                            },
                            {
                                "type": "WhileStatement",
                                "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                        },
                                        "prefix": true
                                    },
                                    "prefix": true
                                },
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "SwitchStatement",
                                            "discriminant": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "_0x194775"
                                                },
                                                "property": {
                                                    "type": "UpdateExpression",
                                                    "operator": "++",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x199785"
                                                    },
                                                    "prefix": false
                                                }
                                            },
                                            "cases": [
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "0",
                                                        "raw": "'0'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                                {
                                                                    "type": "VariableDeclarator",
                                                                    "id": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x19aac3"
                                                                    },
                                                                    "init": {
                                                                        "type": "ObjectExpression",
                                                                        "properties": [
                                                                            {
                                                                                "type": "Property",
                                                                                "key": {
                                                                                    "type": "Literal",
                                                                                    "value": "expected",
                                                                                    "raw": "'expected'"
                                                                                },
                                                                                "computed": false,
                                                                                "value": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x974dd9"
                                                                                },
                                                                                "kind": "init",
                                                                                "method": false,
                                                                                "shorthand": false
                                                                            },
                                                                            {
                                                                                "type": "Property",
                                                                                "key": {
                                                                                    "type": "Literal",
                                                                                    "value": "stack",
                                                                                    "raw": "'stack'"
                                                                                },
                                                                                "computed": false,
                                                                                "value": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "NewExpression",
                                                                                        "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "Error"
                                                                                        },
                                                                                        "arguments": []
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "stack",
                                                                                        "raw": "'stack'"
                                                                                    }
                                                                                },
                                                                                "kind": "init",
                                                                                "method": false,
                                                                                "shorthand": false
                                                                            },
                                                                            {
                                                                                "type": "Property",
                                                                                "key": {
                                                                                    "type": "Literal",
                                                                                    "value": "name",
                                                                                    "raw": "'name'"
                                                                                },
                                                                                "computed": false,
                                                                                "value": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5a9c46"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "name",
                                                                                            "raw": "'name'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "<anonymous>",
                                                                                        "raw": "'<anonymous>'"
                                                                                    }
                                                                                },
                                                                                "kind": "init",
                                                                                "method": false,
                                                                                "shorthand": false
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ],
                                                            "kind": "var"
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "1",
                                                        "raw": "'1'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "mustCallChecks"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "length",
                                                                        "raw": "'length'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "process"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "on",
                                                                            "raw": "'on'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "exit",
                                                                            "raw": "'exit'"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "runCallChecks"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "alternate": null
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "2",
                                                        "raw": "'2'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "!==",
                                                                "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "typeof",
                                                                    "argument": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x974dd9"
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "right": {
                                                                    "type": "Literal",
                                                                    "value": "number",
                                                                    "raw": "'number'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x974dd9"
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 1,
                                                                        "raw": "0x1"
                                                                    }
                                                                }
                                                            },
                                                            "alternate": null
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "3",
                                                        "raw": "'3'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "mustCallChecks"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "push",
                                                                        "raw": "'push'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x19aac3"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "ContinueStatement",
                                                            "label": null
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "SwitchCase",
                                                    "test": {
                                                        "type": "Literal",
                                                        "value": "4",
                                                        "raw": "'4'"
                                                    },
                                                    "consequent": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [],
                                                                "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                                "type": "UpdateExpression",
                                                                                "operator": "++",
                                                                                "argument": {
                                                                                    "type": "Literal",
                                                                                    "value": 0,
                                                                                    "raw": "0x0"
                                                                                },
                                                                                "prefix": false
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x5a9c46"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "apply",
                                                                                        "raw": "'apply'"
                                                                                    }
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "arguments"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "generator": false,
                                                                "expression": false,
                                                                "async": false
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "BreakStatement",
                                            "label": null
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": false
                }
            }
        }
    ],
    "sourceType": "script"
}