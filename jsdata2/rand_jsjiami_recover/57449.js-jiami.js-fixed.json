{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "test"
                },
                "arguments": [
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x2db5a7"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Literal",
                                                        "value": "7|5|0|6|2|4|3|1",
                                                        "raw": "'7|5|0|6|2|4|3|1'"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "split",
                                                        "raw": "'split'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "|",
                                                        "raw": "'|'"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x5e4b25"
                                            },
                                            "init": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "WhileStatement",
                                    "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "ArrayExpression",
                                                "elements": []
                                            },
                                            "prefix": true
                                        },
                                        "prefix": true
                                    },
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "SwitchStatement",
                                                "discriminant": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x2db5a7"
                                                    },
                                                    "property": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x5e4b25"
                                                        },
                                                        "prefix": false
                                                    }
                                                },
                                                "cases": [
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "0",
                                                            "raw": "'0'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_equals"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3c375f"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "",
                                                                                "raw": "''"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "a=B&c=d",
                                                                            "raw": "'a=B&c=d'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "1",
                                                            "raw": "'1'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_equals"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3c375f"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "",
                                                                                "raw": "''"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "a=B&c=d&e=f",
                                                                            "raw": "'a=B&c=d&e=f'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "2",
                                                            "raw": "'2'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3c375f"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "set",
                                                                            "raw": "'set'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "a",
                                                                            "raw": "'a'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "B",
                                                                            "raw": "'B'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "3",
                                                            "raw": "'3'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3c375f"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "set",
                                                                            "raw": "'set'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "e",
                                                                            "raw": "'e'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "f",
                                                                            "raw": "'f'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "4",
                                                            "raw": "'4'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_equals"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x3c375f"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "",
                                                                                "raw": "''"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "a=B&c=d",
                                                                            "raw": "'a=B&c=d'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "5",
                                                            "raw": "'5'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3c375f"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "set",
                                                                            "raw": "'set'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "a",
                                                                            "raw": "'a'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "B",
                                                                            "raw": "'B'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "6",
                                                            "raw": "'6'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x3c375f"
                                                                    },
                                                                    "right": {
                                                                        "type": "NewExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "URLSearchParams"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Literal",
                                                                                "value": "a=b&c=d&a=e",
                                                                                "raw": "'a=b&c=d&a=e'"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "7",
                                                            "raw": "'7'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3c375f"
                                                                        },
                                                                        "init": {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "URLSearchParams"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a=b&c=d",
                                                                                    "raw": "'a=b&c=d'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "BreakStatement",
                                                "label": null
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    },
                    {
                        "type": "Literal",
                        "value": "Set basics",
                        "raw": "'Set\\x20basics'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "test"
                },
                "arguments": [
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x3cdca3"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Literal",
                                                        "value": "4|6|5|2|0|3|7|8|1",
                                                        "raw": "'4|6|5|2|0|3|7|8|1'"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "split",
                                                        "raw": "'split'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "|",
                                                        "raw": "'|'"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x31add3"
                                            },
                                            "init": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "WhileStatement",
                                    "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "ArrayExpression",
                                                "elements": []
                                            },
                                            "prefix": true
                                        },
                                        "prefix": true
                                    },
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "SwitchStatement",
                                                "discriminant": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x3cdca3"
                                                    },
                                                    "property": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x31add3"
                                                        },
                                                        "prefix": false
                                                    }
                                                },
                                                "cases": [
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "0",
                                                            "raw": "'0'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_true"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x12cf30"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "has",
                                                                                    "raw": "'has'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a",
                                                                                    "raw": "'a'"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Search params object has name \"a\"",
                                                                            "raw": "'Search params object has name \"a\"'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "1",
                                                            "raw": "'1'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_equals"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x12cf30"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "get",
                                                                                    "raw": "'get'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a",
                                                                                    "raw": "'a'"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "4",
                                                                            "raw": "'4'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Search params object has name \"a\" with value \"4\"",
                                                                            "raw": "'Search params object has name \"a\" with value \"4\"'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "2",
                                                            "raw": "'2'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x12cf30"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "set",
                                                                            "raw": "'set'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "first",
                                                                            "raw": "'first'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 4,
                                                                            "raw": "0x4"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "3",
                                                            "raw": "'3'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_equals"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x12cf30"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "get",
                                                                                    "raw": "'get'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a",
                                                                                    "raw": "'a'"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "1",
                                                                            "raw": "'1'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Search params object has name \"a\" with value \"1\"",
                                                                            "raw": "'Search params object has name \"a\" with value \"1\"'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "4",
                                                            "raw": "'4'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "declarations": [
                                                                    {
                                                                        "type": "VariableDeclarator",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x12cf30"
                                                                        },
                                                                        "init": {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "URLSearchParams"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a=1&a=2&a=3",
                                                                                    "raw": "'a=1&a=2&a=3'"
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ],
                                                                "kind": "var"
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "5",
                                                            "raw": "'5'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_equals"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x12cf30"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "get",
                                                                                    "raw": "'get'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a",
                                                                                    "raw": "'a'"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "1",
                                                                            "raw": "'1'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Search params object has name \"a\" with value \"1\"",
                                                                            "raw": "'Search params object has name \"a\" with value \"1\"'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "6",
                                                            "raw": "'6'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_true"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x12cf30"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "has",
                                                                                    "raw": "'has'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a",
                                                                                    "raw": "'a'"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Search params object has name \"a\"",
                                                                            "raw": "'Search params object has name \"a\"'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "7",
                                                            "raw": "'7'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x12cf30"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "set",
                                                                            "raw": "'set'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "a",
                                                                            "raw": "'a'"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": 4,
                                                                            "raw": "0x4"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "8",
                                                            "raw": "'8'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "assert_true"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x12cf30"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "has",
                                                                                    "raw": "'has'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "value": "a",
                                                                                    "raw": "'a'"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Search params object has name \"a\"",
                                                                            "raw": "'Search params object has name \"a\"'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "BreakStatement",
                                                "label": null
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    },
                    {
                        "type": "Literal",
                        "value": "URLSearchParams.set",
                        "raw": "'URLSearchParams.set'"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}