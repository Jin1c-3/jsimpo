{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "common"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../../common",
                                "raw": "'../../common'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "assert",
                                "raw": "'assert'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "test_number"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                        "type": "Literal",
                                        "value": "./build/",
                                        "raw": "'./build/'"
                                    },
                                    "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "common"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "buildType",
                                            "raw": "'buildType'"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "/test_number",
                                    "raw": "'/test_number'"
                                }
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "testNumber"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x116653"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "strictEqual",
                                    "raw": "'strictEqual'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x116653"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "test_number"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "Test",
                                            "raw": "'Test'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x116653"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "0x1"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 100,
                        "raw": "0x64"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 2121,
                        "raw": "0x849"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1233,
                            "raw": "0x4d1"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 986583,
                        "raw": "0xf0dd7"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 976675,
                            "raw": "0xee723"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 9.87654322134568e+64,
                        "raw": "0xf015e11daa0a400000000000000000000000000000000000000000"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 4.350987086545761e+63,
                            "raw": "0xa93a03bb9aa5e0000000000000000000000000000000000000000"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MIN_SAFE_INTEGER",
                            "raw": "'MIN_SAFE_INTEGER'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MAX_SAFE_INTEGER",
                            "raw": "'MAX_SAFE_INTEGER'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Number"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "MAX_SAFE_INTEGER",
                                "raw": "'MAX_SAFE_INTEGER'"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 10,
                            "raw": "0xa"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MIN_VALUE",
                            "raw": "'MIN_VALUE'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MAX_VALUE",
                            "raw": "'MAX_VALUE'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Number"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "MAX_VALUE",
                                "raw": "'MAX_VALUE'"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 10,
                            "raw": "0xa"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "POSITIVE_INFINITY",
                            "raw": "'POSITIVE_INFINITY'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "NEGATIVE_INFINITY",
                            "raw": "'NEGATIVE_INFINITY'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testNumber"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "NaN",
                            "raw": "'NaN'"
                        }
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "testUint32"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x585d7f"
                },
                {
                    "type": "AssignmentPattern",
                    "left": {
                        "type": "Identifier",
                        "name": "_0x2a5f19"
                    },
                    "right": {
                        "type": "Identifier",
                        "name": "_0x585d7f"
                    }
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "strictEqual",
                                    "raw": "'strictEqual'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x2a5f19"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "test_number"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "TestUint32Truncation",
                                            "raw": "'TestUint32Truncation'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x585d7f"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testUint32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testUint32"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        },
                        "prefix": true
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testUint32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4294967295,
                        "raw": "0xffffffff"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testUint32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4294967296,
                        "raw": "0x100000000"
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testUint32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4294967297,
                        "raw": "0x100000001"
                    },
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "0x1"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testUint32"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "*",
                            "left": {
                                "type": "Literal",
                                "value": 17,
                                "raw": "0x11"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 4294967296,
                                "raw": "0x100000000"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "0x1"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testUint32"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    },
                    {
                        "type": "Literal",
                        "value": 4294967295,
                        "raw": "0xffffffff"
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "testInt32"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x200e0c"
                },
                {
                    "type": "AssignmentPattern",
                    "left": {
                        "type": "Identifier",
                        "name": "_0x254094"
                    },
                    "right": {
                        "type": "Identifier",
                        "name": "_0x200e0c"
                    }
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "strictEqual",
                                    "raw": "'strictEqual'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x254094"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "test_number"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "TestInt32Truncation",
                                            "raw": "'TestInt32Truncation'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x200e0c"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        },
                        "prefix": true
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 31,
                                    "raw": "0x1f"
                                }
                            ]
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 31,
                                    "raw": "0x1f"
                                }
                            ]
                        },
                        "right": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4294967297,
                        "raw": "0x100000001"
                    },
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "0x1"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4294967296,
                        "raw": "0x100000000"
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 4294967295,
                        "raw": "0xffffffff"
                    },
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "*",
                            "left": {
                                "type": "Literal",
                                "value": 4294967296,
                                "raw": "0x100000000"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 5,
                                "raw": "0x5"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": 3,
                            "raw": "0x3"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 3,
                        "raw": "0x3"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MIN_SAFE_INTEGER",
                            "raw": "'MIN_SAFE_INTEGER'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 1,
                        "raw": "0x1"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MAX_SAFE_INTEGER",
                            "raw": "'MAX_SAFE_INTEGER'"
                        }
                    },
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 63,
                                        "raw": "0x3f"
                                    }
                                ]
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 9,
                                        "raw": "0x9"
                                    }
                                ]
                            },
                            "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 1024,
                        "raw": "0x400"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 63,
                                    "raw": "0x3f"
                                }
                            ]
                        },
                        "right": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 9,
                                        "raw": "0x9"
                                    }
                                ]
                            },
                            "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    },
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 1024,
                            "raw": "0x400"
                        },
                        "prefix": true
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Number"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "MIN_VALUE",
                                "raw": "'MIN_VALUE'"
                            }
                        },
                        "prefix": true
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MIN_VALUE",
                            "raw": "'MIN_VALUE'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Number"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "MAX_VALUE",
                                "raw": "'MAX_VALUE'"
                            }
                        },
                        "prefix": true
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MAX_VALUE",
                            "raw": "'MAX_VALUE'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 63,
                                        "raw": "0x3f"
                                    }
                                ]
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 9,
                                    "raw": "0x9"
                                }
                            ]
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 63,
                                    "raw": "0x3f"
                                }
                            ]
                        },
                        "right": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 9,
                                    "raw": "0x9"
                                }
                            ]
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "POSITIVE_INFINITY",
                            "raw": "'POSITIVE_INFINITY'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "NEGATIVE_INFINITY",
                            "raw": "'NEGATIVE_INFINITY'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt32"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "NaN",
                            "raw": "'NaN'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "testInt64"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x140886"
                },
                {
                    "type": "AssignmentPattern",
                    "left": {
                        "type": "Identifier",
                        "name": "_0x4f0084"
                    },
                    "right": {
                        "type": "Identifier",
                        "name": "_0x140886"
                    }
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "assert"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "strictEqual",
                                    "raw": "'strictEqual'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x4f0084"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "test_number"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "TestInt64Truncation",
                                            "raw": "'TestInt64Truncation'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x140886"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "RANGEERROR_POSITIVE"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Math"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "pow",
                                "raw": "'pow'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": 2,
                                "raw": "0x2"
                            },
                            {
                                "type": "Literal",
                                "value": 63,
                                "raw": "0x3f"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "RANGEERROR_NEGATIVE"
                    },
                    "init": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 63,
                                    "raw": "0x3f"
                                }
                            ]
                        },
                        "prefix": true
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        },
                        "prefix": true
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MIN_SAFE_INTEGER",
                            "raw": "'MIN_SAFE_INTEGER'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MAX_SAFE_INTEGER",
                            "raw": "'MAX_SAFE_INTEGER'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 63,
                                        "raw": "0x3f"
                                    }
                                ]
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 9,
                                        "raw": "0x9"
                                    }
                                ]
                            },
                            "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 63,
                                    "raw": "0x3f"
                                }
                            ]
                        },
                        "right": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 9,
                                        "raw": "0x9"
                                    }
                                ]
                            },
                            "right": {
                                "type": "Literal",
                                "value": 1,
                                "raw": "0x1"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Number"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "MIN_VALUE",
                                "raw": "'MIN_VALUE'"
                            }
                        },
                        "prefix": true
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MIN_VALUE",
                            "raw": "'MIN_VALUE'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "Number"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "MAX_VALUE",
                                "raw": "'MAX_VALUE'"
                            }
                        },
                        "prefix": true
                    },
                    {
                        "type": "Identifier",
                        "name": "RANGEERROR_NEGATIVE"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "MAX_VALUE",
                            "raw": "'MAX_VALUE'"
                        }
                    },
                    {
                        "type": "Identifier",
                        "name": "RANGEERROR_POSITIVE"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Math"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "pow",
                                        "raw": "'pow'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 2,
                                        "raw": "0x2"
                                    },
                                    {
                                        "type": "Literal",
                                        "value": 63,
                                        "raw": "0x3f"
                                    }
                                ]
                            },
                            "prefix": true
                        },
                        "right": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 9,
                                    "raw": "0x9"
                                }
                            ]
                        }
                    },
                    {
                        "type": "Identifier",
                        "name": "RANGEERROR_NEGATIVE"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 63,
                                    "raw": "0x3f"
                                }
                            ]
                        },
                        "right": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "Math"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "pow",
                                    "raw": "'pow'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 2,
                                    "raw": "0x2"
                                },
                                {
                                    "type": "Literal",
                                    "value": 9,
                                    "raw": "0x9"
                                }
                            ]
                        }
                    },
                    {
                        "type": "Identifier",
                        "name": "RANGEERROR_POSITIVE"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "POSITIVE_INFINITY",
                            "raw": "'POSITIVE_INFINITY'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "NEGATIVE_INFINITY",
                            "raw": "'NEGATIVE_INFINITY'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "Identifier",
                    "name": "testInt64"
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Number"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "NaN",
                            "raw": "'NaN'"
                        }
                    },
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}