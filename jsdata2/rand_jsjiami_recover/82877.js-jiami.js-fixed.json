{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "angular"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "module",
                                "raw": "'module'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "test",
                                "raw": "'test'"
                            },
                            {
                                "type": "ArrayExpression",
                                "elements": []
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "controller",
                        "raw": "'controller'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "TestController",
                        "raw": "'TestController'"
                    },
                    {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x3021ba"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x12f47c"
                            },
                            {
                                "type": "Identifier",
                                "name": "_0x5795b4"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x3021ba"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "yOffset",
                                                "raw": "'yOffset'"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 50,
                                            "raw": "0x32"
                                        }
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x5795b4"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "scrollTo",
                                                "raw": "'scrollTo'"
                                            }
                                        },
                                        "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2663f7"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x12f47c"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "hash",
                                                                        "raw": "'hash'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x2663f7"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x12f47c"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "hash",
                                                                                "raw": "'hash'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2663f7"
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3021ba"
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}