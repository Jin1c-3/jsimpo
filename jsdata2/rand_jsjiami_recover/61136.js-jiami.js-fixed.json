{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "Literal",
                                        "value": "use asm",
                                        "raw": "'use asm'"
                                    }
                                },
                                {
                                    "type": "ReturnStatement",
                                    "argument": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x44ff59"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ForStatement",
                                                    "init": {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x593aad"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x593aad"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 100000,
                                                            "raw": "0x186a0"
                                                        }
                                                    },
                                                    "update": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x593aad"
                                                        },
                                                        "prefix": true
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": []
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x44ff59"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    },
                    "arguments": []
                },
                "arguments": [
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "ThisExpression"
                        },
                        "right": {
                            "type": "Literal",
                            "value": "i",
                            "raw": "'i'"
                        }
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}