{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "common"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../common",
                                "raw": "'../common'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "fixtures"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../common/fixtures",
                                "raw": "'../common/fixtures'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "IfStatement",
            "test": {
                "type": "UnaryExpression",
                "operator": "!",
                "argument": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "common"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "hasCrypto",
                        "raw": "'hasCrypto'"
                    }
                },
                "prefix": true
            },
            "consequent": {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "common"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "skip",
                            "raw": "'skip'"
                        }
                    },
                    "arguments": [
                        {
                            "type": "Literal",
                            "value": "missing crypto",
                            "raw": "'missing crypto'"
                        }
                    ]
                }
            },
            "alternate": null
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "process"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "env",
                            "raw": "'env'"
                        }
                    },
                    "property": {
                        "type": "Literal",
                        "value": "NODE_TLS_REJECT_UNAUTHORIZED",
                        "raw": "'NODE_TLS_REJECT_UNAUTHORIZED'"
                    }
                },
                "right": {
                    "type": "Literal",
                    "value": "0",
                    "raw": "'0'"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "common"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "expectWarning",
                        "raw": "'expectWarning'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "Warning",
                        "raw": "'Warning'"
                    },
                    {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "Literal",
                                "value": "Setting the NODE_TLS_REJECT_UNAUTHORIZED environment variable to '0' ",
                                "raw": "'Setting the NODE_TLS_REJECT_UNAUTHORIZED environment variable to '0' '"
                            },
                            "right": {
                                "type": "Literal",
                                "value": "makes TLS connections and HTTPS requests insecure by disabling ",
                                "raw": "'makes TLS connections and HTTPS requests insecure by disabling '"
                            }
                        },
                        "right": {
                            "type": "Literal",
                            "value": "certificate verification.",
                            "raw": "'certificate\\x20verification.'"
                        }
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "assert"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "assert",
                                "raw": "'assert'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "https"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "https",
                                "raw": "'https'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "read"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x26a44c"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "fixtures"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "readKey",
                                    "raw": "'readKey'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x26a44c"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "key1"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "agent1-key.pem",
                                "raw": "'agent1-key.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "cert1"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "agent1-cert.pem",
                                "raw": "'agent1-cert.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "key2"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "agent2-key.pem",
                                "raw": "'agent2-key.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "cert2"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "agent2-cert.pem",
                                "raw": "'agent2-cert.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "key3"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "agent3-key.pem",
                                "raw": "'agent3-key.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "cert3"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "agent3-cert.pem",
                                "raw": "'agent3-cert.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ca1"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "ca1-cert.pem",
                                "raw": "'ca1-cert.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "ca2"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "read"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "ca2-cert.pem",
                                "raw": "'ca2-cert.pem'"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "agent0"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "https"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "Agent",
                                "raw": "'Agent'"
                            }
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "agent1"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "https"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "Agent",
                                "raw": "'Agent'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "ca",
                                            "raw": "'ca'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ca1"
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "agent2"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "https"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "Agent",
                                "raw": "'Agent'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "ca",
                                            "raw": "'ca'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ca2"
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "agent3"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "https"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "Agent",
                                "raw": "'Agent'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "ca",
                                            "raw": "'ca'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ca1"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "ca2"
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "options1"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "key",
                                    "raw": "'key'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "key1"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "cert",
                                    "raw": "'cert'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "cert1"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "options2"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "key",
                                    "raw": "'key'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "key2"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "cert",
                                    "raw": "'cert'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "cert2"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "options3"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "key",
                                    "raw": "'key'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "key3"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Literal",
                                    "value": "cert",
                                    "raw": "'cert'"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "cert3"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "server1"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "server"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "options1"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "server2"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "server"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "options2"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "server3"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "server"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "options3"
                            }
                        ]
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "listenWait"
                    },
                    "init": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "server1"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "listen",
                        "raw": "'listen'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "listening"
                        },
                        "arguments": []
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "server2"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "listen",
                        "raw": "'listen'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "listening"
                        },
                        "arguments": []
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "server3"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "listen",
                        "raw": "'listen'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "listening"
                        },
                        "arguments": []
                    }
                ]
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "responseErrors"
                    },
                    "init": {
                        "type": "ObjectExpression",
                        "properties": []
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "pending"
                    },
                    "init": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "server"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x539789"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xb74b6f"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "https"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "createServer",
                                            "raw": "'createServer'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x539789"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "handler"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0xb74b6f"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "requests",
                                    "raw": "'requests'"
                                }
                            },
                            "right": {
                                "type": "ArrayExpression",
                                "elements": []
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0xb74b6f"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "expectCount",
                                    "raw": "'expectCount'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0x0"
                            }
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "Identifier",
                            "name": "_0xb74b6f"
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "handler"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x3d671f"
                },
                {
                    "type": "Identifier",
                    "name": "_0x29d681"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "ThisExpression"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "requests",
                                        "raw": "'requests'"
                                    }
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "push",
                                    "raw": "'push'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x3d671f"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "url",
                                        "raw": "'url'"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x29d681"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "statusCode",
                                    "raw": "'statusCode'"
                                }
                            },
                            "right": {
                                "type": "Literal",
                                "value": 200,
                                "raw": "0xc8"
                            }
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x29d681"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "setHeader",
                                    "raw": "'setHeader'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "foo",
                                    "raw": "'foo'"
                                },
                                {
                                    "type": "Literal",
                                    "value": "bar",
                                    "raw": "'bar'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x29d681"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "end",
                                    "raw": "'end'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "hello, world\n",
                                    "raw": "'hello, world\n'"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "listening"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                                "type": "Identifier",
                                "name": "listenWait"
                            },
                            "prefix": false
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "ArrowFunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "UpdateExpression",
                                            "operator": "--",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "listenWait"
                                            },
                                            "prefix": false
                                        }
                                    },
                                    {
                                        "type": "IfStatement",
                                        "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "listenWait"
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        },
                                        "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "allListening"
                                                        },
                                                        "arguments": []
                                                    }
                                                }
                                            ]
                                        },
                                        "alternate": null
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "makeReq"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x407271"
                },
                {
                    "type": "Identifier",
                    "name": "_0x5a3c0a"
                },
                {
                    "type": "Identifier",
                    "name": "_0x4e8f12"
                },
                {
                    "type": "Identifier",
                    "name": "_0x55c88b"
                },
                {
                    "type": "Identifier",
                    "name": "_0x40c7b8"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                                "type": "Identifier",
                                "name": "pending"
                            },
                            "prefix": false
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x352f56"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "port",
                                                "raw": "'port'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Identifier",
                                                "name": "_0x5a3c0a"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "path",
                                                "raw": "'path'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Identifier",
                                                "name": "_0x407271"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Literal",
                                                "value": "ca",
                                                "raw": "'ca'"
                                            },
                                            "computed": false,
                                            "value": {
                                                "type": "Identifier",
                                                "name": "_0x40c7b8"
                                            },
                                            "kind": "init",
                                            "method": false,
                                            "shorthand": false
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x40c7b8"
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0x352f56"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "agent",
                                                "raw": "'agent'"
                                            }
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "agent0"
                                        }
                                    }
                                }
                            ]
                        },
                        "alternate": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Literal",
                                            "value": "VzWkt",
                                            "raw": "'VzWkt'"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "VzWkt",
                                            "raw": "'VzWkt'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "Array"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "isArray",
                                                                "raw": "'isArray'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x40c7b8"
                                                            }
                                                        ]
                                                    },
                                                    "prefix": true
                                                },
                                                "consequent": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x40c7b8"
                                                        },
                                                        "right": {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x40c7b8"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                "alternate": null
                                            },
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x40c7b8"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "includes",
                                                                "raw": "'includes'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "ca1"
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x40c7b8"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "includes",
                                                                "raw": "'includes'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "ca2"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x352f56"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "agent",
                                                                        "raw": "'agent'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "agent3"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "alternate": {
                                                    "type": "IfStatement",
                                                    "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x40c7b8"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "includes",
                                                                "raw": "'includes'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "ca1"
                                                            }
                                                        ]
                                                    },
                                                    "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x352f56"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "agent",
                                                                            "raw": "'agent'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "agent1"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "alternate": {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x40c7b8"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "includes",
                                                                    "raw": "'includes'"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca2"
                                                                }
                                                            ]
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x352f56"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "agent",
                                                                                "raw": "'agent'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "agent2"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "CXNQF",
                                                                            "raw": "'CXNQF'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "CXNQF",
                                                                            "raw": "'CXNQF'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x352f56"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "agent",
                                                                                            "raw": "'agent'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "agent0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x352f56"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "agent",
                                                                                            "raw": "'agent'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "agent0"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x352f56"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "headers",
                                                            "raw": "'headers'"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "host",
                                                                    "raw": "'host'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x55c88b"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "Identifier",
                            "name": "_0x55c88b"
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Literal",
                                            "value": "FRWlG",
                                            "raw": "'FRWlG'"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "fXFdA",
                                            "raw": "'fXFdA'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x100edc"
                                                        },
                                                        "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "server1"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "address",
                                                                        "raw": "'address'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "port",
                                                                "raw": "'port'"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "kind": "const"
                                            },
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x52d0cb"
                                                        },
                                                        "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "server2"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "address",
                                                                        "raw": "'address'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "port",
                                                                "raw": "'port'"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "kind": "const"
                                            },
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x4d6878"
                                                        },
                                                        "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "server3"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "address",
                                                                        "raw": "'address'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "port",
                                                                "raw": "'port'"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "kind": "const"
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv1",
                                                            "raw": "'/inv1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x100edc"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                                            "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv1-ca1",
                                                            "raw": "'/inv1-ca1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x100edc"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                                            "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ca1"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv1-ca1ca2",
                                                            "raw": "'/inv1-ca1ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x100edc"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                                            "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca1"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca2"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/val1-ca1",
                                                            "raw": "'/val1-ca1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x100edc"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent1",
                                                            "raw": "'agent1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ca1"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/val1-ca1ca2",
                                                            "raw": "'/val1-ca1ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x100edc"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent1",
                                                            "raw": "'agent1'"
                                                        },
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca1"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca2"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv1-ca2",
                                                            "raw": "'/inv1-ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x100edc"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                                            "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent1",
                                                            "raw": "'agent1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ca2"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv2",
                                                            "raw": "'/inv2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x52d0cb"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "DEPTH_ZERO_SELF_SIGNED_CERT",
                                                            "raw": "'DEPTH_ZERO_SELF_SIGNED_CERT'"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv2-ca1",
                                                            "raw": "'/inv2-ca1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x52d0cb"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "DEPTH_ZERO_SELF_SIGNED_CERT",
                                                            "raw": "'DEPTH_ZERO_SELF_SIGNED_CERT'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent2",
                                                            "raw": "'agent2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ca1"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv2-ca1ca2",
                                                            "raw": "'/inv2-ca1ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x52d0cb"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "DEPTH_ZERO_SELF_SIGNED_CERT",
                                                            "raw": "'DEPTH_ZERO_SELF_SIGNED_CERT'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent2",
                                                            "raw": "'agent2'"
                                                        },
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca1"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca2"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv3",
                                                            "raw": "'/inv3'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4d6878"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                                            "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv3-ca2",
                                                            "raw": "'/inv3-ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4d6878"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                                            "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ca2"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv3-ca1ca2",
                                                            "raw": "'/inv3-ca1ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4d6878"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                                            "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca1"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca2"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/val3-ca2",
                                                            "raw": "'/val3-ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4d6878"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent3",
                                                            "raw": "'agent3'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ca2"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/val3-ca1ca2",
                                                            "raw": "'/val3-ca1ca2'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4d6878"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": null,
                                                            "raw": "null"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent3",
                                                            "raw": "'agent3'"
                                                        },
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca1"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ca2"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "makeReq"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "/inv3-ca1",
                                                            "raw": "'/inv3-ca1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x4d6878"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                                            "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "agent1",
                                                            "raw": "'agent1'"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ca1"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0x352f56"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "headers",
                                                            "raw": "'headers'"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "host",
                                                                    "raw": "'host'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x55c88b"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x226237"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "https"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "get",
                                            "raw": "'get'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x352f56"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x1c58c5"
                                },
                                "init": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0x5a3c0a"
                                        },
                                        "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "server1"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "address",
                                                        "raw": "'address'"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "port",
                                                "raw": "'port'"
                                            }
                                        }
                                    },
                                    "consequent": {
                                        "type": "Identifier",
                                        "name": "server1"
                                    },
                                    "alternate": {
                                        "type": "ConditionalExpression",
                                        "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_0x5a3c0a"
                                            },
                                            "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "server2"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "address",
                                                            "raw": "'address'"
                                                        }
                                                    },
                                                    "arguments": []
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "port",
                                                    "raw": "'port'"
                                                }
                                            }
                                        },
                                        "consequent": {
                                            "type": "Identifier",
                                            "name": "server2"
                                        },
                                        "alternate": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_0x5a3c0a"
                                                },
                                                "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "server3"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "address",
                                                                "raw": "'address'"
                                                            }
                                                        },
                                                        "arguments": []
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "port",
                                                        "raw": "'port'"
                                                    }
                                                }
                                            },
                                            "consequent": {
                                                "type": "Identifier",
                                                "name": "server3"
                                            },
                                            "alternate": {
                                                "type": "Literal",
                                                "value": null,
                                                "raw": "null"
                                            }
                                        }
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x1c58c5"
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "ThrowStatement",
                            "argument": {
                                "type": "NewExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "Error"
                                },
                                "arguments": [
                                    {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                            "type": "Literal",
                                            "value": "invalid port: ",
                                            "raw": "'invalid port: '"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_0x5a3c0a"
                                        }
                                    }
                                ]
                            }
                        },
                        "alternate": null
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x1c58c5"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "expectCount",
                                    "raw": "'expectCount'"
                                }
                            },
                            "prefix": false
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x226237"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "on",
                                    "raw": "'on'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "response",
                                    "raw": "'response'"
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "common"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "mustCall",
                                            "raw": "'mustCall'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xcecb3a"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2963f2"
                                                                },
                                                                "init": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "Pgjwj",
                                                                                "raw": "'Pgjwj'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": "bar",
                                                                                "raw": "'bar'"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "QCTIO",
                                                                                "raw": "'QCTIO'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": "hello, world\n",
                                                                                "raw": "'hello, world\n'"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "bhxDq",
                                                                "raw": "'bhxDq'"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": "bhxDq",
                                                                "raw": "'bhxDq'"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "server1"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "close",
                                                                                "raw": "'close'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "server2"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "close",
                                                                                "raw": "'close'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "server3"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "close",
                                                                                "raw": "'close'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "assert"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "strictEqual",
                                                                                "raw": "'strictEqual'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xcecb3a"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "connection",
                                                                                        "raw": "'connection'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "authorizationError",
                                                                                    "raw": "'authorizationError'"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4e8f12"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "responseErrors"
                                                                            },
                                                                            "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x407271"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0xcecb3a"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "connection",
                                                                                    "raw": "'connection'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "authorizationError",
                                                                                "raw": "'authorizationError'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "--",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "pending"
                                                                        },
                                                                        "prefix": false
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "pending"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": 0,
                                                                            "raw": "0x0"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "dDNiJ",
                                                                                        "raw": "'dDNiJ'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "dDNiJ",
                                                                                        "raw": "'dDNiJ'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "server1"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "close",
                                                                                                        "raw": "'close'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": []
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "server2"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "close",
                                                                                                        "raw": "'close'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": []
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "server3"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "close",
                                                                                                        "raw": "'close'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": []
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "requests",
                                                                                                            "raw": "'requests'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "push",
                                                                                                        "raw": "'push'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x226237"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "url",
                                                                                                            "raw": "'url'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xcecb3a"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "statusCode",
                                                                                                        "raw": "'statusCode'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": 200,
                                                                                                    "raw": "0xc8"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xcecb3a"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "setHeader",
                                                                                                        "raw": "'setHeader'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": "foo",
                                                                                                        "raw": "'foo'"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x2963f2"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "Pgjwj",
                                                                                                            "raw": "'Pgjwj'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xcecb3a"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "end",
                                                                                                        "raw": "'end'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x2963f2"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "QCTIO",
                                                                                                            "raw": "'QCTIO'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0xcecb3a"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "resume",
                                                                                "raw": "'resume'"
                                                                            }
                                                                        },
                                                                        "arguments": []
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "allListening"
            },
            "params": [],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x55eb11"
                                },
                                "init": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "server1"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "address",
                                                "raw": "'address'"
                                            }
                                        },
                                        "arguments": []
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "port",
                                        "raw": "'port'"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x57fb70"
                                },
                                "init": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "server2"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "address",
                                                "raw": "'address'"
                                            }
                                        },
                                        "arguments": []
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "port",
                                        "raw": "'port'"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x2cc975"
                                },
                                "init": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "server3"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "address",
                                                "raw": "'address'"
                                            }
                                        },
                                        "arguments": []
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "port",
                                        "raw": "'port'"
                                    }
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv1",
                                    "raw": "'/inv1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x55eb11"
                                },
                                {
                                    "type": "Literal",
                                    "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                    "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv1-ca1",
                                    "raw": "'/inv1-ca1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x55eb11"
                                },
                                {
                                    "type": "Literal",
                                    "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                    "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "ca1"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv1-ca1ca2",
                                    "raw": "'/inv1-ca1ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x55eb11"
                                },
                                {
                                    "type": "Literal",
                                    "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                    "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Identifier",
                                            "name": "ca1"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ca2"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/val1-ca1",
                                    "raw": "'/val1-ca1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x55eb11"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent1",
                                    "raw": "'agent1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "ca1"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/val1-ca1ca2",
                                    "raw": "'/val1-ca1ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x55eb11"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent1",
                                    "raw": "'agent1'"
                                },
                                {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Identifier",
                                            "name": "ca1"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ca2"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv1-ca2",
                                    "raw": "'/inv1-ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x55eb11"
                                },
                                {
                                    "type": "Literal",
                                    "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                    "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent1",
                                    "raw": "'agent1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "ca2"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv2",
                                    "raw": "'/inv2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x57fb70"
                                },
                                {
                                    "type": "Literal",
                                    "value": "DEPTH_ZERO_SELF_SIGNED_CERT",
                                    "raw": "'DEPTH_ZERO_SELF_SIGNED_CERT'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv2-ca1",
                                    "raw": "'/inv2-ca1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x57fb70"
                                },
                                {
                                    "type": "Literal",
                                    "value": "DEPTH_ZERO_SELF_SIGNED_CERT",
                                    "raw": "'DEPTH_ZERO_SELF_SIGNED_CERT'"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent2",
                                    "raw": "'agent2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "ca1"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv2-ca1ca2",
                                    "raw": "'/inv2-ca1ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x57fb70"
                                },
                                {
                                    "type": "Literal",
                                    "value": "DEPTH_ZERO_SELF_SIGNED_CERT",
                                    "raw": "'DEPTH_ZERO_SELF_SIGNED_CERT'"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent2",
                                    "raw": "'agent2'"
                                },
                                {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Identifier",
                                            "name": "ca1"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ca2"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv3",
                                    "raw": "'/inv3'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x2cc975"
                                },
                                {
                                    "type": "Literal",
                                    "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                    "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv3-ca2",
                                    "raw": "'/inv3-ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x2cc975"
                                },
                                {
                                    "type": "Literal",
                                    "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                    "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "ca2"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv3-ca1ca2",
                                    "raw": "'/inv3-ca1ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x2cc975"
                                },
                                {
                                    "type": "Literal",
                                    "value": "ERR_TLS_CERT_ALTNAME_INVALID",
                                    "raw": "'ERR_TLS_CERT_ALTNAME_INVALID'"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Identifier",
                                            "name": "ca1"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ca2"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/val3-ca2",
                                    "raw": "'/val3-ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x2cc975"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent3",
                                    "raw": "'agent3'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "ca2"
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/val3-ca1ca2",
                                    "raw": "'/val3-ca1ca2'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x2cc975"
                                },
                                {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent3",
                                    "raw": "'agent3'"
                                },
                                {
                                    "type": "ArrayExpression",
                                    "elements": [
                                        {
                                            "type": "Identifier",
                                            "name": "ca1"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ca2"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "makeReq"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": "/inv3-ca1",
                                    "raw": "'/inv3-ca1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x2cc975"
                                },
                                {
                                    "type": "Literal",
                                    "value": "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
                                    "raw": "'UNABLE_TO_VERIFY_LEAF_SIGNATURE'"
                                },
                                {
                                    "type": "Literal",
                                    "value": "agent1",
                                    "raw": "'agent1'"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "ca1"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "process"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "on",
                        "raw": "'on'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "exit",
                        "raw": "'exit'"
                    },
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "assert"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "strictEqual",
                                                "raw": "'strictEqual'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "server1"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "requests",
                                                        "raw": "'requests'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "length",
                                                    "raw": "'length'"
                                                }
                                            },
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "server1"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "expectCount",
                                                    "raw": "'expectCount'"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "assert"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "strictEqual",
                                                "raw": "'strictEqual'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "server2"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "requests",
                                                        "raw": "'requests'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "length",
                                                    "raw": "'length'"
                                                }
                                            },
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "server2"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "expectCount",
                                                    "raw": "'expectCount'"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "assert"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "strictEqual",
                                                "raw": "'strictEqual'"
                                            }
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "server3"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "requests",
                                                        "raw": "'requests'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "length",
                                                    "raw": "'length'"
                                                }
                                            },
                                            {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "server3"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "expectCount",
                                                    "raw": "'expectCount'"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}