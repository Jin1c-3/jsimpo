{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "ObjectPattern",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "session"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "session"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "contextGroup"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "contextGroup"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "Protocol"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "Protocol"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            }
                        ]
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "InspectorTest"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "start",
                                "raw": "'start'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "Breakpoint can be set at line return this.x;",
                                "raw": "'Breakpoint can be set at line return this.x;'"
                            }
                        ]
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "contextGroup"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "addScript",
                        "raw": "'addScript'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "(function outer() {\n  var C = (function C_() {\n    var y = 1;\n    function CC() {\n      this.x = 0;\n    }\n    CC.prototype.f = function CCf() {\n      this.x += y;\n      return this.x;\n    };\n    return CC;\n  })();\n\n  var c = new C(0);\n})",
                        "raw": "'(function outer() {\n  var C = (function C_() {\n    var y = 1;\n    function CC() {\n      this.x = 0;\n    }\n    CC.prototype.f = function CCf() {\n      this.x += y;\n      return this.x;\n    };\n    return CC;\n  })();\n\n  var c = new C(0);\n})'"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "FunctionExpression",
                    "id": {
                        "type": "Identifier",
                        "name": "test"
                    },
                    "params": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "session"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "setupScriptMap",
                                            "raw": "'setupScriptMap'"
                                        }
                                    },
                                    "arguments": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "Protocol"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "Debugger",
                                                "raw": "'Debugger'"
                                            }
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "enable",
                                            "raw": "'enable'"
                                        }
                                    },
                                    "arguments": []
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "ObjectPattern",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "params"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "ObjectPattern",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Identifier",
                                                                    "name": "scriptId"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "Identifier",
                                                                    "name": "scriptId"
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": true
                                                            }
                                                        ]
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "init": {
                                            "type": "AwaitExpression",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Protocol"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "Debugger",
                                                            "raw": "'Debugger'"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "onceScriptParsed",
                                                        "raw": "'onceScriptParsed'"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        }
                                    }
                                ],
                                "kind": "const"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "InspectorTest"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "log",
                                            "raw": "'log'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Literal",
                                            "value": "Set breakpoint..",
                                            "raw": "'Set breakpoint..'"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "VariableDeclaration",
                                "declarations": [
                                    {
                                        "type": "VariableDeclarator",
                                        "id": {
                                            "type": "ObjectPattern",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": true
                                                }
                                            ]
                                        },
                                        "init": {
                                            "type": "AwaitExpression",
                                            "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "Protocol"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "Debugger",
                                                            "raw": "'Debugger'"
                                                        }
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "setBreakpoint",
                                                        "raw": "'setBreakpoint'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                            {
                                                                "type": "Property",
                                                                "key": {
                                                                    "type": "Literal",
                                                                    "value": "location",
                                                                    "raw": "'location'"
                                                                },
                                                                "computed": false,
                                                                "value": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "scriptId",
                                                                                "raw": "'scriptId'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Identifier",
                                                                                "name": "scriptId"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "lineNumber",
                                                                                "raw": "'lineNumber'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": 8,
                                                                                "raw": "0x8"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "key": {
                                                                                "type": "Literal",
                                                                                "value": "columnNumber",
                                                                                "raw": "'columnNumber'"
                                                                            },
                                                                            "computed": false,
                                                                            "value": {
                                                                                "type": "Literal",
                                                                                "value": 0,
                                                                                "raw": "0x0"
                                                                            },
                                                                            "kind": "init",
                                                                            "method": false,
                                                                            "shorthand": false
                                                                        }
                                                                    ]
                                                                },
                                                                "kind": "init",
                                                                "method": false,
                                                                "shorthand": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ],
                                "kind": "const"
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "session"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "logSourceLocation",
                                            "raw": "'logSourceLocation'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "result"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "actualLocation",
                                                "raw": "'actualLocation'"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "InspectorTest"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "completeTest",
                                            "raw": "'completeTest'"
                                        }
                                    },
                                    "arguments": []
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false,
                    "async": true
                },
                "arguments": []
            }
        }
    ],
    "sourceType": "script"
}