{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "Literal",
                "value": "use strict",
                "raw": "'use strict'"
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "__esModule",
                        "raw": "'__esModule'"
                    }
                },
                "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                            "type": "ArrayExpression",
                            "elements": []
                        },
                        "prefix": true
                    },
                    "prefix": true
                }
            }
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "_node"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./node",
                                "raw": "'./node'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "_node2"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "_interopRequireDefault"
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "_node"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "_types"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./types",
                                "raw": "'./types'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_interopRequireDefault"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x145583"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x145583"
                                },
                                "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "_0x145583"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "__esModule",
                                        "raw": "'__esModule'"
                                    }
                                }
                            },
                            "consequent": {
                                "type": "Identifier",
                                "name": "_0x145583"
                            },
                            "alternate": {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "default",
                                            "raw": "'default'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "Identifier",
                                            "name": "_0x145583"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_classCallCheck"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x2bccde"
                },
                {
                    "type": "Identifier",
                    "name": "_0x12111e"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "BinaryExpression",
                                "operator": "instanceof",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x2bccde"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0x12111e"
                                }
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ThrowStatement",
                                    "argument": {
                                        "type": "NewExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "TypeError"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "Cannot call a class as a function",
                                                "raw": "'Cannot\\x20call\\x20a\\x20class\\x20as\\x20a\\x20function'"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_possibleConstructorReturn"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x37dcb3"
                },
                {
                    "type": "Identifier",
                    "name": "_0x4df7c2"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "Identifier",
                                "name": "_0x37dcb3"
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ThrowStatement",
                                    "argument": {
                                        "type": "NewExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "ReferenceError"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": "this hasn't been initialised - super() hasn't been called",
                                                "raw": "'this hasn't been initialised - super() hasn't been called'"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "ConditionalExpression",
                            "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x4df7c2"
                                },
                                "right": {
                                    "type": "LogicalExpression",
                                    "operator": "||",
                                    "left": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_0x4df7c2"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "object",
                                            "raw": "'object'"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                                "type": "Identifier",
                                                "name": "_0x4df7c2"
                                            },
                                            "prefix": true
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "function",
                                            "raw": "'function'"
                                        }
                                    }
                                }
                            },
                            "consequent": {
                                "type": "Identifier",
                                "name": "_0x4df7c2"
                            },
                            "alternate": {
                                "type": "Identifier",
                                "name": "_0x37dcb3"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_inherits"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x5281ee"
                },
                {
                    "type": "Identifier",
                    "name": "_0xaa5381"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "!==",
                                "left": {
                                    "type": "UnaryExpression",
                                    "operator": "typeof",
                                    "argument": {
                                        "type": "Identifier",
                                        "name": "_0xaa5381"
                                    },
                                    "prefix": true
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": "function",
                                    "raw": "'function'"
                                }
                            },
                            "right": {
                                "type": "BinaryExpression",
                                "operator": "!==",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0xaa5381"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": null,
                                    "raw": "null"
                                }
                            }
                        },
                        "consequent": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": "!==",
                                        "left": {
                                            "type": "Literal",
                                            "value": "HLVDB",
                                            "raw": "'HLVDB'"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": "HLVDB",
                                            "raw": "'HLVDB'"
                                        }
                                    },
                                    "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "ReferenceError"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "this hasn't been initialised - super() hasn't been called",
                                                            "raw": "'this hasn't been initialised - super() hasn't been called'"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "TypeError"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Literal",
                                                                "value": "Super expression must either be null or a function, not ",
                                                                "raw": "'Super\\x20expression\\x20must\\x20either\\x20be\\x20null\\x20or\\x20a\\x20function,\\x20not\\x20'"
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "typeof",
                                                                "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xaa5381"
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "alternate": null
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x5281ee"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "prototype",
                                    "raw": "'prototype'"
                                }
                            },
                            "right": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Object"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "create",
                                        "raw": "'create'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_0xaa5381"
                                        },
                                        "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                                "type": "Identifier",
                                                "name": "_0xaa5381"
                                            },
                                            "property": {
                                                "type": "Literal",
                                                "value": "prototype",
                                                "raw": "'prototype'"
                                            }
                                        }
                                    },
                                    {
                                        "type": "ObjectExpression",
                                        "properties": [
                                            {
                                                "type": "Property",
                                                "key": {
                                                    "type": "Literal",
                                                    "value": "constructor",
                                                    "raw": "'constructor'"
                                                },
                                                "computed": false,
                                                "value": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "value",
                                                                "raw": "'value'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "Identifier",
                                                                "name": "_0x5281ee"
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "enumerable",
                                                                "raw": "'enumerable'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "writable",
                                                                "raw": "'writable'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "key": {
                                                                "type": "Literal",
                                                                "value": "configurable",
                                                                "raw": "'configurable'"
                                                            },
                                                            "computed": false,
                                                            "value": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": []
                                                                    },
                                                                    "prefix": true
                                                                },
                                                                "prefix": true
                                                            },
                                                            "kind": "init",
                                                            "method": false,
                                                            "shorthand": false
                                                        }
                                                    ]
                                                },
                                                "kind": "init",
                                                "method": false,
                                                "shorthand": false
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "Identifier",
                            "name": "_0xaa5381"
                        },
                        "consequent": {
                            "type": "ExpressionStatement",
                            "expression": {
                                "type": "ConditionalExpression",
                                "test": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Object"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "setPrototypeOf",
                                        "raw": "'setPrototypeOf'"
                                    }
                                },
                                "consequent": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "setPrototypeOf",
                                            "raw": "'setPrototypeOf'"
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x5281ee"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0xaa5381"
                                        }
                                    ]
                                },
                                "alternate": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "_0x5281ee"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "__proto__",
                                            "raw": "'__proto__'"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_0xaa5381"
                                    }
                                }
                            }
                        },
                        "alternate": null
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Comment"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x5b9ddd"
                                }
                            ],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_inherits"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2031f5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5b9ddd"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x2031f5"
                                        },
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x5986a9"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_classCallCheck"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ThisExpression"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x2031f5"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x2e7fc1"
                                                            },
                                                            "init": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_possibleConstructorReturn"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5b9ddd"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "call",
                                                                                "raw": "'call'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5986a9"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_0x2e7fc1"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "type",
                                                                "raw": "'type'"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "_types"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "COMMENT",
                                                                "raw": "'COMMENT'"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x2e7fc1"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x2031f5"
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "arguments": [
                            {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_node2"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "default",
                                    "raw": "'default'"
                                }
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "default",
                        "raw": "'default'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "Comment"
                }
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "default",
                        "raw": "'default'"
                    }
                }
            }
        }
    ],
    "sourceType": "script"
}