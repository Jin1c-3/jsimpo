{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "CONST"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "./const/ORIENTATION_CONST",
                                "raw": "'./const/ORIENTATION_CONST'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Class"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../utils/Class",
                                "raw": "'../utils/Class'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Components"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../gameobjects/components",
                                "raw": "'../gameobjects/components'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Rectangle"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "require"
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "../geom/rectangle",
                                "raw": "'../geom/rectangle'"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Tile"
                    },
                    "init": {
                        "type": "NewExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "Class"
                        },
                        "arguments": [
                            {
                                "type": "ObjectExpression",
                                "properties": [
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "Mixins",
                                            "raw": "'Mixins'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Alpha",
                                                        "raw": "'Alpha'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Flip",
                                                        "raw": "'Flip'"
                                                    }
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Components"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "Visible",
                                                        "raw": "'Visible'"
                                                    }
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "initialize",
                                            "raw": "'initialize'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "Tile"
                                            },
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x536112"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3eed85"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xe1b119"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5210db"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3f98a7"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x21e265"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5d9114"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2d91ea"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x331ba6"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Literal",
                                                                            "value": "22|20|0|1|6|12|18|15|3|16|9|14|11|17|8|21|13|5|19|26|25|2|4|23|7|24|10",
                                                                            "raw": "'22|20|0|1|6|12|18|15|3|16|9|14|11|17|8|21|13|5|19|26|25|2|4|23|7|24|10'"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "split",
                                                                            "raw": "'split'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "|",
                                                                            "raw": "'|'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4d4fe4"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "SwitchStatement",
                                                                    "discriminant": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x331ba6"
                                                                        },
                                                                        "property": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4d4fe4"
                                                                            },
                                                                            "prefix": false
                                                                        }
                                                                    },
                                                                    "cases": [
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "0",
                                                                                "raw": "'0'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xe1b119"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "1",
                                                                                "raw": "'1'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x5210db"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "2",
                                                                                "raw": "'2'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceTop",
                                                                                                "raw": "'faceTop'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "3",
                                                                                "raw": "'3'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "baseWidth",
                                                                                                "raw": "'baseWidth'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x5d9114"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "undefined"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x5d9114"
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x3f98a7"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "4",
                                                                                "raw": "'4'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceBottom",
                                                                                                "raw": "'faceBottom'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "5",
                                                                                "raw": "'5'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideUp",
                                                                                                "raw": "'collideUp'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "6",
                                                                                "raw": "'6'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "width",
                                                                                                "raw": "'width'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3f98a7"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "7",
                                                                                "raw": "'7'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collisionCallbackContext",
                                                                                                "raw": "'collisionCallbackContext'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "ThisExpression"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "8",
                                                                                "raw": "'8'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "rotation",
                                                                                                "raw": "'rotation'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "9",
                                                                                "raw": "'9'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "pixelX",
                                                                                                "raw": "'pixelX'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "10",
                                                                                "raw": "'10'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "physics",
                                                                                                "raw": "'physics'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "ObjectExpression",
                                                                                            "properties": []
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "11",
                                                                                "raw": "'11'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "updatePixelXY",
                                                                                                "raw": "'updatePixelXY'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": []
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "12",
                                                                                "raw": "'12'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "height",
                                                                                                "raw": "'height'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x21e265"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "13",
                                                                                "raw": "'13'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideRight",
                                                                                                "raw": "'collideRight'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "14",
                                                                                "raw": "'14'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "pixelY",
                                                                                                "raw": "'pixelY'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 0,
                                                                                            "raw": "0x0"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "15",
                                                                                "raw": "'15'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "bottom",
                                                                                            "raw": "'bottom'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "16",
                                                                                "raw": "'16'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "baseHeight",
                                                                                                "raw": "'baseHeight'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "ConditionalExpression",
                                                                                            "test": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "!==",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x2d91ea"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "undefined"
                                                                                                }
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2d91ea"
                                                                                            },
                                                                                            "alternate": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x21e265"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "17",
                                                                                "raw": "'17'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "properties",
                                                                                                "raw": "'properties'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "ObjectExpression",
                                                                                            "properties": []
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "18",
                                                                                "raw": "'18'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "right",
                                                                                            "raw": "'right'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "19",
                                                                                "raw": "'19'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideDown",
                                                                                                "raw": "'collideDown'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "20",
                                                                                "raw": "'20'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "index",
                                                                                                "raw": "'index'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3eed85"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "21",
                                                                                "raw": "'21'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideLeft",
                                                                                                "raw": "'collideLeft'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "22",
                                                                                "raw": "'22'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "layer",
                                                                                                "raw": "'layer'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x536112"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "23",
                                                                                "raw": "'23'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collisionCallback",
                                                                                                "raw": "'collisionCallback'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "undefined"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "24",
                                                                                "raw": "'24'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tint",
                                                                                                "raw": "'tint'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Literal",
                                                                                            "value": 16777215,
                                                                                            "raw": "0xffffff"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "25",
                                                                                "raw": "'25'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceRight",
                                                                                                "raw": "'faceRight'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "26",
                                                                                "raw": "'26'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceLeft",
                                                                                                "raw": "'faceLeft'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "BreakStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "containsPoint",
                                            "raw": "'containsPoint'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x576a96"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x35d492"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x576a96"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "pixelX",
                                                                                    "raw": "'pixelX'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x35d492"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "pixelY",
                                                                                    "raw": "'pixelY'"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x576a96"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "right",
                                                                                "raw": "'right'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x35d492"
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bottom",
                                                                            "raw": "'bottom'"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "copy",
                                            "raw": "'copy'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0xd096f"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x1e3d67"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Literal",
                                                                            "value": "3|4|0|13|11|12|5|1|7|2|9|6|10|8",
                                                                            "raw": "'3|4|0|13|11|12|5|1|7|2|9|6|10|8'"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "split",
                                                                            "raw": "'split'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "|",
                                                                            "raw": "'|'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2521a4"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "SwitchStatement",
                                                                    "discriminant": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1e3d67"
                                                                        },
                                                                        "property": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x2521a4"
                                                                            },
                                                                            "prefix": false
                                                                        }
                                                                    },
                                                                    "cases": [
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "0",
                                                                                "raw": "'0'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "properties",
                                                                                                "raw": "'properties'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "properties",
                                                                                                "raw": "'properties'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "1",
                                                                                "raw": "'1'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideUp",
                                                                                                "raw": "'collideUp'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideUp",
                                                                                                "raw": "'collideUp'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "2",
                                                                                "raw": "'2'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideLeft",
                                                                                                "raw": "'collideLeft'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideLeft",
                                                                                                "raw": "'collideLeft'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "3",
                                                                                "raw": "'3'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "index",
                                                                                                "raw": "'index'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "index",
                                                                                                "raw": "'index'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "4",
                                                                                "raw": "'4'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "alpha",
                                                                                                "raw": "'alpha'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "alpha",
                                                                                                "raw": "'alpha'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "5",
                                                                                "raw": "'5'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "rotation",
                                                                                                "raw": "'rotation'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "rotation",
                                                                                                "raw": "'rotation'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "6",
                                                                                "raw": "'6'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collisionCallback",
                                                                                                "raw": "'collisionCallback'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collisionCallback",
                                                                                                "raw": "'collisionCallback'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "7",
                                                                                "raw": "'7'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideDown",
                                                                                                "raw": "'collideDown'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideDown",
                                                                                                "raw": "'collideDown'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "8",
                                                                                "raw": "'8'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "ThisExpression"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "9",
                                                                                "raw": "'9'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideRight",
                                                                                                "raw": "'collideRight'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collideRight",
                                                                                                "raw": "'collideRight'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "10",
                                                                                "raw": "'10'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collisionCallbackContext",
                                                                                                "raw": "'collisionCallbackContext'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "collisionCallbackContext",
                                                                                                "raw": "'collisionCallbackContext'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "11",
                                                                                "raw": "'11'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "setFlip",
                                                                                                "raw": "'setFlip'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0xd096f"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "flipX",
                                                                                                    "raw": "'flipX'"
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0xd096f"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "flipY",
                                                                                                    "raw": "'flipY'"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "12",
                                                                                "raw": "'12'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tint",
                                                                                                "raw": "'tint'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tint",
                                                                                                "raw": "'tint'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "13",
                                                                                "raw": "'13'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "visible",
                                                                                                "raw": "'visible'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd096f"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "visible",
                                                                                                "raw": "'visible'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "BreakStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getCollisionGroup",
                                            "raw": "'getCollisionGroup'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "tileset",
                                                                    "raw": "'tileset'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "tileset",
                                                                            "raw": "'tileset'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "getTileCollisionGroup",
                                                                        "raw": "'getTileCollisionGroup'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "index",
                                                                            "raw": "'index'"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getTileData",
                                            "raw": "'getTileData'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "tileset",
                                                                    "raw": "'tileset'"
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "tileset",
                                                                            "raw": "'tileset'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "getTileData",
                                                                        "raw": "'getTileData'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "index",
                                                                            "raw": "'index'"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getLeft",
                                            "raw": "'getLeft'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x195ba1"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0xe8a177"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "tilemapLayer",
                                                                        "raw": "'tilemapLayer'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "Identifier",
                                                                "name": "_0xe8a177"
                                                            },
                                                            "consequent": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0xe8a177"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "tileToWorldX",
                                                                        "raw": "'tileToWorldX'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "x",
                                                                            "raw": "'x'"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x195ba1"
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "BinaryExpression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "x",
                                                                        "raw": "'x'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "baseWidth",
                                                                        "raw": "'baseWidth'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getRight",
                                            "raw": "'getRight'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x57522c"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x252216"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "tilemapLayer",
                                                                        "raw": "'tilemapLayer'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "Identifier",
                                                                "name": "_0x252216"
                                                            },
                                                            "consequent": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getLeft",
                                                                            "raw": "'getLeft'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x57522c"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "width",
                                                                            "raw": "'width'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x252216"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "scaleX",
                                                                            "raw": "'scaleX'"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "alternate": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getLeft",
                                                                            "raw": "'getLeft'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x57522c"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "width",
                                                                        "raw": "'width'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getTop",
                                            "raw": "'getTop'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x7027df"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4ae9d9"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "tilemapLayer",
                                                                        "raw": "'tilemapLayer'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "Identifier",
                                                                "name": "_0x4ae9d9"
                                                            },
                                                            "consequent": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4ae9d9"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "tileToWorldY",
                                                                            "raw": "'tileToWorldY'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "y",
                                                                                "raw": "'y'"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x7027df"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x1d5d3f"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "voZwo",
                                                                                "raw": "'voZwo'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "height",
                                                                                    "raw": "'height'"
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "baseHeight",
                                                                                    "raw": "'baseHeight'"
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4ae9d9"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "scaleY",
                                                                            "raw": "'scaleY'"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "alternate": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "y",
                                                                            "raw": "'y'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "baseHeight",
                                                                            "raw": "'baseHeight'"
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "height",
                                                                            "raw": "'height'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "baseHeight",
                                                                            "raw": "'baseHeight'"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getBottom",
                                            "raw": "'getBottom'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2ebcce"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5493f4"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "tilemapLayer",
                                                                        "raw": "'tilemapLayer'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                                "type": "Identifier",
                                                                "name": "_0x5493f4"
                                                            },
                                                            "consequent": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getTop",
                                                                            "raw": "'getTop'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2ebcce"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "height",
                                                                            "raw": "'height'"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5493f4"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "scaleY",
                                                                            "raw": "'scaleY'"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "alternate": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getTop",
                                                                            "raw": "'getTop'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2ebcce"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "height",
                                                                        "raw": "'height'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getBounds",
                                            "raw": "'getBounds'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x26f23d"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x4966f4"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x4966f4"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x4966f4"
                                                                        },
                                                                        "right": {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Rectangle"
                                                                            },
                                                                            "arguments": []
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4966f4"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "x",
                                                                    "raw": "'x'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "getLeft",
                                                                        "raw": "'getLeft'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4966f4"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "y",
                                                                    "raw": "'y'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "getTop",
                                                                        "raw": "'getTop'"
                                                                    }
                                                                },
                                                                "arguments": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4966f4"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "width",
                                                                    "raw": "'width'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getRight",
                                                                            "raw": "'getRight'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4966f4"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "x",
                                                                        "raw": "'x'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4966f4"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "height",
                                                                    "raw": "'height'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getBottom",
                                                                            "raw": "'getBottom'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4966f4"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "y",
                                                                        "raw": "'y'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x4966f4"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getCenterX",
                                            "raw": "'getCenterX'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x133819"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getLeft",
                                                                            "raw": "'getLeft'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x133819"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getRight",
                                                                            "raw": "'getRight'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x133819"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 2,
                                                                "raw": "0x2"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "getCenterY",
                                            "raw": "'getCenterY'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3c48c7"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "BinaryExpression",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getTop",
                                                                            "raw": "'getTop'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3c48c7"
                                                                        }
                                                                    ]
                                                                },
                                                                "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "getBottom",
                                                                            "raw": "'getBottom'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3c48c7"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 2,
                                                                "raw": "0x2"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "intersects",
                                            "raw": "'intersects'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2e920e"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2572f0"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x568dc5"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x30ba7e"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x568dc5"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "pixelX",
                                                                                    "raw": "'pixelX'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "<=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x30ba7e"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "pixelY",
                                                                                    "raw": "'pixelY'"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2e920e"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "right",
                                                                                "raw": "'right'"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": ">=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x2572f0"
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "bottom",
                                                                            "raw": "'bottom'"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "isInteresting",
                                            "raw": "'isInteresting'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x467061"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2e547e"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x467061"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x2e547e"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "BRUum",
                                                                            "raw": "'BRUum'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "gbNgc",
                                                                            "raw": "'gbNgc'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "canCollide",
                                                                                            "raw": "'canCollide'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "hasInterestingFace",
                                                                                            "raw": "'hasInterestingFace'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "tileset",
                                                                                            "raw": "'tileset'"
                                                                                        }
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "tileset",
                                                                                                    "raw": "'tileset'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "getTileCollisionGroup",
                                                                                                "raw": "'getTileCollisionGroup'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "index",
                                                                                                    "raw": "'index'"
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "Identifier",
                                                                "name": "_0x467061"
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "WHnLB",
                                                                                "raw": "'WHnLB'"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "AxPey",
                                                                                "raw": "'AxPey'"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2f08fb"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "2|3|4|5|0|1",
                                                                                                        "raw": "'2|3|4|5|0|1'"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "split",
                                                                                                        "raw": "'split'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Literal",
                                                                                                        "value": "|",
                                                                                                        "raw": "'|'"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x5cc50a"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "Literal",
                                                                                                "value": 0,
                                                                                                "raw": "0x0"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                {
                                                                                    "type": "WhileStatement",
                                                                                    "test": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    },
                                                                                    "body": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "SwitchStatement",
                                                                                                "discriminant": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2f08fb"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "UpdateExpression",
                                                                                                        "operator": "++",
                                                                                                        "argument": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x5cc50a"
                                                                                                        },
                                                                                                        "prefix": false
                                                                                                    }
                                                                                                },
                                                                                                "cases": [
                                                                                                    {
                                                                                                        "type": "SwitchCase",
                                                                                                        "test": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "0",
                                                                                                            "raw": "'0'"
                                                                                                        },
                                                                                                        "consequent": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "=",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "output"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "height",
                                                                                                                            "raw": "'height'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "BinaryExpression",
                                                                                                                        "operator": "-",
                                                                                                                        "left": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "getBottom",
                                                                                                                                    "raw": "'getBottom'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": []
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "output"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "y",
                                                                                                                                "raw": "'y'"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ContinueStatement",
                                                                                                                "label": null
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "SwitchCase",
                                                                                                        "test": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "1",
                                                                                                            "raw": "'1'"
                                                                                                        },
                                                                                                        "consequent": [
                                                                                                            {
                                                                                                                "type": "ReturnStatement",
                                                                                                                "argument": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "output"
                                                                                                                }
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "SwitchCase",
                                                                                                        "test": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "2",
                                                                                                            "raw": "'2'"
                                                                                                        },
                                                                                                        "consequent": [
                                                                                                            {
                                                                                                                "type": "IfStatement",
                                                                                                                "test": {
                                                                                                                    "type": "BinaryExpression",
                                                                                                                    "operator": "===",
                                                                                                                    "left": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "output"
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "undefined"
                                                                                                                    }
                                                                                                                },
                                                                                                                "consequent": {
                                                                                                                    "type": "BlockStatement",
                                                                                                                    "body": [
                                                                                                                        {
                                                                                                                            "type": "ExpressionStatement",
                                                                                                                            "expression": {
                                                                                                                                "type": "AssignmentExpression",
                                                                                                                                "operator": "=",
                                                                                                                                "left": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "output"
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                    "type": "NewExpression",
                                                                                                                                    "callee": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "Rectangle"
                                                                                                                                    },
                                                                                                                                    "arguments": []
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                "alternate": null
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ContinueStatement",
                                                                                                                "label": null
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "SwitchCase",
                                                                                                        "test": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "3",
                                                                                                            "raw": "'3'"
                                                                                                        },
                                                                                                        "consequent": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "=",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "output"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "x",
                                                                                                                            "raw": "'x'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "getLeft",
                                                                                                                                "raw": "'getLeft'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": []
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ContinueStatement",
                                                                                                                "label": null
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "SwitchCase",
                                                                                                        "test": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "4",
                                                                                                            "raw": "'4'"
                                                                                                        },
                                                                                                        "consequent": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "=",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "output"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "y",
                                                                                                                            "raw": "'y'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "CallExpression",
                                                                                                                        "callee": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "ThisExpression"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "getTop",
                                                                                                                                "raw": "'getTop'"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "arguments": []
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ContinueStatement",
                                                                                                                "label": null
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "SwitchCase",
                                                                                                        "test": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "5",
                                                                                                            "raw": "'5'"
                                                                                                        },
                                                                                                        "consequent": [
                                                                                                            {
                                                                                                                "type": "ExpressionStatement",
                                                                                                                "expression": {
                                                                                                                    "type": "AssignmentExpression",
                                                                                                                    "operator": "=",
                                                                                                                    "left": {
                                                                                                                        "type": "MemberExpression",
                                                                                                                        "computed": true,
                                                                                                                        "object": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "output"
                                                                                                                        },
                                                                                                                        "property": {
                                                                                                                            "type": "Literal",
                                                                                                                            "value": "width",
                                                                                                                            "raw": "'width'"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "BinaryExpression",
                                                                                                                        "operator": "-",
                                                                                                                        "left": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "getRight",
                                                                                                                                    "raw": "'getRight'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": []
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "MemberExpression",
                                                                                                                            "computed": true,
                                                                                                                            "object": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "output"
                                                                                                                            },
                                                                                                                            "property": {
                                                                                                                                "type": "Literal",
                                                                                                                                "value": "x",
                                                                                                                                "raw": "'x'"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "ContinueStatement",
                                                                                                                "label": null
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "type": "BreakStatement",
                                                                                                "label": null
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collides",
                                                                                            "raw": "'collides'"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x2e547e"
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "hasInterestingFace",
                                                                                    "raw": "'hasInterestingFace'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "resetCollision",
                                            "raw": "'resetCollision'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x3e7134"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x3e7134"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "ZsoGD",
                                                                            "raw": "'ZsoGD'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "BJBYe",
                                                                            "raw": "'BJBYe'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "collides",
                                                                                        "raw": "'collides'"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x3e7134"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "UnaryExpression",
                                                                                        "operator": "!",
                                                                                        "argument": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        },
                                                                                        "prefix": true
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideLeft",
                                                                    "raw": "'collideLeft'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideRight",
                                                                    "raw": "'collideRight'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideUp",
                                                                    "raw": "'collideUp'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideDown",
                                                                    "raw": "'collideDown'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceTop",
                                                                    "raw": "'faceTop'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceBottom",
                                                                    "raw": "'faceBottom'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceLeft",
                                                                    "raw": "'faceLeft'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceRight",
                                                                    "raw": "'faceRight'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x3e7134"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5b6ed1"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "tilemapLayer",
                                                                                    "raw": "'tilemapLayer'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x5b6ed1"
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "ILISp",
                                                                                        "raw": "'ILISp'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "skaMK",
                                                                                        "raw": "'skaMK'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "tilemapLayer",
                                                                                                            "raw": "'tilemapLayer'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "calculateFacesAt",
                                                                                                        "raw": "'calculateFacesAt'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "tilemapLayer",
                                                                                                            "raw": "'tilemapLayer'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "calculateFacesAt",
                                                                                                        "raw": "'calculateFacesAt'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "resetFaces",
                                            "raw": "'resetFaces'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x280a3d"
                                                                },
                                                                "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Literal",
                                                                            "value": "0|4|3|2|1",
                                                                            "raw": "'0|4|3|2|1'"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "split",
                                                                            "raw": "'split'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "|",
                                                                            "raw": "'|'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4ec30a"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "WhileStatement",
                                                        "test": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                },
                                                                "prefix": true
                                                            },
                                                            "prefix": true
                                                        },
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "SwitchStatement",
                                                                    "discriminant": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x280a3d"
                                                                        },
                                                                        "property": {
                                                                            "type": "UpdateExpression",
                                                                            "operator": "++",
                                                                            "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4ec30a"
                                                                            },
                                                                            "prefix": false
                                                                        }
                                                                    },
                                                                    "cases": [
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "0",
                                                                                "raw": "'0'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceTop",
                                                                                                "raw": "'faceTop'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "1",
                                                                                "raw": "'1'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "ThisExpression"
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "2",
                                                                                "raw": "'2'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceRight",
                                                                                                "raw": "'faceRight'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "3",
                                                                                "raw": "'3'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceLeft",
                                                                                                "raw": "'faceLeft'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "SwitchCase",
                                                                            "test": {
                                                                                "type": "Literal",
                                                                                "value": "4",
                                                                                "raw": "'4'"
                                                                            },
                                                                            "consequent": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "faceBottom",
                                                                                                "raw": "'faceBottom'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "UnaryExpression",
                                                                                            "operator": "!",
                                                                                            "argument": {
                                                                                                "type": "ArrayExpression",
                                                                                                "elements": []
                                                                                            },
                                                                                            "prefix": true
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ContinueStatement",
                                                                                    "label": null
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "BreakStatement",
                                                                    "label": null
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setCollision",
                                            "raw": "'setCollision'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x2ccb0b"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x531b04"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x385191"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x11fb75"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x1ff8af"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x531b04"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "IDzdK",
                                                                            "raw": "'IDzdK'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "KbYsH",
                                                                            "raw": "'KbYsH'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x531b04"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2ccb0b"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x798023"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tilemapLayer",
                                                                                                "raw": "'tilemapLayer'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x798023"
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "getLeft",
                                                                                                    "raw": "'getLeft'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "camera"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "width",
                                                                                                    "raw": "'width'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x798023"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "scaleX",
                                                                                                    "raw": "'scaleX'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "getLeft",
                                                                                                    "raw": "'getLeft'"
                                                                                                }
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "camera"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "width",
                                                                                                "raw": "'width'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x385191"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x385191"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2ccb0b"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x11fb75"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "GSuhs",
                                                                            "raw": "'GSuhs'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "GSuhs",
                                                                            "raw": "'GSuhs'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2d8057"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0x4b7cfd"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "gidMap",
                                                                                                    "raw": "'gidMap'"
                                                                                                }
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "index",
                                                                                                    "raw": "'index'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x2d8057"
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x2d8057"
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x11fb75"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x2ccb0b"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x1ff8af"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x1ff8af"
                                                                        },
                                                                        "right": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                                "type": "UnaryExpression",
                                                                                "operator": "!",
                                                                                "argument": {
                                                                                    "type": "ArrayExpression",
                                                                                    "elements": []
                                                                                },
                                                                                "prefix": true
                                                                            },
                                                                            "prefix": true
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideLeft",
                                                                    "raw": "'collideLeft'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x2ccb0b"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideRight",
                                                                    "raw": "'collideRight'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x531b04"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideUp",
                                                                    "raw": "'collideUp'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x385191"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collideDown",
                                                                    "raw": "'collideDown'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x11fb75"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceLeft",
                                                                    "raw": "'faceLeft'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x2ccb0b"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceRight",
                                                                    "raw": "'faceRight'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x531b04"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceTop",
                                                                    "raw": "'faceTop'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x385191"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "faceBottom",
                                                                    "raw": "'faceBottom'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_0x11fb75"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "Identifier",
                                                            "name": "_0x1ff8af"
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x4b7cfd"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "tilemapLayer",
                                                                                    "raw": "'tilemapLayer'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x4b7cfd"
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "hWnYr",
                                                                                        "raw": "'hWnYr'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "eGMrJ",
                                                                                        "raw": "'eGMrJ'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x57f9d0"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "layer",
                                                                                                                "raw": "'layer'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "hexSideLength",
                                                                                                            "raw": "'hexSideLength'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x253e75"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "/",
                                                                                                            "left": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "-",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "baseHeight",
                                                                                                                        "raw": "'baseHeight'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x57f9d0"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 2,
                                                                                                                "raw": "0x2"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x57f9d0"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "pixelX",
                                                                                                        "raw": "'pixelX'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "*",
                                                                                                        "left": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "x",
                                                                                                                "raw": "'x'"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "baseWidth",
                                                                                                                "raw": "'baseWidth'"
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "*",
                                                                                                        "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "%",
                                                                                                            "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "y",
                                                                                                                    "raw": "'y'"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 2,
                                                                                                                "raw": "0x2"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "/",
                                                                                                            "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "baseWidth",
                                                                                                                    "raw": "'baseWidth'"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 2,
                                                                                                                "raw": "0x2"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "pixelY",
                                                                                                        "raw": "'pixelY'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x253e75"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "tilemapLayer",
                                                                                                            "raw": "'tilemapLayer'"
                                                                                                        }
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "calculateFacesAt",
                                                                                                        "raw": "'calculateFacesAt'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setCollisionCallback",
                                            "raw": "'setCollisionCallback'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x29d049"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x39f218"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x29d049"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": null,
                                                                "raw": "null"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "NvlmX",
                                                                            "raw": "'NvlmX'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "nYHxA",
                                                                            "raw": "'nYHxA'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1f8584"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "tilemapLayer",
                                                                                                "raw": "'tilemapLayer'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1f8584"
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x1f8584"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "tilemap",
                                                                                            "raw": "'tilemap'"
                                                                                        }
                                                                                    },
                                                                                    "alternate": {
                                                                                        "type": "Literal",
                                                                                        "value": null,
                                                                                        "raw": "null"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collisionCallback",
                                                                                            "raw": "'collisionCallback'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "undefined"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collisionCallbackContext",
                                                                                            "raw": "'collisionCallbackContext'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "undefined"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collisionCallback",
                                                                                "raw": "'collisionCallback'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x29d049"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collisionCallbackContext",
                                                                                "raw": "'collisionCallbackContext'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x39f218"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "setSize",
                                            "raw": "'setSize'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x24cbe6"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x5bad88"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x9a774a"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x51b674"
                                                }
                                            ],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x24cbe6"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "RGBbL",
                                                                            "raw": "'RGBbL'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "UqlTQ",
                                                                            "raw": "'UqlTQ'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "baseWidth",
                                                                                            "raw": "'baseWidth'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x9a774a"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "width",
                                                                                            "raw": "'width'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x24cbe6"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x5bad88"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "hXMAb",
                                                                            "raw": "'hXMAb'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "hXMAb",
                                                                            "raw": "'hXMAb'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "height",
                                                                                            "raw": "'height'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x5bad88"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "||",
                                                                                        "left": {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "||",
                                                                                            "left": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "||",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "<=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "right"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "pixelX",
                                                                                                            "raw": "'pixelX'"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "<=",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "bottom"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "pixelY",
                                                                                                            "raw": "'pixelY'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": ">=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "x"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "right",
                                                                                                        "raw": "'right'"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": ">=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "y"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "bottom",
                                                                                                    "raw": "'bottom'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x9a774a"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "baseWidth",
                                                                                "raw": "'baseWidth'"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x9a774a"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x51b674"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "SvHIA",
                                                                            "raw": "'SvHIA'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "SvHIA",
                                                                            "raw": "'SvHIA'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "right"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "left"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "baseHeight",
                                                                                            "raw": "'baseHeight'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x51b674"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "updatePixelXY",
                                                                    "raw": "'updatePixelXY'"
                                                                }
                                                            },
                                                            "arguments": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "updatePixelXY",
                                            "raw": "'updatePixelXY'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x430887"
                                                                },
                                                                "init": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "layer",
                                                                            "raw": "'layer'"
                                                                        }
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "orientation",
                                                                        "raw": "'orientation'"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x430887"
                                                            },
                                                            "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "CONST"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "ORTHOGONAL",
                                                                    "raw": "'ORTHOGONAL'"
                                                                }
                                                            }
                                                        },
                                                        "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Literal",
                                                                            "value": "XExzK",
                                                                            "raw": "'XExzK'"
                                                                        },
                                                                        "right": {
                                                                            "type": "Literal",
                                                                            "value": "XExzK",
                                                                            "raw": "'XExzK'"
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "pixelX",
                                                                                            "raw": "'pixelX'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "x",
                                                                                                "raw": "'x'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "baseWidth",
                                                                                                "raw": "'baseWidth'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "pixelY",
                                                                                            "raw": "'pixelY'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "*",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "y",
                                                                                                "raw": "'y'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "baseHeight",
                                                                                                "raw": "'baseHeight'"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "||",
                                                                                        "left": {
                                                                                            "type": "LogicalExpression",
                                                                                            "operator": "||",
                                                                                            "left": {
                                                                                                "type": "LogicalExpression",
                                                                                                "operator": "||",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "<",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "x"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "pixelX",
                                                                                                            "raw": "'pixelX'"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "<",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "y"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "pixelY",
                                                                                                            "raw": "'pixelY'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": ">",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "x"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "right",
                                                                                                        "raw": "'right'"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": ">",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "y"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "bottom",
                                                                                                    "raw": "'bottom'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "prefix": true
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x430887"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "CONST"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "ISOMETRIC",
                                                                        "raw": "'ISOMETRIC'"
                                                                    }
                                                                }
                                                            },
                                                            "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "===",
                                                                            "left": {
                                                                                "type": "Literal",
                                                                                "value": "gCCIU",
                                                                                "raw": "'gCCIU'"
                                                                            },
                                                                            "right": {
                                                                                "type": "Literal",
                                                                                "value": "gCCIU",
                                                                                "raw": "'gCCIU'"
                                                                            }
                                                                        },
                                                                        "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "pixelX",
                                                                                                "raw": "'pixelX'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "-",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "baseWidth",
                                                                                                        "raw": "'baseWidth'"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 0.5,
                                                                                                "raw": "0.5"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "pixelY",
                                                                                                "raw": "'pixelY'"
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "*",
                                                                                            "left": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x464b1c"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "NGgCb",
                                                                                                        "raw": "'NGgCb'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "x",
                                                                                                                "raw": "'x'"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "y",
                                                                                                                "raw": "'y'"
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "baseHeight",
                                                                                                            "raw": "'baseHeight'"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Literal",
                                                                                                "value": 0.5,
                                                                                                "raw": "0.5"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "VariableDeclaration",
                                                                                    "declarations": [
                                                                                        {
                                                                                            "type": "VariableDeclarator",
                                                                                            "id": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x1f719d"
                                                                                            },
                                                                                            "init": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "tilemapLayer",
                                                                                                    "raw": "'tilemapLayer'"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "kind": "var"
                                                                                },
                                                                                {
                                                                                    "type": "IfStatement",
                                                                                    "test": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x1f719d"
                                                                                    },
                                                                                    "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                            {
                                                                                                "type": "ExpressionStatement",
                                                                                                "expression": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "tilemapLayer",
                                                                                                                "raw": "'tilemapLayer'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "calculateFacesAt",
                                                                                                            "raw": "'calculateFacesAt'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "x",
                                                                                                                "raw": "'x'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "y",
                                                                                                                "raw": "'y'"
                                                                                                            }
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "alternate": null
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x430887"
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "CONST"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "STAGGERED",
                                                                            "raw": "'STAGGERED'"
                                                                        }
                                                                    }
                                                                },
                                                                "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                        {
                                                                            "type": "IfStatement",
                                                                            "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "!==",
                                                                                "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "cDhRS",
                                                                                    "raw": "'cDhRS'"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "cDhRS",
                                                                                    "raw": "'cDhRS'"
                                                                                }
                                                                            },
                                                                            "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "recalculateFaces"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "ArrayExpression",
                                                                                                        "elements": []
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                },
                                                                                                "prefix": true
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "pixelX",
                                                                                                    "raw": "'pixelX'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "baseWidth",
                                                                                                            "raw": "'baseWidth'"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "%",
                                                                                                        "left": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "y",
                                                                                                                "raw": "'y'"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "0x2"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "/",
                                                                                                        "left": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "baseWidth",
                                                                                                                "raw": "'baseWidth'"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Literal",
                                                                                                            "value": 2,
                                                                                                            "raw": "0x2"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "ExpressionStatement",
                                                                                        "expression": {
                                                                                            "type": "AssignmentExpression",
                                                                                            "operator": "=",
                                                                                            "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                    "type": "ThisExpression"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "pixelY",
                                                                                                    "raw": "'pixelY'"
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "*",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "y",
                                                                                                        "raw": "'y'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "/",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "baseHeight",
                                                                                                            "raw": "'baseHeight'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 2,
                                                                                                        "raw": "0x2"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "alternate": {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x430887"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "CONST"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "HEXAGONAL",
                                                                                "raw": "'HEXAGONAL'"
                                                                            }
                                                                        }
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "!==",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "KrWDA",
                                                                                        "raw": "'KrWDA'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "KrWDA",
                                                                                        "raw": "'KrWDA'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xd44b4d"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "tilemapLayer",
                                                                                                            "raw": "'tilemapLayer'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "ReturnStatement",
                                                                                            "argument": {
                                                                                                "type": "ConditionalExpression",
                                                                                                "test": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_0xd44b4d"
                                                                                                },
                                                                                                "consequent": {
                                                                                                    "type": "CallExpression",
                                                                                                    "callee": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xd44b4d"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "tileToWorldX",
                                                                                                            "raw": "'tileToWorldX'"
                                                                                                        }
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "x",
                                                                                                                "raw": "'x'"
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "camera"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "alternate": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "x",
                                                                                                            "raw": "'x'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "baseWidth",
                                                                                                            "raw": "'baseWidth'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x2f63dc"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "layer",
                                                                                                                "raw": "'layer'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "hexSideLength",
                                                                                                            "raw": "'hexSideLength'"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x30ebd0"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "/",
                                                                                                            "left": {
                                                                                                                "type": "BinaryExpression",
                                                                                                                "operator": "-",
                                                                                                                "left": {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "computed": true,
                                                                                                                    "object": {
                                                                                                                        "type": "ThisExpression"
                                                                                                                    },
                                                                                                                    "property": {
                                                                                                                        "type": "Literal",
                                                                                                                        "value": "baseHeight",
                                                                                                                        "raw": "'baseHeight'"
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x2f63dc"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 2,
                                                                                                                "raw": "0x2"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x2f63dc"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "pixelX",
                                                                                                        "raw": "'pixelX'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "*",
                                                                                                        "left": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "x",
                                                                                                                "raw": "'x'"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "baseWidth",
                                                                                                                "raw": "'baseWidth'"
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "*",
                                                                                                        "left": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "%",
                                                                                                            "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "y",
                                                                                                                    "raw": "'y'"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 2,
                                                                                                                "raw": "0x2"
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "operator": "/",
                                                                                                            "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                    "type": "ThisExpression"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "baseWidth",
                                                                                                                    "raw": "'baseWidth'"
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": 2,
                                                                                                                "raw": "0x2"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "AssignmentExpression",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "ThisExpression"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "pixelY",
                                                                                                        "raw": "'pixelY'"
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "*",
                                                                                                    "left": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "ThisExpression"
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "Literal",
                                                                                                            "value": "y",
                                                                                                            "raw": "'y'"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x30ebd0"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "right",
                                                                    "raw": "'right'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "pixelX",
                                                                        "raw": "'pixelX'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "baseWidth",
                                                                        "raw": "'baseWidth'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "bottom",
                                                                    "raw": "'bottom'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "pixelY",
                                                                        "raw": "'pixelY'"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "baseHeight",
                                                                        "raw": "'baseHeight'"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                            "type": "ThisExpression"
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "destroy",
                                            "raw": "'destroy'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collisionCallback",
                                                                    "raw": "'collisionCallback'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "collisionCallbackContext",
                                                                    "raw": "'collisionCallbackContext'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "properties",
                                                                    "raw": "'properties'"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "generator": false,
                                            "expression": false,
                                            "async": false
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "canCollide",
                                            "raw": "'canCollide'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "||",
                                                                                "left": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideLeft",
                                                                                            "raw": "'collideLeft'"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "collideRight",
                                                                                            "raw": "'collideRight'"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "collideUp",
                                                                                        "raw": "'collideUp'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "collideDown",
                                                                                    "raw": "'collideDown'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!==",
                                                                            "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "collisionCallback",
                                                                                    "raw": "'collisionCallback'"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "undefined"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "collides",
                                            "raw": "'collides'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "||",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "collideLeft",
                                                                                        "raw": "'collideLeft'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "collideRight",
                                                                                        "raw": "'collideRight'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "collideUp",
                                                                                    "raw": "'collideUp'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "collideDown",
                                                                                "raw": "'collideDown'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "hasInterestingFace",
                                            "raw": "'hasInterestingFace'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "LogicalExpression",
                                                                        "operator": "||",
                                                                        "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "||",
                                                                                "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "faceTop",
                                                                                        "raw": "'faceTop'"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "faceBottom",
                                                                                        "raw": "'faceBottom'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "faceLeft",
                                                                                    "raw": "'faceLeft'"
                                                                                }
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "faceRight",
                                                                                "raw": "'faceRight'"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "tileset",
                                            "raw": "'tileset'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x163785"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "ThisExpression"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "layer",
                                                                                        "raw": "'layer'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "tilemapLayer",
                                                                                    "raw": "'tilemapLayer'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x163785"
                                                                    },
                                                                    "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "!==",
                                                                                    "left": {
                                                                                        "type": "Literal",
                                                                                        "value": "YtDuA",
                                                                                        "raw": "'YtDuA'"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "LGbXi",
                                                                                        "raw": "'LGbXi'"
                                                                                    }
                                                                                },
                                                                                "consequent": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0xd58d2a"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "MemberExpression",
                                                                                                        "computed": true,
                                                                                                        "object": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x163785"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "gidMap",
                                                                                                                "raw": "'gidMap'"
                                                                                                            }
                                                                                                        },
                                                                                                        "property": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "ThisExpression"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "index",
                                                                                                                "raw": "'index'"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "IfStatement",
                                                                                            "test": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0xd58d2a"
                                                                                            },
                                                                                            "consequent": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "ReturnStatement",
                                                                                                        "argument": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0xd58d2a"
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "alternate": null
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "alternate": {
                                                                                    "type": "BlockStatement",
                                                                                    "body": [
                                                                                        {
                                                                                            "type": "VariableDeclaration",
                                                                                            "declarations": [
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x21fa28"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "CallExpression",
                                                                                                        "callee": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "5|11|3|2|8|12|10|7|6|9|13|1|4|0",
                                                                                                                "raw": "'5|11|3|2|8|12|10|7|6|9|13|1|4|0'"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "Literal",
                                                                                                                "value": "split",
                                                                                                                "raw": "'split'"
                                                                                                            }
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "Literal",
                                                                                                                "value": "|",
                                                                                                                "raw": "'|'"
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "VariableDeclarator",
                                                                                                    "id": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x18dcb5"
                                                                                                    },
                                                                                                    "init": {
                                                                                                        "type": "Literal",
                                                                                                        "value": 0,
                                                                                                        "raw": "0x0"
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "kind": "var"
                                                                                        },
                                                                                        {
                                                                                            "type": "WhileStatement",
                                                                                            "test": {
                                                                                                "type": "UnaryExpression",
                                                                                                "operator": "!",
                                                                                                "argument": {
                                                                                                    "type": "UnaryExpression",
                                                                                                    "operator": "!",
                                                                                                    "argument": {
                                                                                                        "type": "ArrayExpression",
                                                                                                        "elements": []
                                                                                                    },
                                                                                                    "prefix": true
                                                                                                },
                                                                                                "prefix": true
                                                                                            },
                                                                                            "body": {
                                                                                                "type": "BlockStatement",
                                                                                                "body": [
                                                                                                    {
                                                                                                        "type": "SwitchStatement",
                                                                                                        "discriminant": {
                                                                                                            "type": "MemberExpression",
                                                                                                            "computed": true,
                                                                                                            "object": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x21fa28"
                                                                                                            },
                                                                                                            "property": {
                                                                                                                "type": "UpdateExpression",
                                                                                                                "operator": "++",
                                                                                                                "argument": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_0x18dcb5"
                                                                                                                },
                                                                                                                "prefix": false
                                                                                                            }
                                                                                                        },
                                                                                                        "cases": [
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "0",
                                                                                                                    "raw": "'0'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ReturnStatement",
                                                                                                                        "argument": {
                                                                                                                            "type": "ThisExpression"
                                                                                                                        }
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "1",
                                                                                                                    "raw": "'1'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collisionCallback",
                                                                                                                                    "raw": "'collisionCallback'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collisionCallback",
                                                                                                                                    "raw": "'collisionCallback'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "2",
                                                                                                                    "raw": "'2'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "visible",
                                                                                                                                    "raw": "'visible'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "visible",
                                                                                                                                    "raw": "'visible'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "3",
                                                                                                                    "raw": "'3'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "properties",
                                                                                                                                    "raw": "'properties'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "properties",
                                                                                                                                    "raw": "'properties'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "4",
                                                                                                                    "raw": "'4'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collisionCallbackContext",
                                                                                                                                    "raw": "'collisionCallbackContext'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collisionCallbackContext",
                                                                                                                                    "raw": "'collisionCallbackContext'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "5",
                                                                                                                    "raw": "'5'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "index",
                                                                                                                                    "raw": "'index'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "index",
                                                                                                                                    "raw": "'index'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "6",
                                                                                                                    "raw": "'6'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideDown",
                                                                                                                                    "raw": "'collideDown'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideDown",
                                                                                                                                    "raw": "'collideDown'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "7",
                                                                                                                    "raw": "'7'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideUp",
                                                                                                                                    "raw": "'collideUp'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideUp",
                                                                                                                                    "raw": "'collideUp'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "8",
                                                                                                                    "raw": "'8'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "CallExpression",
                                                                                                                            "callee": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "setFlip",
                                                                                                                                    "raw": "'setFlip'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "arguments": [
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "tile"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "flipX",
                                                                                                                                        "raw": "'flipX'"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "MemberExpression",
                                                                                                                                    "computed": true,
                                                                                                                                    "object": {
                                                                                                                                        "type": "Identifier",
                                                                                                                                        "name": "tile"
                                                                                                                                    },
                                                                                                                                    "property": {
                                                                                                                                        "type": "Literal",
                                                                                                                                        "value": "flipY",
                                                                                                                                        "raw": "'flipY'"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "9",
                                                                                                                    "raw": "'9'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideLeft",
                                                                                                                                    "raw": "'collideLeft'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideLeft",
                                                                                                                                    "raw": "'collideLeft'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "10",
                                                                                                                    "raw": "'10'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "rotation",
                                                                                                                                    "raw": "'rotation'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "rotation",
                                                                                                                                    "raw": "'rotation'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "11",
                                                                                                                    "raw": "'11'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "alpha",
                                                                                                                                    "raw": "'alpha'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "alpha",
                                                                                                                                    "raw": "'alpha'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "12",
                                                                                                                    "raw": "'12'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "tint",
                                                                                                                                    "raw": "'tint'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "tint",
                                                                                                                                    "raw": "'tint'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "SwitchCase",
                                                                                                                "test": {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": "13",
                                                                                                                    "raw": "'13'"
                                                                                                                },
                                                                                                                "consequent": [
                                                                                                                    {
                                                                                                                        "type": "ExpressionStatement",
                                                                                                                        "expression": {
                                                                                                                            "type": "AssignmentExpression",
                                                                                                                            "operator": "=",
                                                                                                                            "left": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "ThisExpression"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideRight",
                                                                                                                                    "raw": "'collideRight'"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "MemberExpression",
                                                                                                                                "computed": true,
                                                                                                                                "object": {
                                                                                                                                    "type": "Identifier",
                                                                                                                                    "name": "tile"
                                                                                                                                },
                                                                                                                                "property": {
                                                                                                                                    "type": "Literal",
                                                                                                                                    "value": "collideRight",
                                                                                                                                    "raw": "'collideRight'"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "ContinueStatement",
                                                                                                                        "label": null
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "BreakStatement",
                                                                                                        "label": null
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "alternate": null
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "Literal",
                                                                        "value": null,
                                                                        "raw": "null"
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "tilemapLayer",
                                            "raw": "'tilemapLayer'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "layer",
                                                                                "raw": "'layer'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "tilemapLayer",
                                                                            "raw": "'tilemapLayer'"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    },
                                    {
                                        "type": "Property",
                                        "key": {
                                            "type": "Literal",
                                            "value": "tilemap",
                                            "raw": "'tilemap'"
                                        },
                                        "computed": false,
                                        "value": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                                {
                                                    "type": "Property",
                                                    "key": {
                                                        "type": "Literal",
                                                        "value": "get",
                                                        "raw": "'get'"
                                                    },
                                                    "computed": false,
                                                    "value": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "declarations": [
                                                                        {
                                                                            "type": "VariableDeclarator",
                                                                            "id": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5cd211"
                                                                            },
                                                                            "init": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "ThisExpression"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "tilemapLayer",
                                                                                    "raw": "'tilemapLayer'"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "kind": "var"
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                        "type": "ConditionalExpression",
                                                                        "test": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5cd211"
                                                                        },
                                                                        "consequent": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5cd211"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "tilemap",
                                                                                "raw": "'tilemap'"
                                                                            }
                                                                        },
                                                                        "alternate": {
                                                                            "type": "Literal",
                                                                            "value": null,
                                                                            "raw": "null"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "generator": false,
                                                        "expression": false,
                                                        "async": false
                                                    },
                                                    "kind": "init",
                                                    "method": false,
                                                    "shorthand": false
                                                }
                                            ]
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "module"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "exports",
                        "raw": "'exports'"
                    }
                },
                "right": {
                    "type": "Identifier",
                    "name": "Tile"
                }
            }
        }
    ],
    "sourceType": "script"
}