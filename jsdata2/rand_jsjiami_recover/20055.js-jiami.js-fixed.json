{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Test"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                                {
                                    "type": "Identifier",
                                    "name": "_0x35a1f6"
                                }
                            ],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "Literal",
                                            "value": "use strict",
                                            "raw": "'use strict'"
                                        },
                                        "directive": "use strict"
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "babelHelpers"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "inherits",
                                                    "raw": "'inherits'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x30d8b7"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x35a1f6"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0x4ea6a2"
                                                },
                                                "init": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "babelHelpers"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "createSuper",
                                                            "raw": "'createSuper'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x30d8b7"
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x30d8b7"
                                        },
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x24b1b9"
                                                            },
                                                            "init": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Literal",
                                                                        "value": "4|2|0|1|3|5",
                                                                        "raw": "'4|2|0|1|3|5'"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "split",
                                                                        "raw": "'split'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Literal",
                                                                        "value": "|",
                                                                        "raw": "'|'"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x54fa05"
                                                            },
                                                            "init": {
                                                                "type": "Literal",
                                                                "value": 0,
                                                                "raw": "0x0"
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "WhileStatement",
                                                    "test": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                                "type": "ArrayExpression",
                                                                "elements": []
                                                            },
                                                            "prefix": true
                                                        },
                                                        "prefix": true
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "SwitchStatement",
                                                                "discriminant": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x24b1b9"
                                                                    },
                                                                    "property": {
                                                                        "type": "UpdateExpression",
                                                                        "operator": "++",
                                                                        "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x54fa05"
                                                                        },
                                                                        "prefix": false
                                                                    }
                                                                },
                                                                "cases": [
                                                                    {
                                                                        "type": "SwitchCase",
                                                                        "test": {
                                                                            "type": "Literal",
                                                                            "value": "0",
                                                                            "raw": "'0'"
                                                                        },
                                                                        "consequent": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "AssignmentExpression",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x38471c"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x4ea6a2"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "call",
                                                                                                "raw": "'call'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "ThisExpression"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ContinueStatement",
                                                                                "label": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "SwitchCase",
                                                                        "test": {
                                                                            "type": "Literal",
                                                                            "value": "1",
                                                                            "raw": "'1'"
                                                                        },
                                                                        "consequent": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x35a1f6"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "prototype",
                                                                                            "raw": "'prototype'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "test",
                                                                                        "raw": "'test'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ContinueStatement",
                                                                                "label": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "SwitchCase",
                                                                        "test": {
                                                                            "type": "Literal",
                                                                            "value": "2",
                                                                            "raw": "'2'"
                                                                        },
                                                                        "consequent": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "babelHelpers"
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "classCallCheck",
                                                                                            "raw": "'classCallCheck'"
                                                                                        }
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "ThisExpression"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x30d8b7"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ContinueStatement",
                                                                                "label": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "SwitchCase",
                                                                        "test": {
                                                                            "type": "Literal",
                                                                            "value": "3",
                                                                            "raw": "'3'"
                                                                        },
                                                                        "consequent": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_0x35a1f6"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "prototype",
                                                                                                "raw": "'prototype'"
                                                                                            }
                                                                                        },
                                                                                        "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "test",
                                                                                            "raw": "'test'"
                                                                                        }
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "whatever",
                                                                                        "raw": "'whatever'"
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ContinueStatement",
                                                                                "label": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "SwitchCase",
                                                                        "test": {
                                                                            "type": "Literal",
                                                                            "value": "4",
                                                                            "raw": "'4'"
                                                                        },
                                                                        "consequent": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x38471c"
                                                                                        },
                                                                                        "init": null
                                                                                    }
                                                                                ],
                                                                                "kind": "var"
                                                                            },
                                                                            {
                                                                                "type": "ContinueStatement",
                                                                                "label": null
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "type": "SwitchCase",
                                                                        "test": {
                                                                            "type": "Literal",
                                                                            "value": "5",
                                                                            "raw": "'5'"
                                                                        },
                                                                        "consequent": [
                                                                            {
                                                                                "type": "ReturnStatement",
                                                                                "argument": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x38471c"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "BreakStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x30d8b7"
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "arguments": [
                            {
                                "type": "Identifier",
                                "name": "Foo"
                            }
                        ]
                    }
                }
            ],
            "kind": "var"
        }
    ],
    "sourceType": "script"
}