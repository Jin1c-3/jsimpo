{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "ObjectPattern",
                        "properties": [
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "session"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "session"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "contextGroup"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "contextGroup"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            },
                            {
                                "type": "Property",
                                "key": {
                                    "type": "Identifier",
                                    "name": "Protocol"
                                },
                                "computed": false,
                                "value": {
                                    "type": "Identifier",
                                    "name": "Protocol"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                            }
                        ]
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "InspectorTest"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "start",
                                "raw": "'start'"
                            }
                        },
                        "arguments": [
                            {
                                "type": "Literal",
                                "value": "Checks breakProgram,(schedule|cancel)PauseOnNextStatement test API",
                                "raw": "'Checks breakProgram,(schedule|cancel)PauseOnNextStatement test API'"
                            }
                        ]
                    }
                }
            ],
            "kind": "let"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "contextGroup"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "addScript",
                        "raw": "'addScript'"
                    }
                },
                "arguments": [
                    {
                        "type": "Literal",
                        "value": "\nfunction callBreakProgram() {\n  inspector.breakProgram('reason', JSON.stringify({a: 42}));\n}\n\nfunction foo() {\n  return 42;\n}",
                        "raw": "'\nfunction callBreakProgram() {\n  inspector.breakProgram('reason', JSON.stringify({a: 42}));\n}\n\nfunction foo() {\n  return 42;\n}'"
                    },
                    {
                        "type": "Literal",
                        "value": 7,
                        "raw": "0x7"
                    },
                    {
                        "type": "Literal",
                        "value": 26,
                        "raw": "0x1a"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "session"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "setupScriptMap",
                        "raw": "'setupScriptMap'"
                    }
                },
                "arguments": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Protocol"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "Debugger",
                            "raw": "'Debugger'"
                        }
                    },
                    "property": {
                        "type": "Literal",
                        "value": "onPaused",
                        "raw": "'onPaused'"
                    }
                },
                "arguments": [
                    {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                            {
                                "type": "Identifier",
                                "name": "_0x5751d1"
                            }
                        ],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x46ca78"
                                            },
                                            "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Literal",
                                                        "value": "3|1|2|4|0|6|5",
                                                        "raw": "'3|1|2|4|0|6|5'"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "split",
                                                        "raw": "'split'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "|",
                                                        "raw": "'|'"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x273fd0"
                                            },
                                            "init": {
                                                "type": "Literal",
                                                "value": 0,
                                                "raw": "0x0"
                                            }
                                        }
                                    ],
                                    "kind": "var"
                                },
                                {
                                    "type": "WhileStatement",
                                    "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                                "type": "ArrayExpression",
                                                "elements": []
                                            },
                                            "prefix": true
                                        },
                                        "prefix": true
                                    },
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "SwitchStatement",
                                                "discriminant": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x46ca78"
                                                    },
                                                    "property": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x273fd0"
                                                        },
                                                        "prefix": false
                                                    }
                                                },
                                                "cases": [
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "0",
                                                            "raw": "'0'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "InspectorTest"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "logMessage",
                                                                            "raw": "'logMessage'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5751d1"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "1",
                                                            "raw": "'1'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "session"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "logCallFrames",
                                                                            "raw": "'logCallFrames'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_0x5751d1"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "params",
                                                                                    "raw": "'params'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "callFrames",
                                                                                "raw": "'callFrames'"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "2",
                                                            "raw": "'2'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "delete",
                                                                    "argument": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "_0x5751d1"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "params",
                                                                                "raw": "'params'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "callFrames",
                                                                            "raw": "'callFrames'"
                                                                        }
                                                                    },
                                                                    "prefix": true
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "3",
                                                            "raw": "'3'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "InspectorTest"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "log",
                                                                            "raw": "'log'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Stack:",
                                                                            "raw": "'Stack:'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "4",
                                                            "raw": "'4'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "InspectorTest"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "log",
                                                                            "raw": "'log'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "Other data:",
                                                                            "raw": "'Other data:'"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "5",
                                                            "raw": "'5'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Protocol"
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "Debugger",
                                                                                "raw": "'Debugger'"
                                                                            }
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "resume",
                                                                            "raw": "'resume'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                            "type": "Literal",
                                                            "value": "6",
                                                            "raw": "'6'"
                                                        },
                                                        "consequent": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "InspectorTest"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "log",
                                                                            "raw": "'log'"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "value": "",
                                                                            "raw": "''"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "type": "ContinueStatement",
                                                                "label": null
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "BreakStatement",
                                                "label": null
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Protocol"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "Debugger",
                            "raw": "'Debugger'"
                        }
                    },
                    "property": {
                        "type": "Literal",
                        "value": "enable",
                        "raw": "'enable'"
                    }
                },
                "arguments": []
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "Identifier",
                        "name": "InspectorTest"
                    },
                    "property": {
                        "type": "Literal",
                        "value": "runTestSuite",
                        "raw": "'runTestSuite'"
                    }
                },
                "arguments": [
                    {
                        "type": "ArrayExpression",
                        "elements": [
                            {
                                "type": "FunctionExpression",
                                "id": {
                                    "type": "Identifier",
                                    "name": "testBreakProgram"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x170234"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Protocol"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "Runtime",
                                                                    "raw": "'Runtime'"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "evaluate",
                                                                "raw": "'evaluate'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "expression",
                                                                            "raw": "'expression'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": "callBreakProgram()",
                                                                            "raw": "'callBreakProgram()'"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "then",
                                                        "raw": "'then'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x170234"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "FunctionExpression",
                                "id": {
                                    "type": "Identifier",
                                    "name": "testSchedulePauseOnNextStatement"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x5dac38"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "contextGroup"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "schedulePauseOnNextStatement",
                                                        "raw": "'schedulePauseOnNextStatement'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "reason",
                                                        "raw": "'reason'"
                                                    },
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "JSON"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "stringify",
                                                                "raw": "'stringify'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "a",
                                                                            "raw": "'a'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": 42,
                                                                            "raw": "0x2a"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Protocol"
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "Runtime",
                                                                                    "raw": "'Runtime'"
                                                                                }
                                                                            },
                                                                            "property": {
                                                                                "type": "Literal",
                                                                                "value": "evaluate",
                                                                                "raw": "'evaluate'"
                                                                            }
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "ObjectExpression",
                                                                                "properties": [
                                                                                    {
                                                                                        "type": "Property",
                                                                                        "key": {
                                                                                            "type": "Literal",
                                                                                            "value": "expression",
                                                                                            "raw": "'expression'"
                                                                                        },
                                                                                        "computed": false,
                                                                                        "value": {
                                                                                            "type": "Literal",
                                                                                            "value": "foo()//# sourceURL=expr1.js",
                                                                                            "raw": "'foo()//# sourceURL=expr1.js'"
                                                                                        },
                                                                                        "kind": "init",
                                                                                        "method": false,
                                                                                        "shorthand": false
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "then",
                                                                        "raw": "'then'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "ArrowFunctionExpression",
                                                                        "id": null,
                                                                        "params": [],
                                                                        "body": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Protocol"
                                                                                    },
                                                                                    "property": {
                                                                                        "type": "Literal",
                                                                                        "value": "Runtime",
                                                                                        "raw": "'Runtime'"
                                                                                    }
                                                                                },
                                                                                "property": {
                                                                                    "type": "Literal",
                                                                                    "value": "evaluate",
                                                                                    "raw": "'evaluate'"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "ObjectExpression",
                                                                                    "properties": [
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "key": {
                                                                                                "type": "Literal",
                                                                                                "value": "expression",
                                                                                                "raw": "'expression'"
                                                                                            },
                                                                                            "computed": false,
                                                                                            "value": {
                                                                                                "type": "Literal",
                                                                                                "value": "foo()//# sourceURL=expr2.js",
                                                                                                "raw": "'foo()//# sourceURL=expr2.js'"
                                                                                            },
                                                                                            "kind": "init",
                                                                                            "method": false,
                                                                                            "shorthand": false
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "generator": false,
                                                                        "expression": true,
                                                                        "async": false
                                                                    }
                                                                ]
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "then",
                                                                "raw": "'then'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ArrowFunctionExpression",
                                                                "id": null,
                                                                "params": [],
                                                                "body": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "contextGroup"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "cancelPauseOnNextStatement",
                                                                            "raw": "'cancelPauseOnNextStatement'"
                                                                        }
                                                                    },
                                                                    "arguments": []
                                                                },
                                                                "generator": false,
                                                                "expression": true,
                                                                "async": false
                                                            }
                                                        ]
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "then",
                                                        "raw": "'then'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x5dac38"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            },
                            {
                                "type": "FunctionExpression",
                                "id": {
                                    "type": "Identifier",
                                    "name": "testCancelPauseOnNextStatement"
                                },
                                "params": [
                                    {
                                        "type": "Identifier",
                                        "name": "_0x5844c5"
                                    }
                                ],
                                "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "contextGroup"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "schedulePauseOnNextStatement",
                                                        "raw": "'schedulePauseOnNextStatement'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": "reason",
                                                        "raw": "'reason'"
                                                    },
                                                    {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "JSON"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "stringify",
                                                                "raw": "'stringify'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "a",
                                                                            "raw": "'a'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": 42,
                                                                            "raw": "0x2a"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "contextGroup"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "cancelPauseOnNextStatement",
                                                        "raw": "'cancelPauseOnNextStatement'"
                                                    }
                                                },
                                                "arguments": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Protocol"
                                                                },
                                                                "property": {
                                                                    "type": "Literal",
                                                                    "value": "Runtime",
                                                                    "raw": "'Runtime'"
                                                                }
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "evaluate",
                                                                "raw": "'evaluate'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                    {
                                                                        "type": "Property",
                                                                        "key": {
                                                                            "type": "Literal",
                                                                            "value": "expression",
                                                                            "raw": "'expression'"
                                                                        },
                                                                        "computed": false,
                                                                        "value": {
                                                                            "type": "Literal",
                                                                            "value": "foo()",
                                                                            "raw": "'foo()'"
                                                                        },
                                                                        "kind": "init",
                                                                        "method": false,
                                                                        "shorthand": false
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "then",
                                                        "raw": "'then'"
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_0x5844c5"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "generator": false,
                                "expression": false,
                                "async": false
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}