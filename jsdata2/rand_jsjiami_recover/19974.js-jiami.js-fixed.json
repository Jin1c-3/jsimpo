{
    "type": "Program",
    "body": [
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Test"
                    },
                    "init": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "Literal",
                                            "value": "use strict",
                                            "raw": "'use strict'"
                                        }
                                    },
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x22dccb"
                                        },
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "babelHelpers"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "classCallCheck",
                                                                "raw": "'classCallCheck'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "ThisExpression"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_0x22dccb"
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "babelHelpers"
                                                            },
                                                            "property": {
                                                                "type": "Literal",
                                                                "value": "get",
                                                                "raw": "'get'"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "babelHelpers"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": "getPrototypeOf",
                                                                        "raw": "'getPrototypeOf'"
                                                                    }
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x22dccb"
                                                                        },
                                                                        "property": {
                                                                            "type": "Literal",
                                                                            "value": "prototype",
                                                                            "raw": "'prototype'"
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "constructor",
                                                                "raw": "'constructor'"
                                                            },
                                                            {
                                                                "type": "ThisExpression"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "babelHelpers"
                                                },
                                                "property": {
                                                    "type": "Literal",
                                                    "value": "createClass",
                                                    "raw": "'createClass'"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_0x22dccb"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": null,
                                                    "raw": "null"
                                                },
                                                {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                        {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "key",
                                                                        "raw": "'key'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "Literal",
                                                                        "value": "test",
                                                                        "raw": "'test'"
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "key": {
                                                                        "type": "Literal",
                                                                        "value": "value",
                                                                        "raw": "'value'"
                                                                    },
                                                                    "computed": false,
                                                                    "value": {
                                                                        "type": "FunctionExpression",
                                                                        "id": {
                                                                            "type": "Identifier",
                                                                            "name": "test"
                                                                        },
                                                                        "params": [],
                                                                        "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "argument": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": true,
                                                                                            "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "babelHelpers"
                                                                                            },
                                                                                            "property": {
                                                                                                "type": "Literal",
                                                                                                "value": "get",
                                                                                                "raw": "'get'"
                                                                                            }
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": true,
                                                                                                    "object": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "babelHelpers"
                                                                                                    },
                                                                                                    "property": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "getPrototypeOf",
                                                                                                        "raw": "'getPrototypeOf'"
                                                                                                    }
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_0x22dccb"
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "type": "Literal",
                                                                                                "value": "constructor",
                                                                                                "raw": "'constructor'"
                                                                                            },
                                                                                            {
                                                                                                "type": "ThisExpression"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "generator": false,
                                                                        "expression": false,
                                                                        "async": false
                                                                    },
                                                                    "kind": "init",
                                                                    "method": false,
                                                                    "shorthand": false
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "ReturnStatement",
                                        "argument": {
                                            "type": "Identifier",
                                            "name": "_0x22dccb"
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "arguments": []
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Object"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "getPrototypeOf",
                                        "raw": "'getPrototypeOf'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Test"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "prototype",
                                            "raw": "'prototype'"
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Object"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "prototype",
                            "raw": "'prototype'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "NewExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "Test"
                                },
                                "arguments": []
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Object"
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Object"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "getPrototypeOf",
                                        "raw": "'getPrototypeOf'"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "Test"
                                    }
                                ]
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Function"
                        },
                        "property": {
                            "type": "Literal",
                            "value": "prototype",
                            "raw": "'prototype'"
                        }
                    }
                ]
            }
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "CallExpression",
                "callee": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "expect"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "Test"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "test",
                                        "raw": "'test'"
                                    }
                                },
                                "arguments": []
                            }
                        ]
                    },
                    "property": {
                        "type": "Literal",
                        "value": "toBe",
                        "raw": "'toBe'"
                    }
                },
                "arguments": [
                    {
                        "type": "Identifier",
                        "name": "Function"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}