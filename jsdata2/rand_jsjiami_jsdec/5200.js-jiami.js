var assert=require('assert');var util=require('../../');suite('inspect');test('util.inspect - test for sparse array',function(){var _0x5c9918={'FczxY':'0|4|5|2|3|1','elhzS':'foo','lYGRO':'baz','aWPOG':'[\x20\x27foo\x27,\x20,\x20\x27baz\x27\x20]','RAQpm':'[ \'foo\', , \'baz\', [length]: 3 ]'};var _0x4f5db7=_0x5c9918['FczxY']['split']('|'),_0x55ef64=0x0;while(!![]){switch(_0x4f5db7[_0x55ef64++]){case'0':var _0x50ea44=[_0x5c9918['elhzS'],'bar',_0x5c9918['lYGRO']];continue;case'1':assert['equal'](util['inspect'](new Array(0x5)),'[ , , , ,  ]');continue;case'2':assert['equal'](util['inspect'](_0x50ea44),_0x5c9918['aWPOG']);continue;case'3':assert['equal'](util['inspect'](_0x50ea44,!![]),_0x5c9918['RAQpm']);continue;case'4':assert['equal'](util['inspect'](_0x50ea44),'[ \'foo\', \'bar\', \'baz\' ]');continue;case'5':delete _0x50ea44[0x1];continue;}break;}});test('util.inspect -  exceptions should print the error message, not \'{}\'',function(){var _0x153d1c={'dTvee':'[Error]','vHjUf':'FAIL','SUxZB':'[TypeError: FAIL]','cletG':'[SyntaxError: FAIL]'};assert['equal'](util['inspect'](new Error()),_0x153d1c['dTvee']);assert['equal'](util['inspect'](new Error('FAIL')),'[Error:\x20FAIL]');assert['equal'](util['inspect'](new TypeError(_0x153d1c['vHjUf'])),_0x153d1c['SUxZB']);assert['equal'](util['inspect'](new SyntaxError('FAIL')),_0x153d1c['cletG']);});