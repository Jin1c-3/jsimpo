import{join}from'path';import{createServer}from'http';import{fetchViaHTTP,nextBuild,findPort,nextStart,launchApp,killApp}from'next-test-utils';import _0x256093 from'next-webdriver';jest['setTimeout'](0x3e8*0x3c*0x1);const appDir=join(__dirname,'../');let appPort;let app;let mockServer;describe('node-fetch-keep-alive',()=>{var nxUxPQ={'ZaSxR':function(callee,param1){return callee(param1);},'ayqWt':function(callee){return callee();},'oZmyC':function(callee,param1,param2){return callee(param1,param2);},'fKRsM':function(callee){return callee();},'zolJN':function(callee,param1){return callee(param1);},'mAwtR':function(callee,param1,param2,param3){return callee(param1,param2,param3);},'TSMmO':function(callee,param1){return callee(param1);},'cOpob':function(callee,param1,param2){return callee(param1,param2);},'UelZw':'/api/json','mzlQs':function(callee,param1){return callee(param1);},'okSEH':function(callee,param1,param2){return callee(param1,param2);},'UldeY':'/ssg','jaepy':'props','OcnkW':function(callee,param1,param2){return callee(param1,param2);},'xMsOq':'should send keep-alive for json API','mbTlA':function(callee,param1,param2){return callee(param1,param2);},'XTjZr':'should\x20send\x20keep-alive\x20for\x20getStaticProps','ZAhSY':function(callee,param1,param2){return callee(param1,param2);},'MIsdq':function(callee,param1,param2){return callee(param1,param2);},'fWePl':'should send keep-alive for getServerSideProps','DgXpJ':function(callee,param1,param2){return callee(param1,param2);},'GQWLf':function(callee,param1,param2){return callee(param1,param2);},'dqXot':'production'};nxUxPQ['DgXpJ'](describe,'dev',()=>{var sePbdr={'efJyk':function(callee,param1){return callee(param1);}};nxUxPQ['ZaSxR'](beforeAll,async()=>{mockServer=nxUxPQ['ZaSxR'](createServer,(req,res)=>{const {connection}=req['headers'];res['end'](JSON['stringify']({'connection':connection}));});mockServer['listen'](0xabe1);appPort=await nxUxPQ['ayqWt'](findPort);app=await nxUxPQ['oZmyC'](launchApp,appDir,appPort);});nxUxPQ['ZaSxR'](afterAll,async()=>{await sePbdr['efJyk'](killApp,app);mockServer['close']();});nxUxPQ['fKRsM'](runTests);});nxUxPQ['GQWLf'](describe,nxUxPQ['dqXot'],()=>{var IJfnJz={'pwRGF':function(callee,param1){return nxUxPQ['zolJN'](callee,param1);},'JgaTs':function(callee,param1,param2,param3){return nxUxPQ['mAwtR'](callee,param1,param2,param3);},'lccnR':function(callee){return nxUxPQ['fKRsM'](callee);},'zarwZ':function(callee,param1,param2){return callee(param1,param2);}};nxUxPQ['TSMmO'](beforeAll,async()=>{mockServer=IJfnJz['pwRGF'](createServer,(req,res)=>{const {connection}=req['headers'];res['end'](JSON['stringify']({'connection':connection}));});mockServer['listen'](0xabe1);const {stdout,stderr}=await IJfnJz['JgaTs'](nextBuild,appDir,[],{'stdout':!![],'stderr':!![]});if(stdout)console['log'](stdout);if(stderr)console['error'](stderr);appPort=await IJfnJz['lccnR'](findPort);app=await IJfnJz['zarwZ'](nextStart,appDir,appPort);});afterAll(async()=>{await killApp(app);mockServer['close']();});nxUxPQ['fKRsM'](runTests);});function runTests(){var aBXKOQ={'THPXE':'props','JqKzs':function(callee,param1){return callee(param1);},'eYzxt':'keep-alive'};nxUxPQ['OcnkW'](it,nxUxPQ['xMsOq'],async()=>{const res=await nxUxPQ['cOpob'](fetchViaHTTP,appPort,nxUxPQ['UelZw']);const obj=await res['json']();nxUxPQ['mzlQs'](expect,obj)['toEqual']({'connection':'keep-alive'});});nxUxPQ['mbTlA'](it,nxUxPQ['XTjZr'],async()=>{const browser=await nxUxPQ['okSEH'](_0x256093,appPort,nxUxPQ['UldeY']);const props=await browser['elementById'](nxUxPQ['jaepy'])['text']();const obj=JSON['parse'](props);nxUxPQ['mzlQs'](expect,obj)['toEqual']({'connection':'keep-alive'});await browser['close']();});nxUxPQ['ZAhSY'](it,'should send keep-alive for getStaticPaths',async()=>{const browser=await _0x256093(appPort,'/blog/first');const props=await browser['elementById']('props')['text']();const obj=JSON['parse'](props);expect(obj)['toEqual']({'slug':'first'});await browser['close']();});nxUxPQ['MIsdq'](it,nxUxPQ['fWePl'],async()=>{const browser=await _0x256093(appPort,'/ssr');const props=await browser['elementById'](aBXKOQ['THPXE'])['text']();const obj=JSON['parse'](props);aBXKOQ['JqKzs'](expect,obj)['toEqual']({'connection':aBXKOQ['eYzxt']});await browser['close']();});}});