export class TokenType{constructor(_0x465ad1,_0x1c3e7d={}){var _0x32229c='3|7|2|0|8|9|1|5|4|6'['split']('|'),_0xfb6b03=0x0;while(!![]){switch(_0x32229c[_0xfb6b03++]){case'0':this['startsExpr']=!!_0x1c3e7d['startsExpr'];continue;case'1':this['prefix']=!!_0x1c3e7d['prefix'];continue;case'2':this['beforeExpr']=!!_0x1c3e7d['beforeExpr'];continue;case'3':this['label']=_0x465ad1;continue;case'4':this['binop']=_0x1c3e7d['binop']||null;continue;case'5':this['postfix']=!!_0x1c3e7d['postfix'];continue;case'6':this['updateContext']=null;continue;case'7':this['keyword']=_0x1c3e7d['keyword'];continue;case'8':this['isLoop']=!!_0x1c3e7d['isLoop'];continue;case'9':this['isAssign']=!!_0x1c3e7d['isAssign'];continue;}break;}}}function binop(_0x4e8421,_0x495384){return new TokenType(_0x4e8421,{'beforeExpr':!![],'binop':_0x495384});}const beforeExpr={'beforeExpr':!![]},startsExpr={'startsExpr':!![]};export const keywords={};function kw(_0x50e6c8,_0x536977={}){_0x536977['keyword']=_0x50e6c8;return keywords[_0x50e6c8]=new TokenType(_0x50e6c8,_0x536977);}export const types={'num':new TokenType('num',startsExpr),'regexp':new TokenType('regexp',startsExpr),'string':new TokenType('string',startsExpr),'name':new TokenType('name',startsExpr),'eof':new TokenType('eof'),'bracketL':new TokenType('[',{'beforeExpr':!![],'startsExpr':!![]}),'bracketR':new TokenType(']'),'braceL':new TokenType('{',{'beforeExpr':!![],'startsExpr':!![]}),'braceR':new TokenType('}'),'parenL':new TokenType('(',{'beforeExpr':!![],'startsExpr':!![]}),'parenR':new TokenType(')'),'comma':new TokenType(',',beforeExpr),'semi':new TokenType(';',beforeExpr),'colon':new TokenType(':',beforeExpr),'dot':new TokenType('.'),'question':new TokenType('?',beforeExpr),'arrow':new TokenType('=>',beforeExpr),'template':new TokenType('template'),'invalidTemplate':new TokenType('invalidTemplate'),'ellipsis':new TokenType('...',beforeExpr),'backQuote':new TokenType('`',startsExpr),'dollarBraceL':new TokenType('${',{'beforeExpr':!![],'startsExpr':!![]}),'eq':new TokenType('=',{'beforeExpr':!![],'isAssign':!![]}),'assign':new TokenType('_=',{'beforeExpr':!![],'isAssign':!![]}),'incDec':new TokenType('++/--',{'prefix':!![],'postfix':!![],'startsExpr':!![]}),'prefix':new TokenType('!/~',{'beforeExpr':!![],'prefix':!![],'startsExpr':!![]}),'logicalOR':binop('||',0x1),'logicalAND':binop('&&',0x2),'bitwiseOR':binop('|',0x3),'bitwiseXOR':binop('^',0x4),'bitwiseAND':binop('&',0x5),'equality':binop('==/!=/===/!==',0x6),'relational':binop('</>/<=/>=',0x7),'bitShift':binop('<</>>/>>>',0x8),'plusMin':new TokenType('+/-',{'beforeExpr':!![],'binop':0x9,'prefix':!![],'startsExpr':!![]}),'modulo':binop('%',0xa),'star':binop('*',0xa),'slash':binop('/',0xa),'starstar':new TokenType('**',{'beforeExpr':!![]}),'_break':kw('break'),'_case':kw('case',beforeExpr),'_catch':kw('catch'),'_continue':kw('continue'),'_debugger':kw('debugger'),'_default':kw('default',beforeExpr),'_do':kw('do',{'isLoop':!![],'beforeExpr':!![]}),'_else':kw('else',beforeExpr),'_finally':kw('finally'),'_for':kw('for',{'isLoop':!![]}),'_function':kw('function',startsExpr),'_if':kw('if'),'_return':kw('return',beforeExpr),'_switch':kw('switch'),'_throw':kw('throw',beforeExpr),'_try':kw('try'),'_var':kw('var'),'_const':kw('const'),'_while':kw('while',{'isLoop':!![]}),'_with':kw('with'),'_new':kw('new',{'beforeExpr':!![],'startsExpr':!![]}),'_this':kw('this',startsExpr),'_super':kw('super',startsExpr),'_class':kw('class',startsExpr),'_extends':kw('extends',beforeExpr),'_export':kw('export'),'_import':kw('import',startsExpr),'_null':kw('null',startsExpr),'_true':kw('true',startsExpr),'_false':kw('false',startsExpr),'_in':kw('in',{'beforeExpr':!![],'binop':0x7}),'_instanceof':kw('instanceof',{'beforeExpr':!![],'binop':0x7}),'_typeof':kw('typeof',{'beforeExpr':!![],'prefix':!![],'startsExpr':!![]}),'_void':kw('void',{'beforeExpr':!![],'prefix':!![],'startsExpr':!![]}),'_delete':kw('delete',{'beforeExpr':!![],'prefix':!![],'startsExpr':!![]})};