'use strict';const common=require('../common');const assert=require('assert');const domain=require('domain');const d=new domain[('Domain')]();d['on']('error',common['mustCall'](_0x14b461=>{var _0x3bd1b9='0|2|1|4|3'['split']('|'),_0x537074=0x0;while(!![]){switch(_0x3bd1b9[_0x537074++]){case'0':assert['strictEqual'](_0x14b461['message'],'foobar');continue;case'1':assert['strictEqual'](_0x14b461['domainEmitter'],undefined);continue;case'2':assert['strictEqual'](_0x14b461['domain'],d);continue;case'3':assert['strictEqual'](_0x14b461['domainThrown'],!![]);continue;case'4':assert['strictEqual'](_0x14b461['domainBound'],undefined);continue;}break;}}));d['run'](common['mustCall'](()=>{process['nextTick'](common['mustCall'](()=>{throw new Error('foobar');}));}));