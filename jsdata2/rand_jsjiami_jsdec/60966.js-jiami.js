load('test/mjsunit/wasm/wasm-module-builder.js');const builder=new WasmModuleBuilder();builder['addType'](makeSig([kWasmI32,kWasmI32,kWasmI32],[kWasmI32]));builder['addFunction'](undefined,0x0)['addLocals'](kWasmI32,0x2)['addLocals'](kWasmF32,0x2)['addBodyWithEnd']([kExprI32Const,0x0,kExprI32Const,0x0,kExprI32Const,0xf9,0x0,kExprI32Ior,kExprI32Eqz,kExprI32Add,kSimdPrefix,kExprI32x4Splat,kExprF32Const,0x46,0x5d,0x0,0x0,kExprI32Const,0x83,0x1,kExprI32Const,0x83,0x1,kExprI32Const,0x83,0x1,kExprI32Add,kExprI32Add,kExprIf,kWasmI32,kExprI32Const,0x0,kExprElse,kExprI32Const,0x0,kExprEnd,kExprIf,kWasmI32,kExprI32Const,0x0,kExprElse,kExprI32Const,0x0,kExprEnd,kExprF32ReinterpretI32,kExprF32Max,kSimdPrefix,kExprF32x4Splat,kExprI32Const,0x83,0x1,kSimdPrefix,kExprI32x4Splat,kSimdPrefix,kExprI32x4Eq,kSimdPrefix,kExprI32x4Eq,kSimdPrefix,kExprV128AnyTrue,kExprEnd]);builder['addExport']('main',0x0);const instance=builder['instantiate']();print(instance['exports']['main'](0x1,0x2,0x3));