{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": {
                                "type": "Identifier",
                                "name": "sloppyPackedArguments"
                            },
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x4f326a"
                                        },
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x5614e4"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ForStatement",
                                                    "init": {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x324629"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x324629"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "0x2"
                                                        }
                                                    },
                                                    "update": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x324629"
                                                        },
                                                        "prefix": false
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x5614e4"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x324629"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0x47c6b9"
                                                },
                                                "init": null
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x3ee244"
                                        },
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x240a30"
                                                            },
                                                            "init": {
                                                                "type": "Identifier",
                                                                "name": "arguments"
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "SequenceExpression",
                                                        "expressions": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x4f326a"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x240a30"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x47c6b9"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x240a30"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": 5,
                                                                        "raw": "0x5"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertEquals"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "undefined"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x47c6b9"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "SequenceExpression",
                                            "expressions": [
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x4f326a"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x3ee244"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "arguments": []
                    },
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "FunctionExpression",
                            "id": {
                                "type": "Identifier",
                                "name": "strictPackedArguments"
                            },
                            "params": [],
                            "body": {
                                "type": "BlockStatement",
                                "body": [
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "Literal",
                                            "value": "use strict",
                                            "raw": "'use strict'"
                                        },
                                        "directive": "use strict"
                                    },
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x76e183"
                                        },
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x2208ee"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ForStatement",
                                                    "init": {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                            {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3157e"
                                                                },
                                                                "init": {
                                                                    "type": "Literal",
                                                                    "value": 0,
                                                                    "raw": "0x0"
                                                                }
                                                            }
                                                        ],
                                                        "kind": "var"
                                                    },
                                                    "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x3157e"
                                                        },
                                                        "right": {
                                                            "type": "Literal",
                                                            "value": 2,
                                                            "raw": "0x2"
                                                        }
                                                    },
                                                    "update": {
                                                        "type": "UpdateExpression",
                                                        "operator": "++",
                                                        "argument": {
                                                            "type": "Identifier",
                                                            "name": "_0x3157e"
                                                        },
                                                        "prefix": false
                                                    },
                                                    "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x2208ee"
                                                                        },
                                                                        "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_0x3157e"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Literal",
                                                                        "value": 0,
                                                                        "raw": "0x0"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                            {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                    "type": "Identifier",
                                                    "name": "_0x5a25d7"
                                                },
                                                "init": null
                                            }
                                        ],
                                        "kind": "var"
                                    },
                                    {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                            "type": "Identifier",
                                            "name": "_0x36317c"
                                        },
                                        "params": [],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x103c10"
                                                            },
                                                            "init": {
                                                                "type": "Identifier",
                                                                "name": "arguments"
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "SequenceExpression",
                                                        "expressions": [
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x76e183"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x103c10"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5a25d7"
                                                                },
                                                                "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_0x103c10"
                                                                    },
                                                                    "property": {
                                                                        "type": "Literal",
                                                                        "value": 5,
                                                                        "raw": "0x5"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "assertEquals"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "undefined"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_0x5a25d7"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    },
                                    {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "SequenceExpression",
                                            "expressions": [
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x76e183"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "ArrayExpression",
                                                            "elements": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0x36317c"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 1,
                                                            "raw": "0x1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                        },
                        "arguments": []
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}