{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x64ef"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x16df84"
                },
                {
                    "type": "Identifier",
                    "name": "_0xbbeb1b"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x64ef"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x35550f"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x64ef12"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x35550f"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x35550f"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 469,
                                                                "raw": "0x1d5"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x3d17a9"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x3555"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x35550f"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x3d17a9"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x64ef"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x16df84"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0xbbeb1b"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "v2"
                    },
                    "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                            "type": "Identifier",
                            "name": "Symbol"
                        },
                        "property": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "_0x4e4284"
                            },
                            "arguments": [
                                {
                                    "type": "Literal",
                                    "value": 478,
                                    "raw": "0x1de"
                                }
                            ]
                        }
                    }
                }
            ],
            "kind": "const"
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "v6"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x570525"
                },
                {
                    "type": "Identifier",
                    "name": "_0x256ea0"
                },
                {
                    "type": "Identifier",
                    "name": "_0x4b9c55"
                },
                {
                    "type": "Identifier",
                    "name": "_0x3bb543"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "TryStatement",
                        "block": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x5eca01"
                                            },
                                            "init": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "eval"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "v2"
                                                }
                                            }
                                        }
                                    ],
                                    "kind": "let"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                        {
                                            "type": "VariableDeclarator",
                                            "id": {
                                                "type": "Identifier",
                                                "name": "_0x3f42f5"
                                            },
                                            "init": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                    "type": "Identifier",
                                                    "name": "_0x5eca01"
                                                },
                                                "prefix": false
                                            }
                                        }
                                    ],
                                    "kind": "const"
                                }
                            ]
                        },
                        "handler": {
                            "type": "CatchClause",
                            "param": {
                                "type": "Identifier",
                                "name": "_0x93c23e"
                            },
                            "body": {
                                "type": "BlockStatement",
                                "body": []
                            }
                        },
                        "finalizer": null
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ForStatement",
            "init": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "v17"
                        },
                        "init": {
                            "type": "Literal",
                            "value": 1,
                            "raw": "0x1"
                        }
                    }
                ],
                "kind": "let"
            },
            "test": {
                "type": "BinaryExpression",
                "operator": "<",
                "left": {
                    "type": "Identifier",
                    "name": "v17"
                },
                "right": {
                    "type": "Literal",
                    "value": 10000,
                    "raw": "0x2710"
                }
            },
            "update": {
                "type": "UpdateExpression",
                "operator": "++",
                "argument": {
                    "type": "Identifier",
                    "name": "v17"
                },
                "prefix": false
            },
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "v18"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "v6"
                                    },
                                    "arguments": []
                                }
                            }
                        ],
                        "kind": "const"
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}