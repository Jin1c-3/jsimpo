{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "CallExpression",
                        "callee": {
                            "type": "Identifier",
                            "name": "description"
                        },
                        "arguments": [
                            {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x3fa028"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 296,
                                        "raw": "0x128"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0x4eac"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x552c11"
                },
                {
                    "type": "Identifier",
                    "name": "_0x46e2e0"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0x4eac"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x534de1"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0x4eacaf"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x534de1"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x534de1"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 284,
                                                                "raw": "0x11c"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x2220a7"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x534d"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x534de1"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "var"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x2220a7"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0x4eac"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x552c11"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x46e2e0"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "foo"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x2d203c"
                },
                {
                    "type": "Identifier",
                    "name": "_0x51fb6c"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "Identifier",
                                "name": "_0x2d203c"
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "_0x51fb6c"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "bar"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x7e2428"
                },
                {
                    "type": "Identifier",
                    "name": "_0x4da2ef"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "ThisExpression"
                                    },
                                    "property": {
                                        "type": "Literal",
                                        "value": "f",
                                        "raw": "'f'"
                                    }
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0x7e2428"
                                }
                            },
                            "right": {
                                "type": "Identifier",
                                "name": "_0x4da2ef"
                            }
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "baz"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x38d4ee"
                },
                {
                    "type": "Identifier",
                    "name": "_0xa52ab0"
                },
                {
                    "type": "Identifier",
                    "name": "_0x333576"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "CallExpression",
                            "callee": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                    "type": "Identifier",
                                    "name": "_0x38d4ee"
                                },
                                "property": {
                                    "type": "Literal",
                                    "value": "stuff",
                                    "raw": "'stuff'"
                                }
                            },
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_0xa52ab0"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_0x333576"
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "functionToCall"
                    },
                    "init": {
                        "type": "Identifier",
                        "name": "foo"
                    }
                },
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "offset"
                    },
                    "init": {
                        "type": "Literal",
                        "value": 0,
                        "raw": "0x0"
                    }
                }
            ],
            "kind": "var"
        },
        {
            "type": "ForStatement",
            "init": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": {
                            "type": "Literal",
                            "value": 0,
                            "raw": "0x0"
                        }
                    }
                ],
                "kind": "var"
            },
            "test": {
                "type": "BinaryExpression",
                "operator": "<",
                "left": {
                    "type": "Identifier",
                    "name": "i"
                },
                "right": {
                    "type": "Literal",
                    "value": 1000,
                    "raw": "0x3e8"
                }
            },
            "update": {
                "type": "UpdateExpression",
                "operator": "++",
                "argument": {
                    "type": "Identifier",
                    "name": "i"
                },
                "prefix": true
            },
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                    "type": "Identifier",
                                    "name": "i"
                                },
                                "right": {
                                    "type": "Literal",
                                    "value": 600,
                                    "raw": "0x258"
                                }
                            },
                            "right": {
                                "type": "SequenceExpression",
                                "expressions": [
                                    {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "functionToCall"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "bar"
                                        }
                                    },
                                    {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "offset"
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 42,
                                            "raw": "0x2a"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "object"
                                },
                                "init": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expression": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "stuff",
                                            "raw": "'stuff'"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "functionToCall"
                                    }
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "object"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "f",
                                            "raw": "'f'"
                                        }
                                    },
                                    "right": {
                                        "type": "Literal",
                                        "value": 42,
                                        "raw": "0x2a"
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "shouldBe"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "_0x3fa028"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": 297,
                                                                    "raw": "0x129"
                                                                }
                                                            ]
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": ", ",
                                                        "raw": "',\\x20'"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "0x2"
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "Literal",
                                                "value": ")",
                                                "raw": "')'"
                                            }
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                                "type": "Literal",
                                                "value": "",
                                                "raw": "''"
                                            },
                                            "right": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "offset"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "right": {
                                                        "type": "Literal",
                                                        "value": 2,
                                                        "raw": "0x2"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}