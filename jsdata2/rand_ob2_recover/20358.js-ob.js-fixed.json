{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_classCallCheck"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x5108d8"
                },
                {
                    "type": "Identifier",
                    "name": "_0x1643c2"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x3ad932"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0xc1e5"
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "IfStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "BinaryExpression",
                                "operator": "instanceof",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_0x5108d8"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_0x1643c2"
                                }
                            },
                            "prefix": true
                        },
                        "consequent": {
                            "type": "ThrowStatement",
                            "argument": {
                                "type": "NewExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "TypeError"
                                },
                                "arguments": [
                                    {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_0x3ad932"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Literal",
                                                "value": 339,
                                                "raw": "0x153"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "alternate": null
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "VariableDeclaration",
            "declarations": [
                {
                    "type": "VariableDeclarator",
                    "id": {
                        "type": "Identifier",
                        "name": "Foo"
                    },
                    "init": {
                        "type": "FunctionExpression",
                        "id": {
                            "type": "Identifier",
                            "name": "Foo"
                        },
                        "params": [],
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "Literal",
                                        "value": "use strict",
                                        "raw": "'use strict'"
                                    },
                                    "directive": "use strict"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "_classCallCheck"
                                        },
                                        "arguments": [
                                            {
                                                "type": "ThisExpression"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "Foo"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                    }
                }
            ],
            "kind": "let"
        }
    ],
    "sourceType": "script"
}