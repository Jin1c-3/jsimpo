{
    "type": "Program",
    "body": [
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "conditionPromise"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x23403e"
                },
                {
                    "type": "AssignmentPattern",
                    "left": {
                        "type": "Identifier",
                        "name": "_0x3387ca"
                    },
                    "right": {
                        "type": "Literal",
                        "value": "anonymous condition",
                        "raw": "'anonymous\\x20condition'"
                    }
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0xb9cfea"
                                },
                                "init": {
                                    "type": "Identifier",
                                    "name": "_0xde9f"
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "_0x1adf4f"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                            "type": "Identifier",
                                            "name": "Date"
                                        },
                                        "property": {
                                            "type": "Literal",
                                            "value": "now",
                                            "raw": "'now'"
                                        }
                                    },
                                    "arguments": []
                                }
                            }
                        ],
                        "kind": "const"
                    },
                    {
                        "type": "WhileStatement",
                        "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                },
                                "prefix": true
                            },
                            "prefix": true
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "AwaitExpression",
                                        "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "timeoutPromise"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Literal",
                                                    "value": 100,
                                                    "raw": "0x64"
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "!==",
                                            "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "_0x23403e"
                                                    },
                                                    "property": {
                                                        "type": "Literal",
                                                        "value": "constructor",
                                                        "raw": "'constructor'"
                                                    }
                                                },
                                                "property": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "_0xb9cfea"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Literal",
                                                            "value": 151,
                                                            "raw": "0x97"
                                                        }
                                                    ]
                                                }
                                            },
                                            "right": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "_0xb9cfea"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Literal",
                                                        "value": 152,
                                                        "raw": "0x98"
                                                    }
                                                ]
                                            }
                                        },
                                        "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "_0x23403e"
                                            },
                                            "arguments": []
                                        }
                                    },
                                    "consequent": {
                                        "type": "ReturnStatement",
                                        "argument": null
                                    },
                                    "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "IfStatement",
                                                "test": {
                                                    "type": "AwaitExpression",
                                                    "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0x23403e"
                                                        },
                                                        "arguments": []
                                                    }
                                                },
                                                "consequent": {
                                                    "type": "ReturnStatement",
                                                    "argument": null
                                                },
                                                "alternate": null
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "IfStatement",
                                    "test": {
                                        "type": "BinaryExpression",
                                        "operator": ">",
                                        "left": {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "Date"
                                                    },
                                                    "property": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0xb9cfea"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 153,
                                                                "raw": "0x99"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_0x1adf4f"
                                            }
                                        },
                                        "right": {
                                            "type": "Literal",
                                            "value": 5000,
                                            "raw": "0x1388"
                                        }
                                    },
                                    "consequent": {
                                        "type": "ThrowStatement",
                                        "argument": {
                                            "type": "NewExpression",
                                            "callee": {
                                                "type": "Identifier",
                                                "name": "Error"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "Identifier",
                                                            "name": "_0xb9cfea"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": 154,
                                                                "raw": "0x9a"
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_0x3387ca"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "alternate": null
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": true
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "timeoutPromise"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x549a49"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "Promise"
                            },
                            "arguments": [
                                {
                                    "type": "ArrowFunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x219233"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "global"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "setTimeout",
                                                            "raw": "'setTimeout'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x219233"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x549a49"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "emitterEventPromise"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0xb78cec"
                },
                {
                    "type": "Identifier",
                    "name": "_0x52e633"
                },
                {
                    "type": "AssignmentPattern",
                    "left": {
                        "type": "Identifier",
                        "name": "_0x5061b9"
                    },
                    "right": {
                        "type": "Literal",
                        "value": 15000,
                        "raw": "0x3a98"
                    }
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "NewExpression",
                            "callee": {
                                "type": "Identifier",
                                "name": "Promise"
                            },
                            "arguments": [
                                {
                                    "type": "ArrowFunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x81f0b0"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0xdf1e60"
                                        }
                                    ],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                    {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                            "type": "Identifier",
                                                            "name": "_0x2fa312"
                                                        },
                                                        "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "Identifier",
                                                                "name": "setTimeout"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "ArrowFunctionExpression",
                                                                    "id": null,
                                                                    "params": [],
                                                                    "body": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                            {
                                                                                "type": "VariableDeclaration",
                                                                                "declarations": [
                                                                                    {
                                                                                        "type": "VariableDeclarator",
                                                                                        "id": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x3d2f1a"
                                                                                        },
                                                                                        "init": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0xde9f"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "kind": "const"
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0xdf1e60"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "NewExpression",
                                                                                            "callee": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Error"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                        "type": "BinaryExpression",
                                                                                                        "operator": "+",
                                                                                                        "left": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_0x3d2f1a"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Literal",
                                                                                                                    "value": 155,
                                                                                                                    "raw": "0x9b"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_0x52e633"
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "' event",
                                                                                                        "raw": "'\\x27\\x20event'"
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "generator": false,
                                                                    "expression": false,
                                                                    "async": false
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_0x5061b9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "kind": "const"
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "_0xb78cec"
                                                        },
                                                        "property": {
                                                            "type": "Literal",
                                                            "value": "once",
                                                            "raw": "'once'"
                                                        }
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_0x52e633"
                                                        },
                                                        {
                                                            "type": "ArrowFunctionExpression",
                                                            "id": null,
                                                            "params": [],
                                                            "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "SequenceExpression",
                                                                            "expressions": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "clearTimeout"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "_0x2fa312"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_0x81f0b0"
                                                                                    },
                                                                                    "arguments": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "generator": false,
                                                            "expression": false,
                                                            "async": false
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false,
                                    "async": false
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "FunctionDeclaration",
            "id": {
                "type": "Identifier",
                "name": "_0xde9f"
            },
            "params": [
                {
                    "type": "Identifier",
                    "name": "_0x48a67a"
                },
                {
                    "type": "Identifier",
                    "name": "_0x2d3448"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "ReturnStatement",
                        "argument": {
                            "type": "SequenceExpression",
                            "expressions": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_0xde9f"
                                    },
                                    "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                            {
                                                "type": "Identifier",
                                                "name": "_0x28fe87"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_0xde9fad"
                                            }
                                        ],
                                        "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_0x28fe87"
                                                        },
                                                        "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_0x28fe87"
                                                            },
                                                            "right": {
                                                                "type": "Literal",
                                                                "value": 138,
                                                                "raw": "0x8a"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                                "type": "Identifier",
                                                                "name": "_0x3cd0ef"
                                                            },
                                                            "init": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x28fe"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_0x28fe87"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "kind": "let"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                        "type": "Identifier",
                                                        "name": "_0x3cd0ef"
                                                    }
                                                }
                                            ]
                                        },
                                        "generator": false,
                                        "expression": false,
                                        "async": false
                                    }
                                },
                                {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "_0xde9f"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_0x48a67a"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_0x2d3448"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "generator": false,
            "expression": false,
            "async": false
        },
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "SequenceExpression",
                "expressions": [
                    {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "exports"
                            },
                            "property": {
                                "type": "Literal",
                                "value": "conditionPromise",
                                "raw": "'conditionPromise'"
                            }
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "conditionPromise"
                        }
                    },
                    {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "exports"
                            },
                            "property": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x4eb3f4"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 156,
                                        "raw": "0x9c"
                                    }
                                ]
                            }
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "emitterEventPromise"
                        }
                    },
                    {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                                "type": "Identifier",
                                "name": "exports"
                            },
                            "property": {
                                "type": "CallExpression",
                                "callee": {
                                    "type": "Identifier",
                                    "name": "_0x4eb3f4"
                                },
                                "arguments": [
                                    {
                                        "type": "Literal",
                                        "value": 157,
                                        "raw": "0x9d"
                                    }
                                ]
                            }
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "timeoutPromise"
                        }
                    }
                ]
            }
        }
    ],
    "sourceType": "script"
}