{
    "type": "Program",
    "body": [
        {
            "type": "ForInStatement",
            "left": {
                "type": "VariableDeclaration",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "i"
                        },
                        "init": null
                    }
                ],
                "kind": "var"
            },
            "right": {
                "type": "Identifier",
                "name": "divisors"
            },
            "body": {
                "type": "BlockStatement",
                "body": [
                    {
                        "type": "VariableDeclaration",
                        "declarations": [
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "divisor"
                                },
                                "init": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                        "type": "Identifier",
                                        "name": "divisors"
                                    },
                                    "property": {
                                        "type": "Identifier",
                                        "name": "i"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarator",
                                "id": {
                                    "type": "Identifier",
                                    "name": "mod"
                                },
                                "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                        "type": "Identifier",
                                        "name": "Uint32Mod"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "divisor"
                                        }
                                    ]
                                }
                            }
                        ],
                        "kind": "var"
                    },
                    {
                        "type": "ForStatement",
                        "init": {
                            "type": "VariableDeclaration",
                            "declarations": [
                                {
                                    "type": "VariableDeclarator",
                                    "id": {
                                        "type": "Identifier",
                                        "name": "dividend"
                                    },
                                    "init": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0x0"
                                    }
                                }
                            ],
                            "kind": "var"
                        },
                        "test": {
                            "type": "BinaryExpression",
                            "operator": "<",
                            "left": {
                                "type": "Identifier",
                                "name": "dividend"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 4294967296,
                                "raw": "0x100000000"
                            }
                        },
                        "update": {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                                "type": "Identifier",
                                "name": "dividend"
                            },
                            "right": {
                                "type": "Literal",
                                "value": 3999773,
                                "raw": "0x3d081d"
                            }
                        },
                        "body": {
                            "type": "BlockStatement",
                            "body": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                            "type": "Identifier",
                                            "name": "assertEquals"
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryExpression",
                                                "operator": "|",
                                                "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "%",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "dividend"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "divisor"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Literal",
                                                    "value": 0,
                                                    "raw": "0x0"
                                                }
                                            },
                                            {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "mod"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "dividend"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "each": false
        }
    ],
    "sourceType": "script"
}